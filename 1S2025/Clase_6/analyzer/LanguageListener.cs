//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.13.2
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from Language.g4 by ANTLR 4.13.2

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591
// Ambiguous reference in cref attribute
#pragma warning disable 419

using Antlr4.Runtime.Misc;
using IParseTreeListener = Antlr4.Runtime.Tree.IParseTreeListener;
using IToken = Antlr4.Runtime.IToken;

/// <summary>
/// This interface defines a complete listener for a parse tree produced by
/// <see cref="LanguageParser"/>.
/// </summary>
[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.13.2")]
[System.CLSCompliant(false)]
public interface ILanguageListener : IParseTreeListener {
	/// <summary>
	/// Enter a parse tree produced by <see cref="LanguageParser.program"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterProgram([NotNull] LanguageParser.ProgramContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="LanguageParser.program"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitProgram([NotNull] LanguageParser.ProgramContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>PrintStmt</c>
	/// labeled alternative in <see cref="LanguageParser.dcl"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterPrintStmt([NotNull] LanguageParser.PrintStmtContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>PrintStmt</c>
	/// labeled alternative in <see cref="LanguageParser.dcl"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitPrintStmt([NotNull] LanguageParser.PrintStmtContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>IfStmt</c>
	/// labeled alternative in <see cref="LanguageParser.dcl"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterIfStmt([NotNull] LanguageParser.IfStmtContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>IfStmt</c>
	/// labeled alternative in <see cref="LanguageParser.dcl"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitIfStmt([NotNull] LanguageParser.IfStmtContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>WhileStmt</c>
	/// labeled alternative in <see cref="LanguageParser.dcl"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterWhileStmt([NotNull] LanguageParser.WhileStmtContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>WhileStmt</c>
	/// labeled alternative in <see cref="LanguageParser.dcl"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitWhileStmt([NotNull] LanguageParser.WhileStmtContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>FuncDeclStmt</c>
	/// labeled alternative in <see cref="LanguageParser.dcl"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterFuncDeclStmt([NotNull] LanguageParser.FuncDeclStmtContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>FuncDeclStmt</c>
	/// labeled alternative in <see cref="LanguageParser.dcl"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitFuncDeclStmt([NotNull] LanguageParser.FuncDeclStmtContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>ReturnStmt</c>
	/// labeled alternative in <see cref="LanguageParser.dcl"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterReturnStmt([NotNull] LanguageParser.ReturnStmtContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>ReturnStmt</c>
	/// labeled alternative in <see cref="LanguageParser.dcl"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitReturnStmt([NotNull] LanguageParser.ReturnStmtContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>FuncCallStmt</c>
	/// labeled alternative in <see cref="LanguageParser.dcl"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterFuncCallStmt([NotNull] LanguageParser.FuncCallStmtContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>FuncCallStmt</c>
	/// labeled alternative in <see cref="LanguageParser.dcl"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitFuncCallStmt([NotNull] LanguageParser.FuncCallStmtContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>AsignStmt</c>
	/// labeled alternative in <see cref="LanguageParser.dcl"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterAsignStmt([NotNull] LanguageParser.AsignStmtContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>AsignStmt</c>
	/// labeled alternative in <see cref="LanguageParser.dcl"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitAsignStmt([NotNull] LanguageParser.AsignStmtContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>VarDeclStmt</c>
	/// labeled alternative in <see cref="LanguageParser.dcl"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterVarDeclStmt([NotNull] LanguageParser.VarDeclStmtContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>VarDeclStmt</c>
	/// labeled alternative in <see cref="LanguageParser.dcl"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitVarDeclStmt([NotNull] LanguageParser.VarDeclStmtContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="LanguageParser.block"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterBlock([NotNull] LanguageParser.BlockContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="LanguageParser.block"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitBlock([NotNull] LanguageParser.BlockContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="LanguageParser.varDcl"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterVarDcl([NotNull] LanguageParser.VarDclContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="LanguageParser.varDcl"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitVarDcl([NotNull] LanguageParser.VarDclContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="LanguageParser.varAsign"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterVarAsign([NotNull] LanguageParser.VarAsignContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="LanguageParser.varAsign"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitVarAsign([NotNull] LanguageParser.VarAsignContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="LanguageParser.varCall"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterVarCall([NotNull] LanguageParser.VarCallContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="LanguageParser.varCall"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitVarCall([NotNull] LanguageParser.VarCallContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="LanguageParser.parametros"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterParametros([NotNull] LanguageParser.ParametrosContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="LanguageParser.parametros"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitParametros([NotNull] LanguageParser.ParametrosContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="LanguageParser.param"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterParam([NotNull] LanguageParser.ParamContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="LanguageParser.param"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitParam([NotNull] LanguageParser.ParamContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="LanguageParser.args"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterArgs([NotNull] LanguageParser.ArgsContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="LanguageParser.args"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitArgs([NotNull] LanguageParser.ArgsContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>MulDiv</c>
	/// labeled alternative in <see cref="LanguageParser.expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterMulDiv([NotNull] LanguageParser.MulDivContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>MulDiv</c>
	/// labeled alternative in <see cref="LanguageParser.expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitMulDiv([NotNull] LanguageParser.MulDivContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>AddSub</c>
	/// labeled alternative in <see cref="LanguageParser.expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterAddSub([NotNull] LanguageParser.AddSubContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>AddSub</c>
	/// labeled alternative in <see cref="LanguageParser.expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitAddSub([NotNull] LanguageParser.AddSubContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>Parens</c>
	/// labeled alternative in <see cref="LanguageParser.expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterParens([NotNull] LanguageParser.ParensContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>Parens</c>
	/// labeled alternative in <see cref="LanguageParser.expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitParens([NotNull] LanguageParser.ParensContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>Logical</c>
	/// labeled alternative in <see cref="LanguageParser.expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterLogical([NotNull] LanguageParser.LogicalContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>Logical</c>
	/// labeled alternative in <see cref="LanguageParser.expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitLogical([NotNull] LanguageParser.LogicalContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>String</c>
	/// labeled alternative in <see cref="LanguageParser.expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterString([NotNull] LanguageParser.StringContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>String</c>
	/// labeled alternative in <see cref="LanguageParser.expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitString([NotNull] LanguageParser.StringContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>Double</c>
	/// labeled alternative in <see cref="LanguageParser.expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterDouble([NotNull] LanguageParser.DoubleContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>Double</c>
	/// labeled alternative in <see cref="LanguageParser.expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitDouble([NotNull] LanguageParser.DoubleContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>Integer</c>
	/// labeled alternative in <see cref="LanguageParser.expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterInteger([NotNull] LanguageParser.IntegerContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>Integer</c>
	/// labeled alternative in <see cref="LanguageParser.expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitInteger([NotNull] LanguageParser.IntegerContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>Not</c>
	/// labeled alternative in <see cref="LanguageParser.expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterNot([NotNull] LanguageParser.NotContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>Not</c>
	/// labeled alternative in <see cref="LanguageParser.expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitNot([NotNull] LanguageParser.NotContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>Identifier</c>
	/// labeled alternative in <see cref="LanguageParser.expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterIdentifier([NotNull] LanguageParser.IdentifierContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>Identifier</c>
	/// labeled alternative in <see cref="LanguageParser.expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitIdentifier([NotNull] LanguageParser.IdentifierContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>Compare</c>
	/// labeled alternative in <see cref="LanguageParser.expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterCompare([NotNull] LanguageParser.CompareContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>Compare</c>
	/// labeled alternative in <see cref="LanguageParser.expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitCompare([NotNull] LanguageParser.CompareContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>Negate</c>
	/// labeled alternative in <see cref="LanguageParser.expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterNegate([NotNull] LanguageParser.NegateContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>Negate</c>
	/// labeled alternative in <see cref="LanguageParser.expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitNegate([NotNull] LanguageParser.NegateContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>Boolean</c>
	/// labeled alternative in <see cref="LanguageParser.expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterBoolean([NotNull] LanguageParser.BooleanContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>Boolean</c>
	/// labeled alternative in <see cref="LanguageParser.expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitBoolean([NotNull] LanguageParser.BooleanContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>FuncCallExpr</c>
	/// labeled alternative in <see cref="LanguageParser.expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterFuncCallExpr([NotNull] LanguageParser.FuncCallExprContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>FuncCallExpr</c>
	/// labeled alternative in <see cref="LanguageParser.expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitFuncCallExpr([NotNull] LanguageParser.FuncCallExprContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="LanguageParser.type"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterType([NotNull] LanguageParser.TypeContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="LanguageParser.type"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitType([NotNull] LanguageParser.TypeContext context);
}
