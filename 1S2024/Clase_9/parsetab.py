
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'leftMASMENOSleftPORDIVIDIDOrightUMENOSBREAK CADENA COMA COMMENTBLOCK CONSOLE DIVIDIDO DOSPUNTOS ELSE ENTERO FUNCTION ID IF IGUAL IGUALQUE INTERFACE LET LLAVDER LLAVIZQ LOG MAS MAYQUE MENORIGUAL MENOS MENQUE NIGUALQUE NUMBER PARDER PARIZQ POR PUNTO PUNTOCOMA RETURN STRING TIPONUMBERinit            : instruccionesinstrucciones    : instrucciones instruccioninstrucciones    : instruccion instruccion      : imprimir_instr\n                        | declaracion_instr\n                        | asignacion_instr\n                        | if_instr\n                        | if_else_instr\n                        | funcion_instr\n                        | call_funcion_instr\n                        | interface_instr\n                        | return_instr\n                        | break_instr\n    break_instr     : BREAK PUNTOCOMAreturn_instr     : RETURN expresion PUNTOCOMA\n                        | RETURN PUNTOCOMAinterface_instr : INTERFACE ID LLAVIZQ interface_params PUNTOCOMA LLAVDERinterface_params : interface_params PUNTOCOMA ID DOSPUNTOS expresion\n                        | ID DOSPUNTOS expresionimprimir_instr : CONSOLE PUNTO LOG PARIZQ expresion PARDER PUNTOCOMAdeclaracion_instr : LET ID IGUAL expresion PUNTOCOMAasignacion_instr : ID IGUAL expresion PUNTOCOMAif_instr           : IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER PUNTOCOMAfuncion_instr      : FUNCTION ID PARIZQ ID COMA ID PARDER LLAVIZQ instrucciones LLAVDER PUNTOCOMAcall_funcion_instr      : ID PARIZQ expresion COMA expresion PARDER PUNTOCOMAif_else_instr      : IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER ELSE LLAVIZQ instrucciones LLAVDER PUNTOCOMAexpresion : expresion MAS expresion\n                  | expresion MENOS expresion\n                  | expresion POR expresion\n                  | expresion DIVIDIDO expresionexpresion : expresion MAYQUE expresion\n                  | expresion MENQUE expresion\n                  | expresion IGUALQUE expresion\n                  | expresion NIGUALQUE expresion\n                  | expresion MENORIGUAL expresionexpresion : MENOS expresion %prec UMENOSexpresion : PARIZQ expresion PARDERexpresion    : ENTEROexpresion    : CADENAexpresion    : ID\n                    | ID PUNTO ID\n                    | ID PARIZQ expresion COMA expresion PARDER'
    
_lr_action_items = {'CONSOLE':([0,2,3,4,5,6,7,8,9,10,11,12,13,22,31,37,45,61,80,82,89,93,95,96,101,103,105,106,107,110,111,],[14,14,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-2,-16,-14,-15,-22,-21,14,14,-17,-20,-25,-23,14,14,14,14,-24,-26,]),'LET':([0,2,3,4,5,6,7,8,9,10,11,12,13,22,31,37,45,61,80,82,89,93,95,96,101,103,105,106,107,110,111,],[15,15,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-2,-16,-14,-15,-22,-21,15,15,-17,-20,-25,-23,15,15,15,15,-24,-26,]),'ID':([0,2,3,4,5,6,7,8,9,10,11,12,13,15,18,19,20,22,25,26,27,31,32,33,37,39,43,44,45,46,47,48,49,50,51,52,53,54,57,58,59,61,62,80,82,83,84,85,86,89,93,95,96,99,101,103,105,106,107,110,111,],[16,16,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,24,28,29,36,-2,36,36,36,-16,36,36,-14,36,64,65,-15,36,36,36,36,36,36,36,36,36,77,36,36,-22,36,-21,16,90,36,92,36,16,-17,-20,-25,36,-23,16,16,16,16,-24,-26,]),'IF':([0,2,3,4,5,6,7,8,9,10,11,12,13,22,31,37,45,61,80,82,89,93,95,96,101,103,105,106,107,110,111,],[17,17,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-2,-16,-14,-15,-22,-21,17,17,-17,-20,-25,-23,17,17,17,17,-24,-26,]),'FUNCTION':([0,2,3,4,5,6,7,8,9,10,11,12,13,22,31,37,45,61,80,82,89,93,95,96,101,103,105,106,107,110,111,],[18,18,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-2,-16,-14,-15,-22,-21,18,18,-17,-20,-25,-23,18,18,18,18,-24,-26,]),'INTERFACE':([0,2,3,4,5,6,7,8,9,10,11,12,13,22,31,37,45,61,80,82,89,93,95,96,101,103,105,106,107,110,111,],[19,19,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-2,-16,-14,-15,-22,-21,19,19,-17,-20,-25,-23,19,19,19,19,-24,-26,]),'RETURN':([0,2,3,4,5,6,7,8,9,10,11,12,13,22,31,37,45,61,80,82,89,93,95,96,101,103,105,106,107,110,111,],[20,20,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-2,-16,-14,-15,-22,-21,20,20,-17,-20,-25,-23,20,20,20,20,-24,-26,]),'BREAK':([0,2,3,4,5,6,7,8,9,10,11,12,13,22,31,37,45,61,80,82,89,93,95,96,101,103,105,106,107,110,111,],[21,21,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-2,-16,-14,-15,-22,-21,21,21,-17,-20,-25,-23,21,21,21,21,-24,-26,]),'$end':([1,2,3,4,5,6,7,8,9,10,11,12,13,22,31,37,45,61,80,93,95,96,101,110,111,],[0,-1,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-2,-16,-14,-15,-22,-21,-17,-20,-25,-23,-24,-26,]),'LLAVDER':([3,4,5,6,7,8,9,10,11,12,13,22,31,37,45,61,80,85,89,93,95,96,101,106,107,110,111,],[-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-2,-16,-14,-15,-22,-21,93,97,-17,-20,-25,-23,108,109,-24,-26,]),'PUNTO':([14,36,],[23,57,]),'IGUAL':([16,24,],[25,39,]),'PARIZQ':([16,17,20,25,26,27,28,32,33,36,38,39,46,47,48,49,50,51,52,53,54,58,59,62,84,86,99,],[26,27,33,33,33,33,43,33,33,58,59,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,]),'PUNTOCOMA':([20,21,30,34,35,36,40,55,60,66,67,68,69,70,71,72,73,74,75,76,77,87,88,91,97,100,104,108,109,],[31,37,45,-38,-39,-40,61,-36,80,85,-27,-28,-29,-30,-31,-32,-33,-34,-35,-37,-41,95,96,-19,101,-42,-18,110,111,]),'MENOS':([20,25,26,27,30,32,33,34,35,36,39,40,41,42,46,47,48,49,50,51,52,53,54,55,56,58,59,60,62,67,68,69,70,71,72,73,74,75,76,77,78,79,81,84,86,91,94,99,100,104,],[32,32,32,32,47,32,32,-38,-39,-40,32,47,47,47,32,32,32,32,32,32,32,32,32,-36,47,32,32,47,32,-27,-28,-29,-30,47,47,47,47,47,-37,-41,47,47,47,32,32,47,47,32,-42,47,]),'ENTERO':([20,25,26,27,32,33,39,46,47,48,49,50,51,52,53,54,58,59,62,84,86,99,],[34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,]),'CADENA':([20,25,26,27,32,33,39,46,47,48,49,50,51,52,53,54,58,59,62,84,86,99,],[35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,]),'LOG':([23,],[38,]),'LLAVIZQ':([29,63,98,102,],[44,82,103,105,]),'MAS':([30,34,35,36,40,41,42,55,56,60,67,68,69,70,71,72,73,74,75,76,77,78,79,81,91,94,100,104,],[46,-38,-39,-40,46,46,46,-36,46,46,-27,-28,-29,-30,46,46,46,46,46,-37,-41,46,46,46,46,46,-42,46,]),'POR':([30,34,35,36,40,41,42,55,56,60,67,68,69,70,71,72,73,74,75,76,77,78,79,81,91,94,100,104,],[48,-38,-39,-40,48,48,48,-36,48,48,48,48,-29,-30,48,48,48,48,48,-37,-41,48,48,48,48,48,-42,48,]),'DIVIDIDO':([30,34,35,36,40,41,42,55,56,60,67,68,69,70,71,72,73,74,75,76,77,78,79,81,91,94,100,104,],[49,-38,-39,-40,49,49,49,-36,49,49,49,49,-29,-30,49,49,49,49,49,-37,-41,49,49,49,49,49,-42,49,]),'MAYQUE':([30,34,35,36,40,41,42,55,56,60,67,68,69,70,71,72,73,74,75,76,77,78,79,81,91,94,100,104,],[50,-38,-39,-40,50,50,50,-36,50,50,-27,-28,-29,-30,50,50,50,50,50,-37,-41,50,50,50,50,50,-42,50,]),'MENQUE':([30,34,35,36,40,41,42,55,56,60,67,68,69,70,71,72,73,74,75,76,77,78,79,81,91,94,100,104,],[51,-38,-39,-40,51,51,51,-36,51,51,-27,-28,-29,-30,51,51,51,51,51,-37,-41,51,51,51,51,51,-42,51,]),'IGUALQUE':([30,34,35,36,40,41,42,55,56,60,67,68,69,70,71,72,73,74,75,76,77,78,79,81,91,94,100,104,],[52,-38,-39,-40,52,52,52,-36,52,52,-27,-28,-29,-30,52,52,52,52,52,-37,-41,52,52,52,52,52,-42,52,]),'NIGUALQUE':([30,34,35,36,40,41,42,55,56,60,67,68,69,70,71,72,73,74,75,76,77,78,79,81,91,94,100,104,],[53,-38,-39,-40,53,53,53,-36,53,53,-27,-28,-29,-30,53,53,53,53,53,-37,-41,53,53,53,53,53,-42,53,]),'MENORIGUAL':([30,34,35,36,40,41,42,55,56,60,67,68,69,70,71,72,73,74,75,76,77,78,79,81,91,94,100,104,],[54,-38,-39,-40,54,54,54,-36,54,54,-27,-28,-29,-30,54,54,54,54,54,-37,-41,54,54,54,54,54,-42,54,]),'COMA':([34,35,36,41,55,64,67,68,69,70,71,72,73,74,75,76,77,78,100,],[-38,-39,-40,62,-36,83,-27,-28,-29,-30,-31,-32,-33,-34,-35,-37,-41,86,-42,]),'PARDER':([34,35,36,42,55,56,67,68,69,70,71,72,73,74,75,76,77,79,81,90,94,100,],[-38,-39,-40,63,-36,76,-27,-28,-29,-30,-31,-32,-33,-34,-35,-37,-41,87,88,98,100,-42,]),'DOSPUNTOS':([65,92,],[84,99,]),'ELSE':([97,],[102,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'init':([0,],[1,]),'instrucciones':([0,82,103,105,],[2,89,106,107,]),'instruccion':([0,2,82,89,103,105,106,107,],[3,22,3,22,3,3,22,22,]),'imprimir_instr':([0,2,82,89,103,105,106,107,],[4,4,4,4,4,4,4,4,]),'declaracion_instr':([0,2,82,89,103,105,106,107,],[5,5,5,5,5,5,5,5,]),'asignacion_instr':([0,2,82,89,103,105,106,107,],[6,6,6,6,6,6,6,6,]),'if_instr':([0,2,82,89,103,105,106,107,],[7,7,7,7,7,7,7,7,]),'if_else_instr':([0,2,82,89,103,105,106,107,],[8,8,8,8,8,8,8,8,]),'funcion_instr':([0,2,82,89,103,105,106,107,],[9,9,9,9,9,9,9,9,]),'call_funcion_instr':([0,2,82,89,103,105,106,107,],[10,10,10,10,10,10,10,10,]),'interface_instr':([0,2,82,89,103,105,106,107,],[11,11,11,11,11,11,11,11,]),'return_instr':([0,2,82,89,103,105,106,107,],[12,12,12,12,12,12,12,12,]),'break_instr':([0,2,82,89,103,105,106,107,],[13,13,13,13,13,13,13,13,]),'expresion':([20,25,26,27,32,33,39,46,47,48,49,50,51,52,53,54,58,59,62,84,86,99,],[30,40,41,42,55,56,60,67,68,69,70,71,72,73,74,75,78,79,81,91,94,104,]),'interface_params':([44,],[66,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> init","S'",1,None,None,None),
  ('init -> instrucciones','init',1,'p_init','gramatica.py',120),
  ('instrucciones -> instrucciones instruccion','instrucciones',2,'p_instrucciones_lista','gramatica.py',124),
  ('instrucciones -> instruccion','instrucciones',1,'p_instrucciones_instruccion','gramatica.py',129),
  ('instruccion -> imprimir_instr','instruccion',1,'p_instruccion','gramatica.py',133),
  ('instruccion -> declaracion_instr','instruccion',1,'p_instruccion','gramatica.py',134),
  ('instruccion -> asignacion_instr','instruccion',1,'p_instruccion','gramatica.py',135),
  ('instruccion -> if_instr','instruccion',1,'p_instruccion','gramatica.py',136),
  ('instruccion -> if_else_instr','instruccion',1,'p_instruccion','gramatica.py',137),
  ('instruccion -> funcion_instr','instruccion',1,'p_instruccion','gramatica.py',138),
  ('instruccion -> call_funcion_instr','instruccion',1,'p_instruccion','gramatica.py',139),
  ('instruccion -> interface_instr','instruccion',1,'p_instruccion','gramatica.py',140),
  ('instruccion -> return_instr','instruccion',1,'p_instruccion','gramatica.py',141),
  ('instruccion -> break_instr','instruccion',1,'p_instruccion','gramatica.py',142),
  ('break_instr -> BREAK PUNTOCOMA','break_instr',2,'p_instruccion_break','gramatica.py',147),
  ('return_instr -> RETURN expresion PUNTOCOMA','return_instr',3,'p_instruccion_retorno','gramatica.py',151),
  ('return_instr -> RETURN PUNTOCOMA','return_instr',2,'p_instruccion_retorno','gramatica.py',152),
  ('interface_instr -> INTERFACE ID LLAVIZQ interface_params PUNTOCOMA LLAVDER','interface_instr',6,'p_instruccion_interface','gramatica.py',159),
  ('interface_params -> interface_params PUNTOCOMA ID DOSPUNTOS expresion','interface_params',5,'p_instruccion_interface_params','gramatica.py',163),
  ('interface_params -> ID DOSPUNTOS expresion','interface_params',3,'p_instruccion_interface_params','gramatica.py',164),
  ('imprimir_instr -> CONSOLE PUNTO LOG PARIZQ expresion PARDER PUNTOCOMA','imprimir_instr',7,'p_instruccion_console','gramatica.py',182),
  ('declaracion_instr -> LET ID IGUAL expresion PUNTOCOMA','declaracion_instr',5,'p_instruccion_declaracion','gramatica.py',186),
  ('asignacion_instr -> ID IGUAL expresion PUNTOCOMA','asignacion_instr',4,'p_instruccion_asignacion','gramatica.py',190),
  ('if_instr -> IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER PUNTOCOMA','if_instr',8,'p_if_instr','gramatica.py',194),
  ('funcion_instr -> FUNCTION ID PARIZQ ID COMA ID PARDER LLAVIZQ instrucciones LLAVDER PUNTOCOMA','funcion_instr',11,'p_funcion_instr','gramatica.py',198),
  ('call_funcion_instr -> ID PARIZQ expresion COMA expresion PARDER PUNTOCOMA','call_funcion_instr',7,'p_call_funcion_instr','gramatica.py',203),
  ('if_else_instr -> IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER ELSE LLAVIZQ instrucciones LLAVDER PUNTOCOMA','if_else_instr',12,'p_if_else_instr','gramatica.py',208),
  ('expresion -> expresion MAS expresion','expresion',3,'p_expresion_binaria','gramatica.py',212),
  ('expresion -> expresion MENOS expresion','expresion',3,'p_expresion_binaria','gramatica.py',213),
  ('expresion -> expresion POR expresion','expresion',3,'p_expresion_binaria','gramatica.py',214),
  ('expresion -> expresion DIVIDIDO expresion','expresion',3,'p_expresion_binaria','gramatica.py',215),
  ('expresion -> expresion MAYQUE expresion','expresion',3,'p_expresion_logica','gramatica.py',222),
  ('expresion -> expresion MENQUE expresion','expresion',3,'p_expresion_logica','gramatica.py',223),
  ('expresion -> expresion IGUALQUE expresion','expresion',3,'p_expresion_logica','gramatica.py',224),
  ('expresion -> expresion NIGUALQUE expresion','expresion',3,'p_expresion_logica','gramatica.py',225),
  ('expresion -> expresion MENORIGUAL expresion','expresion',3,'p_expresion_logica','gramatica.py',226),
  ('expresion -> MENOS expresion','expresion',2,'p_expresion_unaria','gramatica.py',234),
  ('expresion -> PARIZQ expresion PARDER','expresion',3,'p_expresion_agrupacion','gramatica.py',238),
  ('expresion -> ENTERO','expresion',1,'p_expresion_number','gramatica.py',242),
  ('expresion -> CADENA','expresion',1,'p_expresion_cadena','gramatica.py',246),
  ('expresion -> ID','expresion',1,'p_expresion_id','gramatica.py',250),
  ('expresion -> ID PUNTO ID','expresion',3,'p_expresion_id','gramatica.py',251),
  ('expresion -> ID PARIZQ expresion COMA expresion PARDER','expresion',6,'p_expresion_id','gramatica.py',252),
]
