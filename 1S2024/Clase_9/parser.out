Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    COMMENTBLOCK
    NUMBER
    STRING
    TIPONUMBER

Grammar

Rule 0     S' -> init
Rule 1     init -> instrucciones
Rule 2     instrucciones -> instrucciones instruccion
Rule 3     instrucciones -> instruccion
Rule 4     instruccion -> imprimir_instr
Rule 5     instruccion -> declaracion_instr
Rule 6     instruccion -> asignacion_instr
Rule 7     instruccion -> if_instr
Rule 8     instruccion -> if_else_instr
Rule 9     instruccion -> funcion_instr
Rule 10    instruccion -> call_funcion_instr
Rule 11    instruccion -> interface_instr
Rule 12    instruccion -> return_instr
Rule 13    instruccion -> break_instr
Rule 14    break_instr -> BREAK PUNTOCOMA
Rule 15    return_instr -> RETURN expresion PUNTOCOMA
Rule 16    return_instr -> RETURN PUNTOCOMA
Rule 17    interface_instr -> INTERFACE ID LLAVIZQ interface_params PUNTOCOMA LLAVDER
Rule 18    interface_params -> interface_params PUNTOCOMA ID DOSPUNTOS expresion
Rule 19    interface_params -> ID DOSPUNTOS expresion
Rule 20    imprimir_instr -> CONSOLE PUNTO LOG PARIZQ expresion PARDER PUNTOCOMA
Rule 21    declaracion_instr -> LET ID IGUAL expresion PUNTOCOMA
Rule 22    asignacion_instr -> ID IGUAL expresion PUNTOCOMA
Rule 23    if_instr -> IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER PUNTOCOMA
Rule 24    funcion_instr -> FUNCTION ID PARIZQ ID COMA ID PARDER LLAVIZQ instrucciones LLAVDER PUNTOCOMA
Rule 25    call_funcion_instr -> ID PARIZQ expresion COMA expresion PARDER PUNTOCOMA
Rule 26    if_else_instr -> IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER ELSE LLAVIZQ instrucciones LLAVDER PUNTOCOMA
Rule 27    expresion -> expresion MAS expresion
Rule 28    expresion -> expresion MENOS expresion
Rule 29    expresion -> expresion POR expresion
Rule 30    expresion -> expresion DIVIDIDO expresion
Rule 31    expresion -> expresion MAYQUE expresion
Rule 32    expresion -> expresion MENQUE expresion
Rule 33    expresion -> expresion IGUALQUE expresion
Rule 34    expresion -> expresion NIGUALQUE expresion
Rule 35    expresion -> expresion MENORIGUAL expresion
Rule 36    expresion -> MENOS expresion
Rule 37    expresion -> PARIZQ expresion PARDER
Rule 38    expresion -> ENTERO
Rule 39    expresion -> CADENA
Rule 40    expresion -> ID
Rule 41    expresion -> ID PUNTO ID
Rule 42    expresion -> ID PARIZQ expresion COMA expresion PARDER

Terminals, with rules where they appear

BREAK                : 14
CADENA               : 39
COMA                 : 24 25 42
COMMENTBLOCK         : 
CONSOLE              : 20
DIVIDIDO             : 30
DOSPUNTOS            : 18 19
ELSE                 : 26
ENTERO               : 38
FUNCTION             : 24
ID                   : 17 18 19 21 22 24 24 24 25 40 41 41 42
IF                   : 23 26
IGUAL                : 21 22
IGUALQUE             : 33
INTERFACE            : 17
LET                  : 21
LLAVDER              : 17 23 24 26 26
LLAVIZQ              : 17 23 24 26 26
LOG                  : 20
MAS                  : 27
MAYQUE               : 31
MENORIGUAL           : 35
MENOS                : 28 36
MENQUE               : 32
NIGUALQUE            : 34
NUMBER               : 
PARDER               : 20 23 24 25 26 37 42
PARIZQ               : 20 23 24 25 26 37 42
POR                  : 29
PUNTO                : 20 41
PUNTOCOMA            : 14 15 16 17 18 20 21 22 23 24 25 26
RETURN               : 15 16
STRING               : 
TIPONUMBER           : 
error                : 

Nonterminals, with rules where they appear

asignacion_instr     : 6
break_instr          : 13
call_funcion_instr   : 10
declaracion_instr    : 5
expresion            : 15 18 19 20 21 22 23 25 25 26 27 27 28 28 29 29 30 30 31 31 32 32 33 33 34 34 35 35 36 37 42 42
funcion_instr        : 9
if_else_instr        : 8
if_instr             : 7
imprimir_instr       : 4
init                 : 0
instruccion          : 2 3
instrucciones        : 1 2 23 24 26 26
interface_instr      : 11
interface_params     : 17 18
return_instr         : 12

Parsing method: LALR

state 0

    (0) S' -> . init
    (1) init -> . instrucciones
    (2) instrucciones -> . instrucciones instruccion
    (3) instrucciones -> . instruccion
    (4) instruccion -> . imprimir_instr
    (5) instruccion -> . declaracion_instr
    (6) instruccion -> . asignacion_instr
    (7) instruccion -> . if_instr
    (8) instruccion -> . if_else_instr
    (9) instruccion -> . funcion_instr
    (10) instruccion -> . call_funcion_instr
    (11) instruccion -> . interface_instr
    (12) instruccion -> . return_instr
    (13) instruccion -> . break_instr
    (20) imprimir_instr -> . CONSOLE PUNTO LOG PARIZQ expresion PARDER PUNTOCOMA
    (21) declaracion_instr -> . LET ID IGUAL expresion PUNTOCOMA
    (22) asignacion_instr -> . ID IGUAL expresion PUNTOCOMA
    (23) if_instr -> . IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER PUNTOCOMA
    (26) if_else_instr -> . IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER ELSE LLAVIZQ instrucciones LLAVDER PUNTOCOMA
    (24) funcion_instr -> . FUNCTION ID PARIZQ ID COMA ID PARDER LLAVIZQ instrucciones LLAVDER PUNTOCOMA
    (25) call_funcion_instr -> . ID PARIZQ expresion COMA expresion PARDER PUNTOCOMA
    (17) interface_instr -> . INTERFACE ID LLAVIZQ interface_params PUNTOCOMA LLAVDER
    (15) return_instr -> . RETURN expresion PUNTOCOMA
    (16) return_instr -> . RETURN PUNTOCOMA
    (14) break_instr -> . BREAK PUNTOCOMA

    CONSOLE         shift and go to state 14
    LET             shift and go to state 15
    ID              shift and go to state 16
    IF              shift and go to state 17
    FUNCTION        shift and go to state 18
    INTERFACE       shift and go to state 19
    RETURN          shift and go to state 20
    BREAK           shift and go to state 21

    init                           shift and go to state 1
    instrucciones                  shift and go to state 2
    instruccion                    shift and go to state 3
    imprimir_instr                 shift and go to state 4
    declaracion_instr              shift and go to state 5
    asignacion_instr               shift and go to state 6
    if_instr                       shift and go to state 7
    if_else_instr                  shift and go to state 8
    funcion_instr                  shift and go to state 9
    call_funcion_instr             shift and go to state 10
    interface_instr                shift and go to state 11
    return_instr                   shift and go to state 12
    break_instr                    shift and go to state 13

state 1

    (0) S' -> init .



state 2

    (1) init -> instrucciones .
    (2) instrucciones -> instrucciones . instruccion
    (4) instruccion -> . imprimir_instr
    (5) instruccion -> . declaracion_instr
    (6) instruccion -> . asignacion_instr
    (7) instruccion -> . if_instr
    (8) instruccion -> . if_else_instr
    (9) instruccion -> . funcion_instr
    (10) instruccion -> . call_funcion_instr
    (11) instruccion -> . interface_instr
    (12) instruccion -> . return_instr
    (13) instruccion -> . break_instr
    (20) imprimir_instr -> . CONSOLE PUNTO LOG PARIZQ expresion PARDER PUNTOCOMA
    (21) declaracion_instr -> . LET ID IGUAL expresion PUNTOCOMA
    (22) asignacion_instr -> . ID IGUAL expresion PUNTOCOMA
    (23) if_instr -> . IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER PUNTOCOMA
    (26) if_else_instr -> . IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER ELSE LLAVIZQ instrucciones LLAVDER PUNTOCOMA
    (24) funcion_instr -> . FUNCTION ID PARIZQ ID COMA ID PARDER LLAVIZQ instrucciones LLAVDER PUNTOCOMA
    (25) call_funcion_instr -> . ID PARIZQ expresion COMA expresion PARDER PUNTOCOMA
    (17) interface_instr -> . INTERFACE ID LLAVIZQ interface_params PUNTOCOMA LLAVDER
    (15) return_instr -> . RETURN expresion PUNTOCOMA
    (16) return_instr -> . RETURN PUNTOCOMA
    (14) break_instr -> . BREAK PUNTOCOMA

    $end            reduce using rule 1 (init -> instrucciones .)
    CONSOLE         shift and go to state 14
    LET             shift and go to state 15
    ID              shift and go to state 16
    IF              shift and go to state 17
    FUNCTION        shift and go to state 18
    INTERFACE       shift and go to state 19
    RETURN          shift and go to state 20
    BREAK           shift and go to state 21

    instruccion                    shift and go to state 22
    imprimir_instr                 shift and go to state 4
    declaracion_instr              shift and go to state 5
    asignacion_instr               shift and go to state 6
    if_instr                       shift and go to state 7
    if_else_instr                  shift and go to state 8
    funcion_instr                  shift and go to state 9
    call_funcion_instr             shift and go to state 10
    interface_instr                shift and go to state 11
    return_instr                   shift and go to state 12
    break_instr                    shift and go to state 13

state 3

    (3) instrucciones -> instruccion .

    CONSOLE         reduce using rule 3 (instrucciones -> instruccion .)
    LET             reduce using rule 3 (instrucciones -> instruccion .)
    ID              reduce using rule 3 (instrucciones -> instruccion .)
    IF              reduce using rule 3 (instrucciones -> instruccion .)
    FUNCTION        reduce using rule 3 (instrucciones -> instruccion .)
    INTERFACE       reduce using rule 3 (instrucciones -> instruccion .)
    RETURN          reduce using rule 3 (instrucciones -> instruccion .)
    BREAK           reduce using rule 3 (instrucciones -> instruccion .)
    $end            reduce using rule 3 (instrucciones -> instruccion .)
    LLAVDER         reduce using rule 3 (instrucciones -> instruccion .)


state 4

    (4) instruccion -> imprimir_instr .

    CONSOLE         reduce using rule 4 (instruccion -> imprimir_instr .)
    LET             reduce using rule 4 (instruccion -> imprimir_instr .)
    ID              reduce using rule 4 (instruccion -> imprimir_instr .)
    IF              reduce using rule 4 (instruccion -> imprimir_instr .)
    FUNCTION        reduce using rule 4 (instruccion -> imprimir_instr .)
    INTERFACE       reduce using rule 4 (instruccion -> imprimir_instr .)
    RETURN          reduce using rule 4 (instruccion -> imprimir_instr .)
    BREAK           reduce using rule 4 (instruccion -> imprimir_instr .)
    $end            reduce using rule 4 (instruccion -> imprimir_instr .)
    LLAVDER         reduce using rule 4 (instruccion -> imprimir_instr .)


state 5

    (5) instruccion -> declaracion_instr .

    CONSOLE         reduce using rule 5 (instruccion -> declaracion_instr .)
    LET             reduce using rule 5 (instruccion -> declaracion_instr .)
    ID              reduce using rule 5 (instruccion -> declaracion_instr .)
    IF              reduce using rule 5 (instruccion -> declaracion_instr .)
    FUNCTION        reduce using rule 5 (instruccion -> declaracion_instr .)
    INTERFACE       reduce using rule 5 (instruccion -> declaracion_instr .)
    RETURN          reduce using rule 5 (instruccion -> declaracion_instr .)
    BREAK           reduce using rule 5 (instruccion -> declaracion_instr .)
    $end            reduce using rule 5 (instruccion -> declaracion_instr .)
    LLAVDER         reduce using rule 5 (instruccion -> declaracion_instr .)


state 6

    (6) instruccion -> asignacion_instr .

    CONSOLE         reduce using rule 6 (instruccion -> asignacion_instr .)
    LET             reduce using rule 6 (instruccion -> asignacion_instr .)
    ID              reduce using rule 6 (instruccion -> asignacion_instr .)
    IF              reduce using rule 6 (instruccion -> asignacion_instr .)
    FUNCTION        reduce using rule 6 (instruccion -> asignacion_instr .)
    INTERFACE       reduce using rule 6 (instruccion -> asignacion_instr .)
    RETURN          reduce using rule 6 (instruccion -> asignacion_instr .)
    BREAK           reduce using rule 6 (instruccion -> asignacion_instr .)
    $end            reduce using rule 6 (instruccion -> asignacion_instr .)
    LLAVDER         reduce using rule 6 (instruccion -> asignacion_instr .)


state 7

    (7) instruccion -> if_instr .

    CONSOLE         reduce using rule 7 (instruccion -> if_instr .)
    LET             reduce using rule 7 (instruccion -> if_instr .)
    ID              reduce using rule 7 (instruccion -> if_instr .)
    IF              reduce using rule 7 (instruccion -> if_instr .)
    FUNCTION        reduce using rule 7 (instruccion -> if_instr .)
    INTERFACE       reduce using rule 7 (instruccion -> if_instr .)
    RETURN          reduce using rule 7 (instruccion -> if_instr .)
    BREAK           reduce using rule 7 (instruccion -> if_instr .)
    $end            reduce using rule 7 (instruccion -> if_instr .)
    LLAVDER         reduce using rule 7 (instruccion -> if_instr .)


state 8

    (8) instruccion -> if_else_instr .

    CONSOLE         reduce using rule 8 (instruccion -> if_else_instr .)
    LET             reduce using rule 8 (instruccion -> if_else_instr .)
    ID              reduce using rule 8 (instruccion -> if_else_instr .)
    IF              reduce using rule 8 (instruccion -> if_else_instr .)
    FUNCTION        reduce using rule 8 (instruccion -> if_else_instr .)
    INTERFACE       reduce using rule 8 (instruccion -> if_else_instr .)
    RETURN          reduce using rule 8 (instruccion -> if_else_instr .)
    BREAK           reduce using rule 8 (instruccion -> if_else_instr .)
    $end            reduce using rule 8 (instruccion -> if_else_instr .)
    LLAVDER         reduce using rule 8 (instruccion -> if_else_instr .)


state 9

    (9) instruccion -> funcion_instr .

    CONSOLE         reduce using rule 9 (instruccion -> funcion_instr .)
    LET             reduce using rule 9 (instruccion -> funcion_instr .)
    ID              reduce using rule 9 (instruccion -> funcion_instr .)
    IF              reduce using rule 9 (instruccion -> funcion_instr .)
    FUNCTION        reduce using rule 9 (instruccion -> funcion_instr .)
    INTERFACE       reduce using rule 9 (instruccion -> funcion_instr .)
    RETURN          reduce using rule 9 (instruccion -> funcion_instr .)
    BREAK           reduce using rule 9 (instruccion -> funcion_instr .)
    $end            reduce using rule 9 (instruccion -> funcion_instr .)
    LLAVDER         reduce using rule 9 (instruccion -> funcion_instr .)


state 10

    (10) instruccion -> call_funcion_instr .

    CONSOLE         reduce using rule 10 (instruccion -> call_funcion_instr .)
    LET             reduce using rule 10 (instruccion -> call_funcion_instr .)
    ID              reduce using rule 10 (instruccion -> call_funcion_instr .)
    IF              reduce using rule 10 (instruccion -> call_funcion_instr .)
    FUNCTION        reduce using rule 10 (instruccion -> call_funcion_instr .)
    INTERFACE       reduce using rule 10 (instruccion -> call_funcion_instr .)
    RETURN          reduce using rule 10 (instruccion -> call_funcion_instr .)
    BREAK           reduce using rule 10 (instruccion -> call_funcion_instr .)
    $end            reduce using rule 10 (instruccion -> call_funcion_instr .)
    LLAVDER         reduce using rule 10 (instruccion -> call_funcion_instr .)


state 11

    (11) instruccion -> interface_instr .

    CONSOLE         reduce using rule 11 (instruccion -> interface_instr .)
    LET             reduce using rule 11 (instruccion -> interface_instr .)
    ID              reduce using rule 11 (instruccion -> interface_instr .)
    IF              reduce using rule 11 (instruccion -> interface_instr .)
    FUNCTION        reduce using rule 11 (instruccion -> interface_instr .)
    INTERFACE       reduce using rule 11 (instruccion -> interface_instr .)
    RETURN          reduce using rule 11 (instruccion -> interface_instr .)
    BREAK           reduce using rule 11 (instruccion -> interface_instr .)
    $end            reduce using rule 11 (instruccion -> interface_instr .)
    LLAVDER         reduce using rule 11 (instruccion -> interface_instr .)


state 12

    (12) instruccion -> return_instr .

    CONSOLE         reduce using rule 12 (instruccion -> return_instr .)
    LET             reduce using rule 12 (instruccion -> return_instr .)
    ID              reduce using rule 12 (instruccion -> return_instr .)
    IF              reduce using rule 12 (instruccion -> return_instr .)
    FUNCTION        reduce using rule 12 (instruccion -> return_instr .)
    INTERFACE       reduce using rule 12 (instruccion -> return_instr .)
    RETURN          reduce using rule 12 (instruccion -> return_instr .)
    BREAK           reduce using rule 12 (instruccion -> return_instr .)
    $end            reduce using rule 12 (instruccion -> return_instr .)
    LLAVDER         reduce using rule 12 (instruccion -> return_instr .)


state 13

    (13) instruccion -> break_instr .

    CONSOLE         reduce using rule 13 (instruccion -> break_instr .)
    LET             reduce using rule 13 (instruccion -> break_instr .)
    ID              reduce using rule 13 (instruccion -> break_instr .)
    IF              reduce using rule 13 (instruccion -> break_instr .)
    FUNCTION        reduce using rule 13 (instruccion -> break_instr .)
    INTERFACE       reduce using rule 13 (instruccion -> break_instr .)
    RETURN          reduce using rule 13 (instruccion -> break_instr .)
    BREAK           reduce using rule 13 (instruccion -> break_instr .)
    $end            reduce using rule 13 (instruccion -> break_instr .)
    LLAVDER         reduce using rule 13 (instruccion -> break_instr .)


state 14

    (20) imprimir_instr -> CONSOLE . PUNTO LOG PARIZQ expresion PARDER PUNTOCOMA

    PUNTO           shift and go to state 23


state 15

    (21) declaracion_instr -> LET . ID IGUAL expresion PUNTOCOMA

    ID              shift and go to state 24


state 16

    (22) asignacion_instr -> ID . IGUAL expresion PUNTOCOMA
    (25) call_funcion_instr -> ID . PARIZQ expresion COMA expresion PARDER PUNTOCOMA

    IGUAL           shift and go to state 25
    PARIZQ          shift and go to state 26


state 17

    (23) if_instr -> IF . PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER PUNTOCOMA
    (26) if_else_instr -> IF . PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER ELSE LLAVIZQ instrucciones LLAVDER PUNTOCOMA

    PARIZQ          shift and go to state 27


state 18

    (24) funcion_instr -> FUNCTION . ID PARIZQ ID COMA ID PARDER LLAVIZQ instrucciones LLAVDER PUNTOCOMA

    ID              shift and go to state 28


state 19

    (17) interface_instr -> INTERFACE . ID LLAVIZQ interface_params PUNTOCOMA LLAVDER

    ID              shift and go to state 29


state 20

    (15) return_instr -> RETURN . expresion PUNTOCOMA
    (16) return_instr -> RETURN . PUNTOCOMA
    (27) expresion -> . expresion MAS expresion
    (28) expresion -> . expresion MENOS expresion
    (29) expresion -> . expresion POR expresion
    (30) expresion -> . expresion DIVIDIDO expresion
    (31) expresion -> . expresion MAYQUE expresion
    (32) expresion -> . expresion MENQUE expresion
    (33) expresion -> . expresion IGUALQUE expresion
    (34) expresion -> . expresion NIGUALQUE expresion
    (35) expresion -> . expresion MENORIGUAL expresion
    (36) expresion -> . MENOS expresion
    (37) expresion -> . PARIZQ expresion PARDER
    (38) expresion -> . ENTERO
    (39) expresion -> . CADENA
    (40) expresion -> . ID
    (41) expresion -> . ID PUNTO ID
    (42) expresion -> . ID PARIZQ expresion COMA expresion PARDER

    PUNTOCOMA       shift and go to state 31
    MENOS           shift and go to state 32
    PARIZQ          shift and go to state 33
    ENTERO          shift and go to state 34
    CADENA          shift and go to state 35
    ID              shift and go to state 36

    expresion                      shift and go to state 30

state 21

    (14) break_instr -> BREAK . PUNTOCOMA

    PUNTOCOMA       shift and go to state 37


state 22

    (2) instrucciones -> instrucciones instruccion .

    CONSOLE         reduce using rule 2 (instrucciones -> instrucciones instruccion .)
    LET             reduce using rule 2 (instrucciones -> instrucciones instruccion .)
    ID              reduce using rule 2 (instrucciones -> instrucciones instruccion .)
    IF              reduce using rule 2 (instrucciones -> instrucciones instruccion .)
    FUNCTION        reduce using rule 2 (instrucciones -> instrucciones instruccion .)
    INTERFACE       reduce using rule 2 (instrucciones -> instrucciones instruccion .)
    RETURN          reduce using rule 2 (instrucciones -> instrucciones instruccion .)
    BREAK           reduce using rule 2 (instrucciones -> instrucciones instruccion .)
    $end            reduce using rule 2 (instrucciones -> instrucciones instruccion .)
    LLAVDER         reduce using rule 2 (instrucciones -> instrucciones instruccion .)


state 23

    (20) imprimir_instr -> CONSOLE PUNTO . LOG PARIZQ expresion PARDER PUNTOCOMA

    LOG             shift and go to state 38


state 24

    (21) declaracion_instr -> LET ID . IGUAL expresion PUNTOCOMA

    IGUAL           shift and go to state 39


state 25

    (22) asignacion_instr -> ID IGUAL . expresion PUNTOCOMA
    (27) expresion -> . expresion MAS expresion
    (28) expresion -> . expresion MENOS expresion
    (29) expresion -> . expresion POR expresion
    (30) expresion -> . expresion DIVIDIDO expresion
    (31) expresion -> . expresion MAYQUE expresion
    (32) expresion -> . expresion MENQUE expresion
    (33) expresion -> . expresion IGUALQUE expresion
    (34) expresion -> . expresion NIGUALQUE expresion
    (35) expresion -> . expresion MENORIGUAL expresion
    (36) expresion -> . MENOS expresion
    (37) expresion -> . PARIZQ expresion PARDER
    (38) expresion -> . ENTERO
    (39) expresion -> . CADENA
    (40) expresion -> . ID
    (41) expresion -> . ID PUNTO ID
    (42) expresion -> . ID PARIZQ expresion COMA expresion PARDER

    MENOS           shift and go to state 32
    PARIZQ          shift and go to state 33
    ENTERO          shift and go to state 34
    CADENA          shift and go to state 35
    ID              shift and go to state 36

    expresion                      shift and go to state 40

state 26

    (25) call_funcion_instr -> ID PARIZQ . expresion COMA expresion PARDER PUNTOCOMA
    (27) expresion -> . expresion MAS expresion
    (28) expresion -> . expresion MENOS expresion
    (29) expresion -> . expresion POR expresion
    (30) expresion -> . expresion DIVIDIDO expresion
    (31) expresion -> . expresion MAYQUE expresion
    (32) expresion -> . expresion MENQUE expresion
    (33) expresion -> . expresion IGUALQUE expresion
    (34) expresion -> . expresion NIGUALQUE expresion
    (35) expresion -> . expresion MENORIGUAL expresion
    (36) expresion -> . MENOS expresion
    (37) expresion -> . PARIZQ expresion PARDER
    (38) expresion -> . ENTERO
    (39) expresion -> . CADENA
    (40) expresion -> . ID
    (41) expresion -> . ID PUNTO ID
    (42) expresion -> . ID PARIZQ expresion COMA expresion PARDER

    MENOS           shift and go to state 32
    PARIZQ          shift and go to state 33
    ENTERO          shift and go to state 34
    CADENA          shift and go to state 35
    ID              shift and go to state 36

    expresion                      shift and go to state 41

state 27

    (23) if_instr -> IF PARIZQ . expresion PARDER LLAVIZQ instrucciones LLAVDER PUNTOCOMA
    (26) if_else_instr -> IF PARIZQ . expresion PARDER LLAVIZQ instrucciones LLAVDER ELSE LLAVIZQ instrucciones LLAVDER PUNTOCOMA
    (27) expresion -> . expresion MAS expresion
    (28) expresion -> . expresion MENOS expresion
    (29) expresion -> . expresion POR expresion
    (30) expresion -> . expresion DIVIDIDO expresion
    (31) expresion -> . expresion MAYQUE expresion
    (32) expresion -> . expresion MENQUE expresion
    (33) expresion -> . expresion IGUALQUE expresion
    (34) expresion -> . expresion NIGUALQUE expresion
    (35) expresion -> . expresion MENORIGUAL expresion
    (36) expresion -> . MENOS expresion
    (37) expresion -> . PARIZQ expresion PARDER
    (38) expresion -> . ENTERO
    (39) expresion -> . CADENA
    (40) expresion -> . ID
    (41) expresion -> . ID PUNTO ID
    (42) expresion -> . ID PARIZQ expresion COMA expresion PARDER

    MENOS           shift and go to state 32
    PARIZQ          shift and go to state 33
    ENTERO          shift and go to state 34
    CADENA          shift and go to state 35
    ID              shift and go to state 36

    expresion                      shift and go to state 42

state 28

    (24) funcion_instr -> FUNCTION ID . PARIZQ ID COMA ID PARDER LLAVIZQ instrucciones LLAVDER PUNTOCOMA

    PARIZQ          shift and go to state 43


state 29

    (17) interface_instr -> INTERFACE ID . LLAVIZQ interface_params PUNTOCOMA LLAVDER

    LLAVIZQ         shift and go to state 44


state 30

    (15) return_instr -> RETURN expresion . PUNTOCOMA
    (27) expresion -> expresion . MAS expresion
    (28) expresion -> expresion . MENOS expresion
    (29) expresion -> expresion . POR expresion
    (30) expresion -> expresion . DIVIDIDO expresion
    (31) expresion -> expresion . MAYQUE expresion
    (32) expresion -> expresion . MENQUE expresion
    (33) expresion -> expresion . IGUALQUE expresion
    (34) expresion -> expresion . NIGUALQUE expresion
    (35) expresion -> expresion . MENORIGUAL expresion

    PUNTOCOMA       shift and go to state 45
    MAS             shift and go to state 46
    MENOS           shift and go to state 47
    POR             shift and go to state 48
    DIVIDIDO        shift and go to state 49
    MAYQUE          shift and go to state 50
    MENQUE          shift and go to state 51
    IGUALQUE        shift and go to state 52
    NIGUALQUE       shift and go to state 53
    MENORIGUAL      shift and go to state 54


state 31

    (16) return_instr -> RETURN PUNTOCOMA .

    CONSOLE         reduce using rule 16 (return_instr -> RETURN PUNTOCOMA .)
    LET             reduce using rule 16 (return_instr -> RETURN PUNTOCOMA .)
    ID              reduce using rule 16 (return_instr -> RETURN PUNTOCOMA .)
    IF              reduce using rule 16 (return_instr -> RETURN PUNTOCOMA .)
    FUNCTION        reduce using rule 16 (return_instr -> RETURN PUNTOCOMA .)
    INTERFACE       reduce using rule 16 (return_instr -> RETURN PUNTOCOMA .)
    RETURN          reduce using rule 16 (return_instr -> RETURN PUNTOCOMA .)
    BREAK           reduce using rule 16 (return_instr -> RETURN PUNTOCOMA .)
    $end            reduce using rule 16 (return_instr -> RETURN PUNTOCOMA .)
    LLAVDER         reduce using rule 16 (return_instr -> RETURN PUNTOCOMA .)


state 32

    (36) expresion -> MENOS . expresion
    (27) expresion -> . expresion MAS expresion
    (28) expresion -> . expresion MENOS expresion
    (29) expresion -> . expresion POR expresion
    (30) expresion -> . expresion DIVIDIDO expresion
    (31) expresion -> . expresion MAYQUE expresion
    (32) expresion -> . expresion MENQUE expresion
    (33) expresion -> . expresion IGUALQUE expresion
    (34) expresion -> . expresion NIGUALQUE expresion
    (35) expresion -> . expresion MENORIGUAL expresion
    (36) expresion -> . MENOS expresion
    (37) expresion -> . PARIZQ expresion PARDER
    (38) expresion -> . ENTERO
    (39) expresion -> . CADENA
    (40) expresion -> . ID
    (41) expresion -> . ID PUNTO ID
    (42) expresion -> . ID PARIZQ expresion COMA expresion PARDER

    MENOS           shift and go to state 32
    PARIZQ          shift and go to state 33
    ENTERO          shift and go to state 34
    CADENA          shift and go to state 35
    ID              shift and go to state 36

    expresion                      shift and go to state 55

state 33

    (37) expresion -> PARIZQ . expresion PARDER
    (27) expresion -> . expresion MAS expresion
    (28) expresion -> . expresion MENOS expresion
    (29) expresion -> . expresion POR expresion
    (30) expresion -> . expresion DIVIDIDO expresion
    (31) expresion -> . expresion MAYQUE expresion
    (32) expresion -> . expresion MENQUE expresion
    (33) expresion -> . expresion IGUALQUE expresion
    (34) expresion -> . expresion NIGUALQUE expresion
    (35) expresion -> . expresion MENORIGUAL expresion
    (36) expresion -> . MENOS expresion
    (37) expresion -> . PARIZQ expresion PARDER
    (38) expresion -> . ENTERO
    (39) expresion -> . CADENA
    (40) expresion -> . ID
    (41) expresion -> . ID PUNTO ID
    (42) expresion -> . ID PARIZQ expresion COMA expresion PARDER

    MENOS           shift and go to state 32
    PARIZQ          shift and go to state 33
    ENTERO          shift and go to state 34
    CADENA          shift and go to state 35
    ID              shift and go to state 36

    expresion                      shift and go to state 56

state 34

    (38) expresion -> ENTERO .

    PUNTOCOMA       reduce using rule 38 (expresion -> ENTERO .)
    MAS             reduce using rule 38 (expresion -> ENTERO .)
    MENOS           reduce using rule 38 (expresion -> ENTERO .)
    POR             reduce using rule 38 (expresion -> ENTERO .)
    DIVIDIDO        reduce using rule 38 (expresion -> ENTERO .)
    MAYQUE          reduce using rule 38 (expresion -> ENTERO .)
    MENQUE          reduce using rule 38 (expresion -> ENTERO .)
    IGUALQUE        reduce using rule 38 (expresion -> ENTERO .)
    NIGUALQUE       reduce using rule 38 (expresion -> ENTERO .)
    MENORIGUAL      reduce using rule 38 (expresion -> ENTERO .)
    COMA            reduce using rule 38 (expresion -> ENTERO .)
    PARDER          reduce using rule 38 (expresion -> ENTERO .)


state 35

    (39) expresion -> CADENA .

    PUNTOCOMA       reduce using rule 39 (expresion -> CADENA .)
    MAS             reduce using rule 39 (expresion -> CADENA .)
    MENOS           reduce using rule 39 (expresion -> CADENA .)
    POR             reduce using rule 39 (expresion -> CADENA .)
    DIVIDIDO        reduce using rule 39 (expresion -> CADENA .)
    MAYQUE          reduce using rule 39 (expresion -> CADENA .)
    MENQUE          reduce using rule 39 (expresion -> CADENA .)
    IGUALQUE        reduce using rule 39 (expresion -> CADENA .)
    NIGUALQUE       reduce using rule 39 (expresion -> CADENA .)
    MENORIGUAL      reduce using rule 39 (expresion -> CADENA .)
    COMA            reduce using rule 39 (expresion -> CADENA .)
    PARDER          reduce using rule 39 (expresion -> CADENA .)


state 36

    (40) expresion -> ID .
    (41) expresion -> ID . PUNTO ID
    (42) expresion -> ID . PARIZQ expresion COMA expresion PARDER

    PUNTOCOMA       reduce using rule 40 (expresion -> ID .)
    MAS             reduce using rule 40 (expresion -> ID .)
    MENOS           reduce using rule 40 (expresion -> ID .)
    POR             reduce using rule 40 (expresion -> ID .)
    DIVIDIDO        reduce using rule 40 (expresion -> ID .)
    MAYQUE          reduce using rule 40 (expresion -> ID .)
    MENQUE          reduce using rule 40 (expresion -> ID .)
    IGUALQUE        reduce using rule 40 (expresion -> ID .)
    NIGUALQUE       reduce using rule 40 (expresion -> ID .)
    MENORIGUAL      reduce using rule 40 (expresion -> ID .)
    COMA            reduce using rule 40 (expresion -> ID .)
    PARDER          reduce using rule 40 (expresion -> ID .)
    PUNTO           shift and go to state 57
    PARIZQ          shift and go to state 58


state 37

    (14) break_instr -> BREAK PUNTOCOMA .

    CONSOLE         reduce using rule 14 (break_instr -> BREAK PUNTOCOMA .)
    LET             reduce using rule 14 (break_instr -> BREAK PUNTOCOMA .)
    ID              reduce using rule 14 (break_instr -> BREAK PUNTOCOMA .)
    IF              reduce using rule 14 (break_instr -> BREAK PUNTOCOMA .)
    FUNCTION        reduce using rule 14 (break_instr -> BREAK PUNTOCOMA .)
    INTERFACE       reduce using rule 14 (break_instr -> BREAK PUNTOCOMA .)
    RETURN          reduce using rule 14 (break_instr -> BREAK PUNTOCOMA .)
    BREAK           reduce using rule 14 (break_instr -> BREAK PUNTOCOMA .)
    $end            reduce using rule 14 (break_instr -> BREAK PUNTOCOMA .)
    LLAVDER         reduce using rule 14 (break_instr -> BREAK PUNTOCOMA .)


state 38

    (20) imprimir_instr -> CONSOLE PUNTO LOG . PARIZQ expresion PARDER PUNTOCOMA

    PARIZQ          shift and go to state 59


state 39

    (21) declaracion_instr -> LET ID IGUAL . expresion PUNTOCOMA
    (27) expresion -> . expresion MAS expresion
    (28) expresion -> . expresion MENOS expresion
    (29) expresion -> . expresion POR expresion
    (30) expresion -> . expresion DIVIDIDO expresion
    (31) expresion -> . expresion MAYQUE expresion
    (32) expresion -> . expresion MENQUE expresion
    (33) expresion -> . expresion IGUALQUE expresion
    (34) expresion -> . expresion NIGUALQUE expresion
    (35) expresion -> . expresion MENORIGUAL expresion
    (36) expresion -> . MENOS expresion
    (37) expresion -> . PARIZQ expresion PARDER
    (38) expresion -> . ENTERO
    (39) expresion -> . CADENA
    (40) expresion -> . ID
    (41) expresion -> . ID PUNTO ID
    (42) expresion -> . ID PARIZQ expresion COMA expresion PARDER

    MENOS           shift and go to state 32
    PARIZQ          shift and go to state 33
    ENTERO          shift and go to state 34
    CADENA          shift and go to state 35
    ID              shift and go to state 36

    expresion                      shift and go to state 60

state 40

    (22) asignacion_instr -> ID IGUAL expresion . PUNTOCOMA
    (27) expresion -> expresion . MAS expresion
    (28) expresion -> expresion . MENOS expresion
    (29) expresion -> expresion . POR expresion
    (30) expresion -> expresion . DIVIDIDO expresion
    (31) expresion -> expresion . MAYQUE expresion
    (32) expresion -> expresion . MENQUE expresion
    (33) expresion -> expresion . IGUALQUE expresion
    (34) expresion -> expresion . NIGUALQUE expresion
    (35) expresion -> expresion . MENORIGUAL expresion

    PUNTOCOMA       shift and go to state 61
    MAS             shift and go to state 46
    MENOS           shift and go to state 47
    POR             shift and go to state 48
    DIVIDIDO        shift and go to state 49
    MAYQUE          shift and go to state 50
    MENQUE          shift and go to state 51
    IGUALQUE        shift and go to state 52
    NIGUALQUE       shift and go to state 53
    MENORIGUAL      shift and go to state 54


state 41

    (25) call_funcion_instr -> ID PARIZQ expresion . COMA expresion PARDER PUNTOCOMA
    (27) expresion -> expresion . MAS expresion
    (28) expresion -> expresion . MENOS expresion
    (29) expresion -> expresion . POR expresion
    (30) expresion -> expresion . DIVIDIDO expresion
    (31) expresion -> expresion . MAYQUE expresion
    (32) expresion -> expresion . MENQUE expresion
    (33) expresion -> expresion . IGUALQUE expresion
    (34) expresion -> expresion . NIGUALQUE expresion
    (35) expresion -> expresion . MENORIGUAL expresion

    COMA            shift and go to state 62
    MAS             shift and go to state 46
    MENOS           shift and go to state 47
    POR             shift and go to state 48
    DIVIDIDO        shift and go to state 49
    MAYQUE          shift and go to state 50
    MENQUE          shift and go to state 51
    IGUALQUE        shift and go to state 52
    NIGUALQUE       shift and go to state 53
    MENORIGUAL      shift and go to state 54


state 42

    (23) if_instr -> IF PARIZQ expresion . PARDER LLAVIZQ instrucciones LLAVDER PUNTOCOMA
    (26) if_else_instr -> IF PARIZQ expresion . PARDER LLAVIZQ instrucciones LLAVDER ELSE LLAVIZQ instrucciones LLAVDER PUNTOCOMA
    (27) expresion -> expresion . MAS expresion
    (28) expresion -> expresion . MENOS expresion
    (29) expresion -> expresion . POR expresion
    (30) expresion -> expresion . DIVIDIDO expresion
    (31) expresion -> expresion . MAYQUE expresion
    (32) expresion -> expresion . MENQUE expresion
    (33) expresion -> expresion . IGUALQUE expresion
    (34) expresion -> expresion . NIGUALQUE expresion
    (35) expresion -> expresion . MENORIGUAL expresion

    PARDER          shift and go to state 63
    MAS             shift and go to state 46
    MENOS           shift and go to state 47
    POR             shift and go to state 48
    DIVIDIDO        shift and go to state 49
    MAYQUE          shift and go to state 50
    MENQUE          shift and go to state 51
    IGUALQUE        shift and go to state 52
    NIGUALQUE       shift and go to state 53
    MENORIGUAL      shift and go to state 54


state 43

    (24) funcion_instr -> FUNCTION ID PARIZQ . ID COMA ID PARDER LLAVIZQ instrucciones LLAVDER PUNTOCOMA

    ID              shift and go to state 64


state 44

    (17) interface_instr -> INTERFACE ID LLAVIZQ . interface_params PUNTOCOMA LLAVDER
    (18) interface_params -> . interface_params PUNTOCOMA ID DOSPUNTOS expresion
    (19) interface_params -> . ID DOSPUNTOS expresion

    ID              shift and go to state 65

    interface_params               shift and go to state 66

state 45

    (15) return_instr -> RETURN expresion PUNTOCOMA .

    CONSOLE         reduce using rule 15 (return_instr -> RETURN expresion PUNTOCOMA .)
    LET             reduce using rule 15 (return_instr -> RETURN expresion PUNTOCOMA .)
    ID              reduce using rule 15 (return_instr -> RETURN expresion PUNTOCOMA .)
    IF              reduce using rule 15 (return_instr -> RETURN expresion PUNTOCOMA .)
    FUNCTION        reduce using rule 15 (return_instr -> RETURN expresion PUNTOCOMA .)
    INTERFACE       reduce using rule 15 (return_instr -> RETURN expresion PUNTOCOMA .)
    RETURN          reduce using rule 15 (return_instr -> RETURN expresion PUNTOCOMA .)
    BREAK           reduce using rule 15 (return_instr -> RETURN expresion PUNTOCOMA .)
    $end            reduce using rule 15 (return_instr -> RETURN expresion PUNTOCOMA .)
    LLAVDER         reduce using rule 15 (return_instr -> RETURN expresion PUNTOCOMA .)


state 46

    (27) expresion -> expresion MAS . expresion
    (27) expresion -> . expresion MAS expresion
    (28) expresion -> . expresion MENOS expresion
    (29) expresion -> . expresion POR expresion
    (30) expresion -> . expresion DIVIDIDO expresion
    (31) expresion -> . expresion MAYQUE expresion
    (32) expresion -> . expresion MENQUE expresion
    (33) expresion -> . expresion IGUALQUE expresion
    (34) expresion -> . expresion NIGUALQUE expresion
    (35) expresion -> . expresion MENORIGUAL expresion
    (36) expresion -> . MENOS expresion
    (37) expresion -> . PARIZQ expresion PARDER
    (38) expresion -> . ENTERO
    (39) expresion -> . CADENA
    (40) expresion -> . ID
    (41) expresion -> . ID PUNTO ID
    (42) expresion -> . ID PARIZQ expresion COMA expresion PARDER

    MENOS           shift and go to state 32
    PARIZQ          shift and go to state 33
    ENTERO          shift and go to state 34
    CADENA          shift and go to state 35
    ID              shift and go to state 36

    expresion                      shift and go to state 67

state 47

    (28) expresion -> expresion MENOS . expresion
    (27) expresion -> . expresion MAS expresion
    (28) expresion -> . expresion MENOS expresion
    (29) expresion -> . expresion POR expresion
    (30) expresion -> . expresion DIVIDIDO expresion
    (31) expresion -> . expresion MAYQUE expresion
    (32) expresion -> . expresion MENQUE expresion
    (33) expresion -> . expresion IGUALQUE expresion
    (34) expresion -> . expresion NIGUALQUE expresion
    (35) expresion -> . expresion MENORIGUAL expresion
    (36) expresion -> . MENOS expresion
    (37) expresion -> . PARIZQ expresion PARDER
    (38) expresion -> . ENTERO
    (39) expresion -> . CADENA
    (40) expresion -> . ID
    (41) expresion -> . ID PUNTO ID
    (42) expresion -> . ID PARIZQ expresion COMA expresion PARDER

    MENOS           shift and go to state 32
    PARIZQ          shift and go to state 33
    ENTERO          shift and go to state 34
    CADENA          shift and go to state 35
    ID              shift and go to state 36

    expresion                      shift and go to state 68

state 48

    (29) expresion -> expresion POR . expresion
    (27) expresion -> . expresion MAS expresion
    (28) expresion -> . expresion MENOS expresion
    (29) expresion -> . expresion POR expresion
    (30) expresion -> . expresion DIVIDIDO expresion
    (31) expresion -> . expresion MAYQUE expresion
    (32) expresion -> . expresion MENQUE expresion
    (33) expresion -> . expresion IGUALQUE expresion
    (34) expresion -> . expresion NIGUALQUE expresion
    (35) expresion -> . expresion MENORIGUAL expresion
    (36) expresion -> . MENOS expresion
    (37) expresion -> . PARIZQ expresion PARDER
    (38) expresion -> . ENTERO
    (39) expresion -> . CADENA
    (40) expresion -> . ID
    (41) expresion -> . ID PUNTO ID
    (42) expresion -> . ID PARIZQ expresion COMA expresion PARDER

    MENOS           shift and go to state 32
    PARIZQ          shift and go to state 33
    ENTERO          shift and go to state 34
    CADENA          shift and go to state 35
    ID              shift and go to state 36

    expresion                      shift and go to state 69

state 49

    (30) expresion -> expresion DIVIDIDO . expresion
    (27) expresion -> . expresion MAS expresion
    (28) expresion -> . expresion MENOS expresion
    (29) expresion -> . expresion POR expresion
    (30) expresion -> . expresion DIVIDIDO expresion
    (31) expresion -> . expresion MAYQUE expresion
    (32) expresion -> . expresion MENQUE expresion
    (33) expresion -> . expresion IGUALQUE expresion
    (34) expresion -> . expresion NIGUALQUE expresion
    (35) expresion -> . expresion MENORIGUAL expresion
    (36) expresion -> . MENOS expresion
    (37) expresion -> . PARIZQ expresion PARDER
    (38) expresion -> . ENTERO
    (39) expresion -> . CADENA
    (40) expresion -> . ID
    (41) expresion -> . ID PUNTO ID
    (42) expresion -> . ID PARIZQ expresion COMA expresion PARDER

    MENOS           shift and go to state 32
    PARIZQ          shift and go to state 33
    ENTERO          shift and go to state 34
    CADENA          shift and go to state 35
    ID              shift and go to state 36

    expresion                      shift and go to state 70

state 50

    (31) expresion -> expresion MAYQUE . expresion
    (27) expresion -> . expresion MAS expresion
    (28) expresion -> . expresion MENOS expresion
    (29) expresion -> . expresion POR expresion
    (30) expresion -> . expresion DIVIDIDO expresion
    (31) expresion -> . expresion MAYQUE expresion
    (32) expresion -> . expresion MENQUE expresion
    (33) expresion -> . expresion IGUALQUE expresion
    (34) expresion -> . expresion NIGUALQUE expresion
    (35) expresion -> . expresion MENORIGUAL expresion
    (36) expresion -> . MENOS expresion
    (37) expresion -> . PARIZQ expresion PARDER
    (38) expresion -> . ENTERO
    (39) expresion -> . CADENA
    (40) expresion -> . ID
    (41) expresion -> . ID PUNTO ID
    (42) expresion -> . ID PARIZQ expresion COMA expresion PARDER

    MENOS           shift and go to state 32
    PARIZQ          shift and go to state 33
    ENTERO          shift and go to state 34
    CADENA          shift and go to state 35
    ID              shift and go to state 36

    expresion                      shift and go to state 71

state 51

    (32) expresion -> expresion MENQUE . expresion
    (27) expresion -> . expresion MAS expresion
    (28) expresion -> . expresion MENOS expresion
    (29) expresion -> . expresion POR expresion
    (30) expresion -> . expresion DIVIDIDO expresion
    (31) expresion -> . expresion MAYQUE expresion
    (32) expresion -> . expresion MENQUE expresion
    (33) expresion -> . expresion IGUALQUE expresion
    (34) expresion -> . expresion NIGUALQUE expresion
    (35) expresion -> . expresion MENORIGUAL expresion
    (36) expresion -> . MENOS expresion
    (37) expresion -> . PARIZQ expresion PARDER
    (38) expresion -> . ENTERO
    (39) expresion -> . CADENA
    (40) expresion -> . ID
    (41) expresion -> . ID PUNTO ID
    (42) expresion -> . ID PARIZQ expresion COMA expresion PARDER

    MENOS           shift and go to state 32
    PARIZQ          shift and go to state 33
    ENTERO          shift and go to state 34
    CADENA          shift and go to state 35
    ID              shift and go to state 36

    expresion                      shift and go to state 72

state 52

    (33) expresion -> expresion IGUALQUE . expresion
    (27) expresion -> . expresion MAS expresion
    (28) expresion -> . expresion MENOS expresion
    (29) expresion -> . expresion POR expresion
    (30) expresion -> . expresion DIVIDIDO expresion
    (31) expresion -> . expresion MAYQUE expresion
    (32) expresion -> . expresion MENQUE expresion
    (33) expresion -> . expresion IGUALQUE expresion
    (34) expresion -> . expresion NIGUALQUE expresion
    (35) expresion -> . expresion MENORIGUAL expresion
    (36) expresion -> . MENOS expresion
    (37) expresion -> . PARIZQ expresion PARDER
    (38) expresion -> . ENTERO
    (39) expresion -> . CADENA
    (40) expresion -> . ID
    (41) expresion -> . ID PUNTO ID
    (42) expresion -> . ID PARIZQ expresion COMA expresion PARDER

    MENOS           shift and go to state 32
    PARIZQ          shift and go to state 33
    ENTERO          shift and go to state 34
    CADENA          shift and go to state 35
    ID              shift and go to state 36

    expresion                      shift and go to state 73

state 53

    (34) expresion -> expresion NIGUALQUE . expresion
    (27) expresion -> . expresion MAS expresion
    (28) expresion -> . expresion MENOS expresion
    (29) expresion -> . expresion POR expresion
    (30) expresion -> . expresion DIVIDIDO expresion
    (31) expresion -> . expresion MAYQUE expresion
    (32) expresion -> . expresion MENQUE expresion
    (33) expresion -> . expresion IGUALQUE expresion
    (34) expresion -> . expresion NIGUALQUE expresion
    (35) expresion -> . expresion MENORIGUAL expresion
    (36) expresion -> . MENOS expresion
    (37) expresion -> . PARIZQ expresion PARDER
    (38) expresion -> . ENTERO
    (39) expresion -> . CADENA
    (40) expresion -> . ID
    (41) expresion -> . ID PUNTO ID
    (42) expresion -> . ID PARIZQ expresion COMA expresion PARDER

    MENOS           shift and go to state 32
    PARIZQ          shift and go to state 33
    ENTERO          shift and go to state 34
    CADENA          shift and go to state 35
    ID              shift and go to state 36

    expresion                      shift and go to state 74

state 54

    (35) expresion -> expresion MENORIGUAL . expresion
    (27) expresion -> . expresion MAS expresion
    (28) expresion -> . expresion MENOS expresion
    (29) expresion -> . expresion POR expresion
    (30) expresion -> . expresion DIVIDIDO expresion
    (31) expresion -> . expresion MAYQUE expresion
    (32) expresion -> . expresion MENQUE expresion
    (33) expresion -> . expresion IGUALQUE expresion
    (34) expresion -> . expresion NIGUALQUE expresion
    (35) expresion -> . expresion MENORIGUAL expresion
    (36) expresion -> . MENOS expresion
    (37) expresion -> . PARIZQ expresion PARDER
    (38) expresion -> . ENTERO
    (39) expresion -> . CADENA
    (40) expresion -> . ID
    (41) expresion -> . ID PUNTO ID
    (42) expresion -> . ID PARIZQ expresion COMA expresion PARDER

    MENOS           shift and go to state 32
    PARIZQ          shift and go to state 33
    ENTERO          shift and go to state 34
    CADENA          shift and go to state 35
    ID              shift and go to state 36

    expresion                      shift and go to state 75

state 55

    (36) expresion -> MENOS expresion .
    (27) expresion -> expresion . MAS expresion
    (28) expresion -> expresion . MENOS expresion
    (29) expresion -> expresion . POR expresion
    (30) expresion -> expresion . DIVIDIDO expresion
    (31) expresion -> expresion . MAYQUE expresion
    (32) expresion -> expresion . MENQUE expresion
    (33) expresion -> expresion . IGUALQUE expresion
    (34) expresion -> expresion . NIGUALQUE expresion
    (35) expresion -> expresion . MENORIGUAL expresion

    PUNTOCOMA       reduce using rule 36 (expresion -> MENOS expresion .)
    MAS             reduce using rule 36 (expresion -> MENOS expresion .)
    MENOS           reduce using rule 36 (expresion -> MENOS expresion .)
    POR             reduce using rule 36 (expresion -> MENOS expresion .)
    DIVIDIDO        reduce using rule 36 (expresion -> MENOS expresion .)
    MAYQUE          reduce using rule 36 (expresion -> MENOS expresion .)
    MENQUE          reduce using rule 36 (expresion -> MENOS expresion .)
    IGUALQUE        reduce using rule 36 (expresion -> MENOS expresion .)
    NIGUALQUE       reduce using rule 36 (expresion -> MENOS expresion .)
    MENORIGUAL      reduce using rule 36 (expresion -> MENOS expresion .)
    COMA            reduce using rule 36 (expresion -> MENOS expresion .)
    PARDER          reduce using rule 36 (expresion -> MENOS expresion .)

  ! MAS             [ shift and go to state 46 ]
  ! MENOS           [ shift and go to state 47 ]
  ! POR             [ shift and go to state 48 ]
  ! DIVIDIDO        [ shift and go to state 49 ]
  ! MAYQUE          [ shift and go to state 50 ]
  ! MENQUE          [ shift and go to state 51 ]
  ! IGUALQUE        [ shift and go to state 52 ]
  ! NIGUALQUE       [ shift and go to state 53 ]
  ! MENORIGUAL      [ shift and go to state 54 ]


state 56

    (37) expresion -> PARIZQ expresion . PARDER
    (27) expresion -> expresion . MAS expresion
    (28) expresion -> expresion . MENOS expresion
    (29) expresion -> expresion . POR expresion
    (30) expresion -> expresion . DIVIDIDO expresion
    (31) expresion -> expresion . MAYQUE expresion
    (32) expresion -> expresion . MENQUE expresion
    (33) expresion -> expresion . IGUALQUE expresion
    (34) expresion -> expresion . NIGUALQUE expresion
    (35) expresion -> expresion . MENORIGUAL expresion

    PARDER          shift and go to state 76
    MAS             shift and go to state 46
    MENOS           shift and go to state 47
    POR             shift and go to state 48
    DIVIDIDO        shift and go to state 49
    MAYQUE          shift and go to state 50
    MENQUE          shift and go to state 51
    IGUALQUE        shift and go to state 52
    NIGUALQUE       shift and go to state 53
    MENORIGUAL      shift and go to state 54


state 57

    (41) expresion -> ID PUNTO . ID

    ID              shift and go to state 77


state 58

    (42) expresion -> ID PARIZQ . expresion COMA expresion PARDER
    (27) expresion -> . expresion MAS expresion
    (28) expresion -> . expresion MENOS expresion
    (29) expresion -> . expresion POR expresion
    (30) expresion -> . expresion DIVIDIDO expresion
    (31) expresion -> . expresion MAYQUE expresion
    (32) expresion -> . expresion MENQUE expresion
    (33) expresion -> . expresion IGUALQUE expresion
    (34) expresion -> . expresion NIGUALQUE expresion
    (35) expresion -> . expresion MENORIGUAL expresion
    (36) expresion -> . MENOS expresion
    (37) expresion -> . PARIZQ expresion PARDER
    (38) expresion -> . ENTERO
    (39) expresion -> . CADENA
    (40) expresion -> . ID
    (41) expresion -> . ID PUNTO ID
    (42) expresion -> . ID PARIZQ expresion COMA expresion PARDER

    MENOS           shift and go to state 32
    PARIZQ          shift and go to state 33
    ENTERO          shift and go to state 34
    CADENA          shift and go to state 35
    ID              shift and go to state 36

    expresion                      shift and go to state 78

state 59

    (20) imprimir_instr -> CONSOLE PUNTO LOG PARIZQ . expresion PARDER PUNTOCOMA
    (27) expresion -> . expresion MAS expresion
    (28) expresion -> . expresion MENOS expresion
    (29) expresion -> . expresion POR expresion
    (30) expresion -> . expresion DIVIDIDO expresion
    (31) expresion -> . expresion MAYQUE expresion
    (32) expresion -> . expresion MENQUE expresion
    (33) expresion -> . expresion IGUALQUE expresion
    (34) expresion -> . expresion NIGUALQUE expresion
    (35) expresion -> . expresion MENORIGUAL expresion
    (36) expresion -> . MENOS expresion
    (37) expresion -> . PARIZQ expresion PARDER
    (38) expresion -> . ENTERO
    (39) expresion -> . CADENA
    (40) expresion -> . ID
    (41) expresion -> . ID PUNTO ID
    (42) expresion -> . ID PARIZQ expresion COMA expresion PARDER

    MENOS           shift and go to state 32
    PARIZQ          shift and go to state 33
    ENTERO          shift and go to state 34
    CADENA          shift and go to state 35
    ID              shift and go to state 36

    expresion                      shift and go to state 79

state 60

    (21) declaracion_instr -> LET ID IGUAL expresion . PUNTOCOMA
    (27) expresion -> expresion . MAS expresion
    (28) expresion -> expresion . MENOS expresion
    (29) expresion -> expresion . POR expresion
    (30) expresion -> expresion . DIVIDIDO expresion
    (31) expresion -> expresion . MAYQUE expresion
    (32) expresion -> expresion . MENQUE expresion
    (33) expresion -> expresion . IGUALQUE expresion
    (34) expresion -> expresion . NIGUALQUE expresion
    (35) expresion -> expresion . MENORIGUAL expresion

    PUNTOCOMA       shift and go to state 80
    MAS             shift and go to state 46
    MENOS           shift and go to state 47
    POR             shift and go to state 48
    DIVIDIDO        shift and go to state 49
    MAYQUE          shift and go to state 50
    MENQUE          shift and go to state 51
    IGUALQUE        shift and go to state 52
    NIGUALQUE       shift and go to state 53
    MENORIGUAL      shift and go to state 54


state 61

    (22) asignacion_instr -> ID IGUAL expresion PUNTOCOMA .

    CONSOLE         reduce using rule 22 (asignacion_instr -> ID IGUAL expresion PUNTOCOMA .)
    LET             reduce using rule 22 (asignacion_instr -> ID IGUAL expresion PUNTOCOMA .)
    ID              reduce using rule 22 (asignacion_instr -> ID IGUAL expresion PUNTOCOMA .)
    IF              reduce using rule 22 (asignacion_instr -> ID IGUAL expresion PUNTOCOMA .)
    FUNCTION        reduce using rule 22 (asignacion_instr -> ID IGUAL expresion PUNTOCOMA .)
    INTERFACE       reduce using rule 22 (asignacion_instr -> ID IGUAL expresion PUNTOCOMA .)
    RETURN          reduce using rule 22 (asignacion_instr -> ID IGUAL expresion PUNTOCOMA .)
    BREAK           reduce using rule 22 (asignacion_instr -> ID IGUAL expresion PUNTOCOMA .)
    $end            reduce using rule 22 (asignacion_instr -> ID IGUAL expresion PUNTOCOMA .)
    LLAVDER         reduce using rule 22 (asignacion_instr -> ID IGUAL expresion PUNTOCOMA .)


state 62

    (25) call_funcion_instr -> ID PARIZQ expresion COMA . expresion PARDER PUNTOCOMA
    (27) expresion -> . expresion MAS expresion
    (28) expresion -> . expresion MENOS expresion
    (29) expresion -> . expresion POR expresion
    (30) expresion -> . expresion DIVIDIDO expresion
    (31) expresion -> . expresion MAYQUE expresion
    (32) expresion -> . expresion MENQUE expresion
    (33) expresion -> . expresion IGUALQUE expresion
    (34) expresion -> . expresion NIGUALQUE expresion
    (35) expresion -> . expresion MENORIGUAL expresion
    (36) expresion -> . MENOS expresion
    (37) expresion -> . PARIZQ expresion PARDER
    (38) expresion -> . ENTERO
    (39) expresion -> . CADENA
    (40) expresion -> . ID
    (41) expresion -> . ID PUNTO ID
    (42) expresion -> . ID PARIZQ expresion COMA expresion PARDER

    MENOS           shift and go to state 32
    PARIZQ          shift and go to state 33
    ENTERO          shift and go to state 34
    CADENA          shift and go to state 35
    ID              shift and go to state 36

    expresion                      shift and go to state 81

state 63

    (23) if_instr -> IF PARIZQ expresion PARDER . LLAVIZQ instrucciones LLAVDER PUNTOCOMA
    (26) if_else_instr -> IF PARIZQ expresion PARDER . LLAVIZQ instrucciones LLAVDER ELSE LLAVIZQ instrucciones LLAVDER PUNTOCOMA

    LLAVIZQ         shift and go to state 82


state 64

    (24) funcion_instr -> FUNCTION ID PARIZQ ID . COMA ID PARDER LLAVIZQ instrucciones LLAVDER PUNTOCOMA

    COMA            shift and go to state 83


state 65

    (19) interface_params -> ID . DOSPUNTOS expresion

    DOSPUNTOS       shift and go to state 84


state 66

    (17) interface_instr -> INTERFACE ID LLAVIZQ interface_params . PUNTOCOMA LLAVDER
    (18) interface_params -> interface_params . PUNTOCOMA ID DOSPUNTOS expresion

    PUNTOCOMA       shift and go to state 85


state 67

    (27) expresion -> expresion MAS expresion .
    (27) expresion -> expresion . MAS expresion
    (28) expresion -> expresion . MENOS expresion
    (29) expresion -> expresion . POR expresion
    (30) expresion -> expresion . DIVIDIDO expresion
    (31) expresion -> expresion . MAYQUE expresion
    (32) expresion -> expresion . MENQUE expresion
    (33) expresion -> expresion . IGUALQUE expresion
    (34) expresion -> expresion . NIGUALQUE expresion
    (35) expresion -> expresion . MENORIGUAL expresion

    PUNTOCOMA       reduce using rule 27 (expresion -> expresion MAS expresion .)
    MAS             reduce using rule 27 (expresion -> expresion MAS expresion .)
    MENOS           reduce using rule 27 (expresion -> expresion MAS expresion .)
    MAYQUE          reduce using rule 27 (expresion -> expresion MAS expresion .)
    MENQUE          reduce using rule 27 (expresion -> expresion MAS expresion .)
    IGUALQUE        reduce using rule 27 (expresion -> expresion MAS expresion .)
    NIGUALQUE       reduce using rule 27 (expresion -> expresion MAS expresion .)
    MENORIGUAL      reduce using rule 27 (expresion -> expresion MAS expresion .)
    COMA            reduce using rule 27 (expresion -> expresion MAS expresion .)
    PARDER          reduce using rule 27 (expresion -> expresion MAS expresion .)
    POR             shift and go to state 48
    DIVIDIDO        shift and go to state 49

  ! POR             [ reduce using rule 27 (expresion -> expresion MAS expresion .) ]
  ! DIVIDIDO        [ reduce using rule 27 (expresion -> expresion MAS expresion .) ]
  ! MAS             [ shift and go to state 46 ]
  ! MENOS           [ shift and go to state 47 ]
  ! MAYQUE          [ shift and go to state 50 ]
  ! MENQUE          [ shift and go to state 51 ]
  ! IGUALQUE        [ shift and go to state 52 ]
  ! NIGUALQUE       [ shift and go to state 53 ]
  ! MENORIGUAL      [ shift and go to state 54 ]


state 68

    (28) expresion -> expresion MENOS expresion .
    (27) expresion -> expresion . MAS expresion
    (28) expresion -> expresion . MENOS expresion
    (29) expresion -> expresion . POR expresion
    (30) expresion -> expresion . DIVIDIDO expresion
    (31) expresion -> expresion . MAYQUE expresion
    (32) expresion -> expresion . MENQUE expresion
    (33) expresion -> expresion . IGUALQUE expresion
    (34) expresion -> expresion . NIGUALQUE expresion
    (35) expresion -> expresion . MENORIGUAL expresion

    PUNTOCOMA       reduce using rule 28 (expresion -> expresion MENOS expresion .)
    MAS             reduce using rule 28 (expresion -> expresion MENOS expresion .)
    MENOS           reduce using rule 28 (expresion -> expresion MENOS expresion .)
    MAYQUE          reduce using rule 28 (expresion -> expresion MENOS expresion .)
    MENQUE          reduce using rule 28 (expresion -> expresion MENOS expresion .)
    IGUALQUE        reduce using rule 28 (expresion -> expresion MENOS expresion .)
    NIGUALQUE       reduce using rule 28 (expresion -> expresion MENOS expresion .)
    MENORIGUAL      reduce using rule 28 (expresion -> expresion MENOS expresion .)
    COMA            reduce using rule 28 (expresion -> expresion MENOS expresion .)
    PARDER          reduce using rule 28 (expresion -> expresion MENOS expresion .)
    POR             shift and go to state 48
    DIVIDIDO        shift and go to state 49

  ! POR             [ reduce using rule 28 (expresion -> expresion MENOS expresion .) ]
  ! DIVIDIDO        [ reduce using rule 28 (expresion -> expresion MENOS expresion .) ]
  ! MAS             [ shift and go to state 46 ]
  ! MENOS           [ shift and go to state 47 ]
  ! MAYQUE          [ shift and go to state 50 ]
  ! MENQUE          [ shift and go to state 51 ]
  ! IGUALQUE        [ shift and go to state 52 ]
  ! NIGUALQUE       [ shift and go to state 53 ]
  ! MENORIGUAL      [ shift and go to state 54 ]


state 69

    (29) expresion -> expresion POR expresion .
    (27) expresion -> expresion . MAS expresion
    (28) expresion -> expresion . MENOS expresion
    (29) expresion -> expresion . POR expresion
    (30) expresion -> expresion . DIVIDIDO expresion
    (31) expresion -> expresion . MAYQUE expresion
    (32) expresion -> expresion . MENQUE expresion
    (33) expresion -> expresion . IGUALQUE expresion
    (34) expresion -> expresion . NIGUALQUE expresion
    (35) expresion -> expresion . MENORIGUAL expresion

    PUNTOCOMA       reduce using rule 29 (expresion -> expresion POR expresion .)
    MAS             reduce using rule 29 (expresion -> expresion POR expresion .)
    MENOS           reduce using rule 29 (expresion -> expresion POR expresion .)
    POR             reduce using rule 29 (expresion -> expresion POR expresion .)
    DIVIDIDO        reduce using rule 29 (expresion -> expresion POR expresion .)
    MAYQUE          reduce using rule 29 (expresion -> expresion POR expresion .)
    MENQUE          reduce using rule 29 (expresion -> expresion POR expresion .)
    IGUALQUE        reduce using rule 29 (expresion -> expresion POR expresion .)
    NIGUALQUE       reduce using rule 29 (expresion -> expresion POR expresion .)
    MENORIGUAL      reduce using rule 29 (expresion -> expresion POR expresion .)
    COMA            reduce using rule 29 (expresion -> expresion POR expresion .)
    PARDER          reduce using rule 29 (expresion -> expresion POR expresion .)

  ! MAS             [ shift and go to state 46 ]
  ! MENOS           [ shift and go to state 47 ]
  ! POR             [ shift and go to state 48 ]
  ! DIVIDIDO        [ shift and go to state 49 ]
  ! MAYQUE          [ shift and go to state 50 ]
  ! MENQUE          [ shift and go to state 51 ]
  ! IGUALQUE        [ shift and go to state 52 ]
  ! NIGUALQUE       [ shift and go to state 53 ]
  ! MENORIGUAL      [ shift and go to state 54 ]


state 70

    (30) expresion -> expresion DIVIDIDO expresion .
    (27) expresion -> expresion . MAS expresion
    (28) expresion -> expresion . MENOS expresion
    (29) expresion -> expresion . POR expresion
    (30) expresion -> expresion . DIVIDIDO expresion
    (31) expresion -> expresion . MAYQUE expresion
    (32) expresion -> expresion . MENQUE expresion
    (33) expresion -> expresion . IGUALQUE expresion
    (34) expresion -> expresion . NIGUALQUE expresion
    (35) expresion -> expresion . MENORIGUAL expresion

    PUNTOCOMA       reduce using rule 30 (expresion -> expresion DIVIDIDO expresion .)
    MAS             reduce using rule 30 (expresion -> expresion DIVIDIDO expresion .)
    MENOS           reduce using rule 30 (expresion -> expresion DIVIDIDO expresion .)
    POR             reduce using rule 30 (expresion -> expresion DIVIDIDO expresion .)
    DIVIDIDO        reduce using rule 30 (expresion -> expresion DIVIDIDO expresion .)
    MAYQUE          reduce using rule 30 (expresion -> expresion DIVIDIDO expresion .)
    MENQUE          reduce using rule 30 (expresion -> expresion DIVIDIDO expresion .)
    IGUALQUE        reduce using rule 30 (expresion -> expresion DIVIDIDO expresion .)
    NIGUALQUE       reduce using rule 30 (expresion -> expresion DIVIDIDO expresion .)
    MENORIGUAL      reduce using rule 30 (expresion -> expresion DIVIDIDO expresion .)
    COMA            reduce using rule 30 (expresion -> expresion DIVIDIDO expresion .)
    PARDER          reduce using rule 30 (expresion -> expresion DIVIDIDO expresion .)

  ! MAS             [ shift and go to state 46 ]
  ! MENOS           [ shift and go to state 47 ]
  ! POR             [ shift and go to state 48 ]
  ! DIVIDIDO        [ shift and go to state 49 ]
  ! MAYQUE          [ shift and go to state 50 ]
  ! MENQUE          [ shift and go to state 51 ]
  ! IGUALQUE        [ shift and go to state 52 ]
  ! NIGUALQUE       [ shift and go to state 53 ]
  ! MENORIGUAL      [ shift and go to state 54 ]


state 71

    (31) expresion -> expresion MAYQUE expresion .
    (27) expresion -> expresion . MAS expresion
    (28) expresion -> expresion . MENOS expresion
    (29) expresion -> expresion . POR expresion
    (30) expresion -> expresion . DIVIDIDO expresion
    (31) expresion -> expresion . MAYQUE expresion
    (32) expresion -> expresion . MENQUE expresion
    (33) expresion -> expresion . IGUALQUE expresion
    (34) expresion -> expresion . NIGUALQUE expresion
    (35) expresion -> expresion . MENORIGUAL expresion

  ! shift/reduce conflict for MAS resolved as shift
  ! shift/reduce conflict for MENOS resolved as shift
  ! shift/reduce conflict for POR resolved as shift
  ! shift/reduce conflict for DIVIDIDO resolved as shift
  ! shift/reduce conflict for MAYQUE resolved as shift
  ! shift/reduce conflict for MENQUE resolved as shift
  ! shift/reduce conflict for IGUALQUE resolved as shift
  ! shift/reduce conflict for NIGUALQUE resolved as shift
  ! shift/reduce conflict for MENORIGUAL resolved as shift
    PUNTOCOMA       reduce using rule 31 (expresion -> expresion MAYQUE expresion .)
    COMA            reduce using rule 31 (expresion -> expresion MAYQUE expresion .)
    PARDER          reduce using rule 31 (expresion -> expresion MAYQUE expresion .)
    MAS             shift and go to state 46
    MENOS           shift and go to state 47
    POR             shift and go to state 48
    DIVIDIDO        shift and go to state 49
    MAYQUE          shift and go to state 50
    MENQUE          shift and go to state 51
    IGUALQUE        shift and go to state 52
    NIGUALQUE       shift and go to state 53
    MENORIGUAL      shift and go to state 54

  ! MAS             [ reduce using rule 31 (expresion -> expresion MAYQUE expresion .) ]
  ! MENOS           [ reduce using rule 31 (expresion -> expresion MAYQUE expresion .) ]
  ! POR             [ reduce using rule 31 (expresion -> expresion MAYQUE expresion .) ]
  ! DIVIDIDO        [ reduce using rule 31 (expresion -> expresion MAYQUE expresion .) ]
  ! MAYQUE          [ reduce using rule 31 (expresion -> expresion MAYQUE expresion .) ]
  ! MENQUE          [ reduce using rule 31 (expresion -> expresion MAYQUE expresion .) ]
  ! IGUALQUE        [ reduce using rule 31 (expresion -> expresion MAYQUE expresion .) ]
  ! NIGUALQUE       [ reduce using rule 31 (expresion -> expresion MAYQUE expresion .) ]
  ! MENORIGUAL      [ reduce using rule 31 (expresion -> expresion MAYQUE expresion .) ]


state 72

    (32) expresion -> expresion MENQUE expresion .
    (27) expresion -> expresion . MAS expresion
    (28) expresion -> expresion . MENOS expresion
    (29) expresion -> expresion . POR expresion
    (30) expresion -> expresion . DIVIDIDO expresion
    (31) expresion -> expresion . MAYQUE expresion
    (32) expresion -> expresion . MENQUE expresion
    (33) expresion -> expresion . IGUALQUE expresion
    (34) expresion -> expresion . NIGUALQUE expresion
    (35) expresion -> expresion . MENORIGUAL expresion

  ! shift/reduce conflict for MAS resolved as shift
  ! shift/reduce conflict for MENOS resolved as shift
  ! shift/reduce conflict for POR resolved as shift
  ! shift/reduce conflict for DIVIDIDO resolved as shift
  ! shift/reduce conflict for MAYQUE resolved as shift
  ! shift/reduce conflict for MENQUE resolved as shift
  ! shift/reduce conflict for IGUALQUE resolved as shift
  ! shift/reduce conflict for NIGUALQUE resolved as shift
  ! shift/reduce conflict for MENORIGUAL resolved as shift
    PUNTOCOMA       reduce using rule 32 (expresion -> expresion MENQUE expresion .)
    COMA            reduce using rule 32 (expresion -> expresion MENQUE expresion .)
    PARDER          reduce using rule 32 (expresion -> expresion MENQUE expresion .)
    MAS             shift and go to state 46
    MENOS           shift and go to state 47
    POR             shift and go to state 48
    DIVIDIDO        shift and go to state 49
    MAYQUE          shift and go to state 50
    MENQUE          shift and go to state 51
    IGUALQUE        shift and go to state 52
    NIGUALQUE       shift and go to state 53
    MENORIGUAL      shift and go to state 54

  ! MAS             [ reduce using rule 32 (expresion -> expresion MENQUE expresion .) ]
  ! MENOS           [ reduce using rule 32 (expresion -> expresion MENQUE expresion .) ]
  ! POR             [ reduce using rule 32 (expresion -> expresion MENQUE expresion .) ]
  ! DIVIDIDO        [ reduce using rule 32 (expresion -> expresion MENQUE expresion .) ]
  ! MAYQUE          [ reduce using rule 32 (expresion -> expresion MENQUE expresion .) ]
  ! MENQUE          [ reduce using rule 32 (expresion -> expresion MENQUE expresion .) ]
  ! IGUALQUE        [ reduce using rule 32 (expresion -> expresion MENQUE expresion .) ]
  ! NIGUALQUE       [ reduce using rule 32 (expresion -> expresion MENQUE expresion .) ]
  ! MENORIGUAL      [ reduce using rule 32 (expresion -> expresion MENQUE expresion .) ]


state 73

    (33) expresion -> expresion IGUALQUE expresion .
    (27) expresion -> expresion . MAS expresion
    (28) expresion -> expresion . MENOS expresion
    (29) expresion -> expresion . POR expresion
    (30) expresion -> expresion . DIVIDIDO expresion
    (31) expresion -> expresion . MAYQUE expresion
    (32) expresion -> expresion . MENQUE expresion
    (33) expresion -> expresion . IGUALQUE expresion
    (34) expresion -> expresion . NIGUALQUE expresion
    (35) expresion -> expresion . MENORIGUAL expresion

  ! shift/reduce conflict for MAS resolved as shift
  ! shift/reduce conflict for MENOS resolved as shift
  ! shift/reduce conflict for POR resolved as shift
  ! shift/reduce conflict for DIVIDIDO resolved as shift
  ! shift/reduce conflict for MAYQUE resolved as shift
  ! shift/reduce conflict for MENQUE resolved as shift
  ! shift/reduce conflict for IGUALQUE resolved as shift
  ! shift/reduce conflict for NIGUALQUE resolved as shift
  ! shift/reduce conflict for MENORIGUAL resolved as shift
    PUNTOCOMA       reduce using rule 33 (expresion -> expresion IGUALQUE expresion .)
    COMA            reduce using rule 33 (expresion -> expresion IGUALQUE expresion .)
    PARDER          reduce using rule 33 (expresion -> expresion IGUALQUE expresion .)
    MAS             shift and go to state 46
    MENOS           shift and go to state 47
    POR             shift and go to state 48
    DIVIDIDO        shift and go to state 49
    MAYQUE          shift and go to state 50
    MENQUE          shift and go to state 51
    IGUALQUE        shift and go to state 52
    NIGUALQUE       shift and go to state 53
    MENORIGUAL      shift and go to state 54

  ! MAS             [ reduce using rule 33 (expresion -> expresion IGUALQUE expresion .) ]
  ! MENOS           [ reduce using rule 33 (expresion -> expresion IGUALQUE expresion .) ]
  ! POR             [ reduce using rule 33 (expresion -> expresion IGUALQUE expresion .) ]
  ! DIVIDIDO        [ reduce using rule 33 (expresion -> expresion IGUALQUE expresion .) ]
  ! MAYQUE          [ reduce using rule 33 (expresion -> expresion IGUALQUE expresion .) ]
  ! MENQUE          [ reduce using rule 33 (expresion -> expresion IGUALQUE expresion .) ]
  ! IGUALQUE        [ reduce using rule 33 (expresion -> expresion IGUALQUE expresion .) ]
  ! NIGUALQUE       [ reduce using rule 33 (expresion -> expresion IGUALQUE expresion .) ]
  ! MENORIGUAL      [ reduce using rule 33 (expresion -> expresion IGUALQUE expresion .) ]


state 74

    (34) expresion -> expresion NIGUALQUE expresion .
    (27) expresion -> expresion . MAS expresion
    (28) expresion -> expresion . MENOS expresion
    (29) expresion -> expresion . POR expresion
    (30) expresion -> expresion . DIVIDIDO expresion
    (31) expresion -> expresion . MAYQUE expresion
    (32) expresion -> expresion . MENQUE expresion
    (33) expresion -> expresion . IGUALQUE expresion
    (34) expresion -> expresion . NIGUALQUE expresion
    (35) expresion -> expresion . MENORIGUAL expresion

  ! shift/reduce conflict for MAS resolved as shift
  ! shift/reduce conflict for MENOS resolved as shift
  ! shift/reduce conflict for POR resolved as shift
  ! shift/reduce conflict for DIVIDIDO resolved as shift
  ! shift/reduce conflict for MAYQUE resolved as shift
  ! shift/reduce conflict for MENQUE resolved as shift
  ! shift/reduce conflict for IGUALQUE resolved as shift
  ! shift/reduce conflict for NIGUALQUE resolved as shift
  ! shift/reduce conflict for MENORIGUAL resolved as shift
    PUNTOCOMA       reduce using rule 34 (expresion -> expresion NIGUALQUE expresion .)
    COMA            reduce using rule 34 (expresion -> expresion NIGUALQUE expresion .)
    PARDER          reduce using rule 34 (expresion -> expresion NIGUALQUE expresion .)
    MAS             shift and go to state 46
    MENOS           shift and go to state 47
    POR             shift and go to state 48
    DIVIDIDO        shift and go to state 49
    MAYQUE          shift and go to state 50
    MENQUE          shift and go to state 51
    IGUALQUE        shift and go to state 52
    NIGUALQUE       shift and go to state 53
    MENORIGUAL      shift and go to state 54

  ! MAS             [ reduce using rule 34 (expresion -> expresion NIGUALQUE expresion .) ]
  ! MENOS           [ reduce using rule 34 (expresion -> expresion NIGUALQUE expresion .) ]
  ! POR             [ reduce using rule 34 (expresion -> expresion NIGUALQUE expresion .) ]
  ! DIVIDIDO        [ reduce using rule 34 (expresion -> expresion NIGUALQUE expresion .) ]
  ! MAYQUE          [ reduce using rule 34 (expresion -> expresion NIGUALQUE expresion .) ]
  ! MENQUE          [ reduce using rule 34 (expresion -> expresion NIGUALQUE expresion .) ]
  ! IGUALQUE        [ reduce using rule 34 (expresion -> expresion NIGUALQUE expresion .) ]
  ! NIGUALQUE       [ reduce using rule 34 (expresion -> expresion NIGUALQUE expresion .) ]
  ! MENORIGUAL      [ reduce using rule 34 (expresion -> expresion NIGUALQUE expresion .) ]


state 75

    (35) expresion -> expresion MENORIGUAL expresion .
    (27) expresion -> expresion . MAS expresion
    (28) expresion -> expresion . MENOS expresion
    (29) expresion -> expresion . POR expresion
    (30) expresion -> expresion . DIVIDIDO expresion
    (31) expresion -> expresion . MAYQUE expresion
    (32) expresion -> expresion . MENQUE expresion
    (33) expresion -> expresion . IGUALQUE expresion
    (34) expresion -> expresion . NIGUALQUE expresion
    (35) expresion -> expresion . MENORIGUAL expresion

  ! shift/reduce conflict for MAS resolved as shift
  ! shift/reduce conflict for MENOS resolved as shift
  ! shift/reduce conflict for POR resolved as shift
  ! shift/reduce conflict for DIVIDIDO resolved as shift
  ! shift/reduce conflict for MAYQUE resolved as shift
  ! shift/reduce conflict for MENQUE resolved as shift
  ! shift/reduce conflict for IGUALQUE resolved as shift
  ! shift/reduce conflict for NIGUALQUE resolved as shift
  ! shift/reduce conflict for MENORIGUAL resolved as shift
    PUNTOCOMA       reduce using rule 35 (expresion -> expresion MENORIGUAL expresion .)
    COMA            reduce using rule 35 (expresion -> expresion MENORIGUAL expresion .)
    PARDER          reduce using rule 35 (expresion -> expresion MENORIGUAL expresion .)
    MAS             shift and go to state 46
    MENOS           shift and go to state 47
    POR             shift and go to state 48
    DIVIDIDO        shift and go to state 49
    MAYQUE          shift and go to state 50
    MENQUE          shift and go to state 51
    IGUALQUE        shift and go to state 52
    NIGUALQUE       shift and go to state 53
    MENORIGUAL      shift and go to state 54

  ! MAS             [ reduce using rule 35 (expresion -> expresion MENORIGUAL expresion .) ]
  ! MENOS           [ reduce using rule 35 (expresion -> expresion MENORIGUAL expresion .) ]
  ! POR             [ reduce using rule 35 (expresion -> expresion MENORIGUAL expresion .) ]
  ! DIVIDIDO        [ reduce using rule 35 (expresion -> expresion MENORIGUAL expresion .) ]
  ! MAYQUE          [ reduce using rule 35 (expresion -> expresion MENORIGUAL expresion .) ]
  ! MENQUE          [ reduce using rule 35 (expresion -> expresion MENORIGUAL expresion .) ]
  ! IGUALQUE        [ reduce using rule 35 (expresion -> expresion MENORIGUAL expresion .) ]
  ! NIGUALQUE       [ reduce using rule 35 (expresion -> expresion MENORIGUAL expresion .) ]
  ! MENORIGUAL      [ reduce using rule 35 (expresion -> expresion MENORIGUAL expresion .) ]


state 76

    (37) expresion -> PARIZQ expresion PARDER .

    PUNTOCOMA       reduce using rule 37 (expresion -> PARIZQ expresion PARDER .)
    MAS             reduce using rule 37 (expresion -> PARIZQ expresion PARDER .)
    MENOS           reduce using rule 37 (expresion -> PARIZQ expresion PARDER .)
    POR             reduce using rule 37 (expresion -> PARIZQ expresion PARDER .)
    DIVIDIDO        reduce using rule 37 (expresion -> PARIZQ expresion PARDER .)
    MAYQUE          reduce using rule 37 (expresion -> PARIZQ expresion PARDER .)
    MENQUE          reduce using rule 37 (expresion -> PARIZQ expresion PARDER .)
    IGUALQUE        reduce using rule 37 (expresion -> PARIZQ expresion PARDER .)
    NIGUALQUE       reduce using rule 37 (expresion -> PARIZQ expresion PARDER .)
    MENORIGUAL      reduce using rule 37 (expresion -> PARIZQ expresion PARDER .)
    COMA            reduce using rule 37 (expresion -> PARIZQ expresion PARDER .)
    PARDER          reduce using rule 37 (expresion -> PARIZQ expresion PARDER .)


state 77

    (41) expresion -> ID PUNTO ID .

    PUNTOCOMA       reduce using rule 41 (expresion -> ID PUNTO ID .)
    MAS             reduce using rule 41 (expresion -> ID PUNTO ID .)
    MENOS           reduce using rule 41 (expresion -> ID PUNTO ID .)
    POR             reduce using rule 41 (expresion -> ID PUNTO ID .)
    DIVIDIDO        reduce using rule 41 (expresion -> ID PUNTO ID .)
    MAYQUE          reduce using rule 41 (expresion -> ID PUNTO ID .)
    MENQUE          reduce using rule 41 (expresion -> ID PUNTO ID .)
    IGUALQUE        reduce using rule 41 (expresion -> ID PUNTO ID .)
    NIGUALQUE       reduce using rule 41 (expresion -> ID PUNTO ID .)
    MENORIGUAL      reduce using rule 41 (expresion -> ID PUNTO ID .)
    COMA            reduce using rule 41 (expresion -> ID PUNTO ID .)
    PARDER          reduce using rule 41 (expresion -> ID PUNTO ID .)


state 78

    (42) expresion -> ID PARIZQ expresion . COMA expresion PARDER
    (27) expresion -> expresion . MAS expresion
    (28) expresion -> expresion . MENOS expresion
    (29) expresion -> expresion . POR expresion
    (30) expresion -> expresion . DIVIDIDO expresion
    (31) expresion -> expresion . MAYQUE expresion
    (32) expresion -> expresion . MENQUE expresion
    (33) expresion -> expresion . IGUALQUE expresion
    (34) expresion -> expresion . NIGUALQUE expresion
    (35) expresion -> expresion . MENORIGUAL expresion

    COMA            shift and go to state 86
    MAS             shift and go to state 46
    MENOS           shift and go to state 47
    POR             shift and go to state 48
    DIVIDIDO        shift and go to state 49
    MAYQUE          shift and go to state 50
    MENQUE          shift and go to state 51
    IGUALQUE        shift and go to state 52
    NIGUALQUE       shift and go to state 53
    MENORIGUAL      shift and go to state 54


state 79

    (20) imprimir_instr -> CONSOLE PUNTO LOG PARIZQ expresion . PARDER PUNTOCOMA
    (27) expresion -> expresion . MAS expresion
    (28) expresion -> expresion . MENOS expresion
    (29) expresion -> expresion . POR expresion
    (30) expresion -> expresion . DIVIDIDO expresion
    (31) expresion -> expresion . MAYQUE expresion
    (32) expresion -> expresion . MENQUE expresion
    (33) expresion -> expresion . IGUALQUE expresion
    (34) expresion -> expresion . NIGUALQUE expresion
    (35) expresion -> expresion . MENORIGUAL expresion

    PARDER          shift and go to state 87
    MAS             shift and go to state 46
    MENOS           shift and go to state 47
    POR             shift and go to state 48
    DIVIDIDO        shift and go to state 49
    MAYQUE          shift and go to state 50
    MENQUE          shift and go to state 51
    IGUALQUE        shift and go to state 52
    NIGUALQUE       shift and go to state 53
    MENORIGUAL      shift and go to state 54


state 80

    (21) declaracion_instr -> LET ID IGUAL expresion PUNTOCOMA .

    CONSOLE         reduce using rule 21 (declaracion_instr -> LET ID IGUAL expresion PUNTOCOMA .)
    LET             reduce using rule 21 (declaracion_instr -> LET ID IGUAL expresion PUNTOCOMA .)
    ID              reduce using rule 21 (declaracion_instr -> LET ID IGUAL expresion PUNTOCOMA .)
    IF              reduce using rule 21 (declaracion_instr -> LET ID IGUAL expresion PUNTOCOMA .)
    FUNCTION        reduce using rule 21 (declaracion_instr -> LET ID IGUAL expresion PUNTOCOMA .)
    INTERFACE       reduce using rule 21 (declaracion_instr -> LET ID IGUAL expresion PUNTOCOMA .)
    RETURN          reduce using rule 21 (declaracion_instr -> LET ID IGUAL expresion PUNTOCOMA .)
    BREAK           reduce using rule 21 (declaracion_instr -> LET ID IGUAL expresion PUNTOCOMA .)
    $end            reduce using rule 21 (declaracion_instr -> LET ID IGUAL expresion PUNTOCOMA .)
    LLAVDER         reduce using rule 21 (declaracion_instr -> LET ID IGUAL expresion PUNTOCOMA .)


state 81

    (25) call_funcion_instr -> ID PARIZQ expresion COMA expresion . PARDER PUNTOCOMA
    (27) expresion -> expresion . MAS expresion
    (28) expresion -> expresion . MENOS expresion
    (29) expresion -> expresion . POR expresion
    (30) expresion -> expresion . DIVIDIDO expresion
    (31) expresion -> expresion . MAYQUE expresion
    (32) expresion -> expresion . MENQUE expresion
    (33) expresion -> expresion . IGUALQUE expresion
    (34) expresion -> expresion . NIGUALQUE expresion
    (35) expresion -> expresion . MENORIGUAL expresion

    PARDER          shift and go to state 88
    MAS             shift and go to state 46
    MENOS           shift and go to state 47
    POR             shift and go to state 48
    DIVIDIDO        shift and go to state 49
    MAYQUE          shift and go to state 50
    MENQUE          shift and go to state 51
    IGUALQUE        shift and go to state 52
    NIGUALQUE       shift and go to state 53
    MENORIGUAL      shift and go to state 54


state 82

    (23) if_instr -> IF PARIZQ expresion PARDER LLAVIZQ . instrucciones LLAVDER PUNTOCOMA
    (26) if_else_instr -> IF PARIZQ expresion PARDER LLAVIZQ . instrucciones LLAVDER ELSE LLAVIZQ instrucciones LLAVDER PUNTOCOMA
    (2) instrucciones -> . instrucciones instruccion
    (3) instrucciones -> . instruccion
    (4) instruccion -> . imprimir_instr
    (5) instruccion -> . declaracion_instr
    (6) instruccion -> . asignacion_instr
    (7) instruccion -> . if_instr
    (8) instruccion -> . if_else_instr
    (9) instruccion -> . funcion_instr
    (10) instruccion -> . call_funcion_instr
    (11) instruccion -> . interface_instr
    (12) instruccion -> . return_instr
    (13) instruccion -> . break_instr
    (20) imprimir_instr -> . CONSOLE PUNTO LOG PARIZQ expresion PARDER PUNTOCOMA
    (21) declaracion_instr -> . LET ID IGUAL expresion PUNTOCOMA
    (22) asignacion_instr -> . ID IGUAL expresion PUNTOCOMA
    (23) if_instr -> . IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER PUNTOCOMA
    (26) if_else_instr -> . IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER ELSE LLAVIZQ instrucciones LLAVDER PUNTOCOMA
    (24) funcion_instr -> . FUNCTION ID PARIZQ ID COMA ID PARDER LLAVIZQ instrucciones LLAVDER PUNTOCOMA
    (25) call_funcion_instr -> . ID PARIZQ expresion COMA expresion PARDER PUNTOCOMA
    (17) interface_instr -> . INTERFACE ID LLAVIZQ interface_params PUNTOCOMA LLAVDER
    (15) return_instr -> . RETURN expresion PUNTOCOMA
    (16) return_instr -> . RETURN PUNTOCOMA
    (14) break_instr -> . BREAK PUNTOCOMA

    CONSOLE         shift and go to state 14
    LET             shift and go to state 15
    ID              shift and go to state 16
    IF              shift and go to state 17
    FUNCTION        shift and go to state 18
    INTERFACE       shift and go to state 19
    RETURN          shift and go to state 20
    BREAK           shift and go to state 21

    instrucciones                  shift and go to state 89
    instruccion                    shift and go to state 3
    imprimir_instr                 shift and go to state 4
    declaracion_instr              shift and go to state 5
    asignacion_instr               shift and go to state 6
    if_instr                       shift and go to state 7
    if_else_instr                  shift and go to state 8
    funcion_instr                  shift and go to state 9
    call_funcion_instr             shift and go to state 10
    interface_instr                shift and go to state 11
    return_instr                   shift and go to state 12
    break_instr                    shift and go to state 13

state 83

    (24) funcion_instr -> FUNCTION ID PARIZQ ID COMA . ID PARDER LLAVIZQ instrucciones LLAVDER PUNTOCOMA

    ID              shift and go to state 90


state 84

    (19) interface_params -> ID DOSPUNTOS . expresion
    (27) expresion -> . expresion MAS expresion
    (28) expresion -> . expresion MENOS expresion
    (29) expresion -> . expresion POR expresion
    (30) expresion -> . expresion DIVIDIDO expresion
    (31) expresion -> . expresion MAYQUE expresion
    (32) expresion -> . expresion MENQUE expresion
    (33) expresion -> . expresion IGUALQUE expresion
    (34) expresion -> . expresion NIGUALQUE expresion
    (35) expresion -> . expresion MENORIGUAL expresion
    (36) expresion -> . MENOS expresion
    (37) expresion -> . PARIZQ expresion PARDER
    (38) expresion -> . ENTERO
    (39) expresion -> . CADENA
    (40) expresion -> . ID
    (41) expresion -> . ID PUNTO ID
    (42) expresion -> . ID PARIZQ expresion COMA expresion PARDER

    MENOS           shift and go to state 32
    PARIZQ          shift and go to state 33
    ENTERO          shift and go to state 34
    CADENA          shift and go to state 35
    ID              shift and go to state 36

    expresion                      shift and go to state 91

state 85

    (17) interface_instr -> INTERFACE ID LLAVIZQ interface_params PUNTOCOMA . LLAVDER
    (18) interface_params -> interface_params PUNTOCOMA . ID DOSPUNTOS expresion

    LLAVDER         shift and go to state 93
    ID              shift and go to state 92


state 86

    (42) expresion -> ID PARIZQ expresion COMA . expresion PARDER
    (27) expresion -> . expresion MAS expresion
    (28) expresion -> . expresion MENOS expresion
    (29) expresion -> . expresion POR expresion
    (30) expresion -> . expresion DIVIDIDO expresion
    (31) expresion -> . expresion MAYQUE expresion
    (32) expresion -> . expresion MENQUE expresion
    (33) expresion -> . expresion IGUALQUE expresion
    (34) expresion -> . expresion NIGUALQUE expresion
    (35) expresion -> . expresion MENORIGUAL expresion
    (36) expresion -> . MENOS expresion
    (37) expresion -> . PARIZQ expresion PARDER
    (38) expresion -> . ENTERO
    (39) expresion -> . CADENA
    (40) expresion -> . ID
    (41) expresion -> . ID PUNTO ID
    (42) expresion -> . ID PARIZQ expresion COMA expresion PARDER

    MENOS           shift and go to state 32
    PARIZQ          shift and go to state 33
    ENTERO          shift and go to state 34
    CADENA          shift and go to state 35
    ID              shift and go to state 36

    expresion                      shift and go to state 94

state 87

    (20) imprimir_instr -> CONSOLE PUNTO LOG PARIZQ expresion PARDER . PUNTOCOMA

    PUNTOCOMA       shift and go to state 95


state 88

    (25) call_funcion_instr -> ID PARIZQ expresion COMA expresion PARDER . PUNTOCOMA

    PUNTOCOMA       shift and go to state 96


state 89

    (23) if_instr -> IF PARIZQ expresion PARDER LLAVIZQ instrucciones . LLAVDER PUNTOCOMA
    (26) if_else_instr -> IF PARIZQ expresion PARDER LLAVIZQ instrucciones . LLAVDER ELSE LLAVIZQ instrucciones LLAVDER PUNTOCOMA
    (2) instrucciones -> instrucciones . instruccion
    (4) instruccion -> . imprimir_instr
    (5) instruccion -> . declaracion_instr
    (6) instruccion -> . asignacion_instr
    (7) instruccion -> . if_instr
    (8) instruccion -> . if_else_instr
    (9) instruccion -> . funcion_instr
    (10) instruccion -> . call_funcion_instr
    (11) instruccion -> . interface_instr
    (12) instruccion -> . return_instr
    (13) instruccion -> . break_instr
    (20) imprimir_instr -> . CONSOLE PUNTO LOG PARIZQ expresion PARDER PUNTOCOMA
    (21) declaracion_instr -> . LET ID IGUAL expresion PUNTOCOMA
    (22) asignacion_instr -> . ID IGUAL expresion PUNTOCOMA
    (23) if_instr -> . IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER PUNTOCOMA
    (26) if_else_instr -> . IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER ELSE LLAVIZQ instrucciones LLAVDER PUNTOCOMA
    (24) funcion_instr -> . FUNCTION ID PARIZQ ID COMA ID PARDER LLAVIZQ instrucciones LLAVDER PUNTOCOMA
    (25) call_funcion_instr -> . ID PARIZQ expresion COMA expresion PARDER PUNTOCOMA
    (17) interface_instr -> . INTERFACE ID LLAVIZQ interface_params PUNTOCOMA LLAVDER
    (15) return_instr -> . RETURN expresion PUNTOCOMA
    (16) return_instr -> . RETURN PUNTOCOMA
    (14) break_instr -> . BREAK PUNTOCOMA

    LLAVDER         shift and go to state 97
    CONSOLE         shift and go to state 14
    LET             shift and go to state 15
    ID              shift and go to state 16
    IF              shift and go to state 17
    FUNCTION        shift and go to state 18
    INTERFACE       shift and go to state 19
    RETURN          shift and go to state 20
    BREAK           shift and go to state 21

    instruccion                    shift and go to state 22
    imprimir_instr                 shift and go to state 4
    declaracion_instr              shift and go to state 5
    asignacion_instr               shift and go to state 6
    if_instr                       shift and go to state 7
    if_else_instr                  shift and go to state 8
    funcion_instr                  shift and go to state 9
    call_funcion_instr             shift and go to state 10
    interface_instr                shift and go to state 11
    return_instr                   shift and go to state 12
    break_instr                    shift and go to state 13

state 90

    (24) funcion_instr -> FUNCTION ID PARIZQ ID COMA ID . PARDER LLAVIZQ instrucciones LLAVDER PUNTOCOMA

    PARDER          shift and go to state 98


state 91

    (19) interface_params -> ID DOSPUNTOS expresion .
    (27) expresion -> expresion . MAS expresion
    (28) expresion -> expresion . MENOS expresion
    (29) expresion -> expresion . POR expresion
    (30) expresion -> expresion . DIVIDIDO expresion
    (31) expresion -> expresion . MAYQUE expresion
    (32) expresion -> expresion . MENQUE expresion
    (33) expresion -> expresion . IGUALQUE expresion
    (34) expresion -> expresion . NIGUALQUE expresion
    (35) expresion -> expresion . MENORIGUAL expresion

    PUNTOCOMA       reduce using rule 19 (interface_params -> ID DOSPUNTOS expresion .)
    MAS             shift and go to state 46
    MENOS           shift and go to state 47
    POR             shift and go to state 48
    DIVIDIDO        shift and go to state 49
    MAYQUE          shift and go to state 50
    MENQUE          shift and go to state 51
    IGUALQUE        shift and go to state 52
    NIGUALQUE       shift and go to state 53
    MENORIGUAL      shift and go to state 54


state 92

    (18) interface_params -> interface_params PUNTOCOMA ID . DOSPUNTOS expresion

    DOSPUNTOS       shift and go to state 99


state 93

    (17) interface_instr -> INTERFACE ID LLAVIZQ interface_params PUNTOCOMA LLAVDER .

    CONSOLE         reduce using rule 17 (interface_instr -> INTERFACE ID LLAVIZQ interface_params PUNTOCOMA LLAVDER .)
    LET             reduce using rule 17 (interface_instr -> INTERFACE ID LLAVIZQ interface_params PUNTOCOMA LLAVDER .)
    ID              reduce using rule 17 (interface_instr -> INTERFACE ID LLAVIZQ interface_params PUNTOCOMA LLAVDER .)
    IF              reduce using rule 17 (interface_instr -> INTERFACE ID LLAVIZQ interface_params PUNTOCOMA LLAVDER .)
    FUNCTION        reduce using rule 17 (interface_instr -> INTERFACE ID LLAVIZQ interface_params PUNTOCOMA LLAVDER .)
    INTERFACE       reduce using rule 17 (interface_instr -> INTERFACE ID LLAVIZQ interface_params PUNTOCOMA LLAVDER .)
    RETURN          reduce using rule 17 (interface_instr -> INTERFACE ID LLAVIZQ interface_params PUNTOCOMA LLAVDER .)
    BREAK           reduce using rule 17 (interface_instr -> INTERFACE ID LLAVIZQ interface_params PUNTOCOMA LLAVDER .)
    $end            reduce using rule 17 (interface_instr -> INTERFACE ID LLAVIZQ interface_params PUNTOCOMA LLAVDER .)
    LLAVDER         reduce using rule 17 (interface_instr -> INTERFACE ID LLAVIZQ interface_params PUNTOCOMA LLAVDER .)


state 94

    (42) expresion -> ID PARIZQ expresion COMA expresion . PARDER
    (27) expresion -> expresion . MAS expresion
    (28) expresion -> expresion . MENOS expresion
    (29) expresion -> expresion . POR expresion
    (30) expresion -> expresion . DIVIDIDO expresion
    (31) expresion -> expresion . MAYQUE expresion
    (32) expresion -> expresion . MENQUE expresion
    (33) expresion -> expresion . IGUALQUE expresion
    (34) expresion -> expresion . NIGUALQUE expresion
    (35) expresion -> expresion . MENORIGUAL expresion

    PARDER          shift and go to state 100
    MAS             shift and go to state 46
    MENOS           shift and go to state 47
    POR             shift and go to state 48
    DIVIDIDO        shift and go to state 49
    MAYQUE          shift and go to state 50
    MENQUE          shift and go to state 51
    IGUALQUE        shift and go to state 52
    NIGUALQUE       shift and go to state 53
    MENORIGUAL      shift and go to state 54


state 95

    (20) imprimir_instr -> CONSOLE PUNTO LOG PARIZQ expresion PARDER PUNTOCOMA .

    CONSOLE         reduce using rule 20 (imprimir_instr -> CONSOLE PUNTO LOG PARIZQ expresion PARDER PUNTOCOMA .)
    LET             reduce using rule 20 (imprimir_instr -> CONSOLE PUNTO LOG PARIZQ expresion PARDER PUNTOCOMA .)
    ID              reduce using rule 20 (imprimir_instr -> CONSOLE PUNTO LOG PARIZQ expresion PARDER PUNTOCOMA .)
    IF              reduce using rule 20 (imprimir_instr -> CONSOLE PUNTO LOG PARIZQ expresion PARDER PUNTOCOMA .)
    FUNCTION        reduce using rule 20 (imprimir_instr -> CONSOLE PUNTO LOG PARIZQ expresion PARDER PUNTOCOMA .)
    INTERFACE       reduce using rule 20 (imprimir_instr -> CONSOLE PUNTO LOG PARIZQ expresion PARDER PUNTOCOMA .)
    RETURN          reduce using rule 20 (imprimir_instr -> CONSOLE PUNTO LOG PARIZQ expresion PARDER PUNTOCOMA .)
    BREAK           reduce using rule 20 (imprimir_instr -> CONSOLE PUNTO LOG PARIZQ expresion PARDER PUNTOCOMA .)
    $end            reduce using rule 20 (imprimir_instr -> CONSOLE PUNTO LOG PARIZQ expresion PARDER PUNTOCOMA .)
    LLAVDER         reduce using rule 20 (imprimir_instr -> CONSOLE PUNTO LOG PARIZQ expresion PARDER PUNTOCOMA .)


state 96

    (25) call_funcion_instr -> ID PARIZQ expresion COMA expresion PARDER PUNTOCOMA .

    CONSOLE         reduce using rule 25 (call_funcion_instr -> ID PARIZQ expresion COMA expresion PARDER PUNTOCOMA .)
    LET             reduce using rule 25 (call_funcion_instr -> ID PARIZQ expresion COMA expresion PARDER PUNTOCOMA .)
    ID              reduce using rule 25 (call_funcion_instr -> ID PARIZQ expresion COMA expresion PARDER PUNTOCOMA .)
    IF              reduce using rule 25 (call_funcion_instr -> ID PARIZQ expresion COMA expresion PARDER PUNTOCOMA .)
    FUNCTION        reduce using rule 25 (call_funcion_instr -> ID PARIZQ expresion COMA expresion PARDER PUNTOCOMA .)
    INTERFACE       reduce using rule 25 (call_funcion_instr -> ID PARIZQ expresion COMA expresion PARDER PUNTOCOMA .)
    RETURN          reduce using rule 25 (call_funcion_instr -> ID PARIZQ expresion COMA expresion PARDER PUNTOCOMA .)
    BREAK           reduce using rule 25 (call_funcion_instr -> ID PARIZQ expresion COMA expresion PARDER PUNTOCOMA .)
    $end            reduce using rule 25 (call_funcion_instr -> ID PARIZQ expresion COMA expresion PARDER PUNTOCOMA .)
    LLAVDER         reduce using rule 25 (call_funcion_instr -> ID PARIZQ expresion COMA expresion PARDER PUNTOCOMA .)


state 97

    (23) if_instr -> IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER . PUNTOCOMA
    (26) if_else_instr -> IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER . ELSE LLAVIZQ instrucciones LLAVDER PUNTOCOMA

    PUNTOCOMA       shift and go to state 101
    ELSE            shift and go to state 102


state 98

    (24) funcion_instr -> FUNCTION ID PARIZQ ID COMA ID PARDER . LLAVIZQ instrucciones LLAVDER PUNTOCOMA

    LLAVIZQ         shift and go to state 103


state 99

    (18) interface_params -> interface_params PUNTOCOMA ID DOSPUNTOS . expresion
    (27) expresion -> . expresion MAS expresion
    (28) expresion -> . expresion MENOS expresion
    (29) expresion -> . expresion POR expresion
    (30) expresion -> . expresion DIVIDIDO expresion
    (31) expresion -> . expresion MAYQUE expresion
    (32) expresion -> . expresion MENQUE expresion
    (33) expresion -> . expresion IGUALQUE expresion
    (34) expresion -> . expresion NIGUALQUE expresion
    (35) expresion -> . expresion MENORIGUAL expresion
    (36) expresion -> . MENOS expresion
    (37) expresion -> . PARIZQ expresion PARDER
    (38) expresion -> . ENTERO
    (39) expresion -> . CADENA
    (40) expresion -> . ID
    (41) expresion -> . ID PUNTO ID
    (42) expresion -> . ID PARIZQ expresion COMA expresion PARDER

    MENOS           shift and go to state 32
    PARIZQ          shift and go to state 33
    ENTERO          shift and go to state 34
    CADENA          shift and go to state 35
    ID              shift and go to state 36

    expresion                      shift and go to state 104

state 100

    (42) expresion -> ID PARIZQ expresion COMA expresion PARDER .

    PUNTOCOMA       reduce using rule 42 (expresion -> ID PARIZQ expresion COMA expresion PARDER .)
    MAS             reduce using rule 42 (expresion -> ID PARIZQ expresion COMA expresion PARDER .)
    MENOS           reduce using rule 42 (expresion -> ID PARIZQ expresion COMA expresion PARDER .)
    POR             reduce using rule 42 (expresion -> ID PARIZQ expresion COMA expresion PARDER .)
    DIVIDIDO        reduce using rule 42 (expresion -> ID PARIZQ expresion COMA expresion PARDER .)
    MAYQUE          reduce using rule 42 (expresion -> ID PARIZQ expresion COMA expresion PARDER .)
    MENQUE          reduce using rule 42 (expresion -> ID PARIZQ expresion COMA expresion PARDER .)
    IGUALQUE        reduce using rule 42 (expresion -> ID PARIZQ expresion COMA expresion PARDER .)
    NIGUALQUE       reduce using rule 42 (expresion -> ID PARIZQ expresion COMA expresion PARDER .)
    MENORIGUAL      reduce using rule 42 (expresion -> ID PARIZQ expresion COMA expresion PARDER .)
    COMA            reduce using rule 42 (expresion -> ID PARIZQ expresion COMA expresion PARDER .)
    PARDER          reduce using rule 42 (expresion -> ID PARIZQ expresion COMA expresion PARDER .)


state 101

    (23) if_instr -> IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER PUNTOCOMA .

    CONSOLE         reduce using rule 23 (if_instr -> IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER PUNTOCOMA .)
    LET             reduce using rule 23 (if_instr -> IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER PUNTOCOMA .)
    ID              reduce using rule 23 (if_instr -> IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER PUNTOCOMA .)
    IF              reduce using rule 23 (if_instr -> IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER PUNTOCOMA .)
    FUNCTION        reduce using rule 23 (if_instr -> IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER PUNTOCOMA .)
    INTERFACE       reduce using rule 23 (if_instr -> IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER PUNTOCOMA .)
    RETURN          reduce using rule 23 (if_instr -> IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER PUNTOCOMA .)
    BREAK           reduce using rule 23 (if_instr -> IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER PUNTOCOMA .)
    $end            reduce using rule 23 (if_instr -> IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER PUNTOCOMA .)
    LLAVDER         reduce using rule 23 (if_instr -> IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER PUNTOCOMA .)


state 102

    (26) if_else_instr -> IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER ELSE . LLAVIZQ instrucciones LLAVDER PUNTOCOMA

    LLAVIZQ         shift and go to state 105


state 103

    (24) funcion_instr -> FUNCTION ID PARIZQ ID COMA ID PARDER LLAVIZQ . instrucciones LLAVDER PUNTOCOMA
    (2) instrucciones -> . instrucciones instruccion
    (3) instrucciones -> . instruccion
    (4) instruccion -> . imprimir_instr
    (5) instruccion -> . declaracion_instr
    (6) instruccion -> . asignacion_instr
    (7) instruccion -> . if_instr
    (8) instruccion -> . if_else_instr
    (9) instruccion -> . funcion_instr
    (10) instruccion -> . call_funcion_instr
    (11) instruccion -> . interface_instr
    (12) instruccion -> . return_instr
    (13) instruccion -> . break_instr
    (20) imprimir_instr -> . CONSOLE PUNTO LOG PARIZQ expresion PARDER PUNTOCOMA
    (21) declaracion_instr -> . LET ID IGUAL expresion PUNTOCOMA
    (22) asignacion_instr -> . ID IGUAL expresion PUNTOCOMA
    (23) if_instr -> . IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER PUNTOCOMA
    (26) if_else_instr -> . IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER ELSE LLAVIZQ instrucciones LLAVDER PUNTOCOMA
    (24) funcion_instr -> . FUNCTION ID PARIZQ ID COMA ID PARDER LLAVIZQ instrucciones LLAVDER PUNTOCOMA
    (25) call_funcion_instr -> . ID PARIZQ expresion COMA expresion PARDER PUNTOCOMA
    (17) interface_instr -> . INTERFACE ID LLAVIZQ interface_params PUNTOCOMA LLAVDER
    (15) return_instr -> . RETURN expresion PUNTOCOMA
    (16) return_instr -> . RETURN PUNTOCOMA
    (14) break_instr -> . BREAK PUNTOCOMA

    CONSOLE         shift and go to state 14
    LET             shift and go to state 15
    ID              shift and go to state 16
    IF              shift and go to state 17
    FUNCTION        shift and go to state 18
    INTERFACE       shift and go to state 19
    RETURN          shift and go to state 20
    BREAK           shift and go to state 21

    instrucciones                  shift and go to state 106
    instruccion                    shift and go to state 3
    imprimir_instr                 shift and go to state 4
    declaracion_instr              shift and go to state 5
    asignacion_instr               shift and go to state 6
    if_instr                       shift and go to state 7
    if_else_instr                  shift and go to state 8
    funcion_instr                  shift and go to state 9
    call_funcion_instr             shift and go to state 10
    interface_instr                shift and go to state 11
    return_instr                   shift and go to state 12
    break_instr                    shift and go to state 13

state 104

    (18) interface_params -> interface_params PUNTOCOMA ID DOSPUNTOS expresion .
    (27) expresion -> expresion . MAS expresion
    (28) expresion -> expresion . MENOS expresion
    (29) expresion -> expresion . POR expresion
    (30) expresion -> expresion . DIVIDIDO expresion
    (31) expresion -> expresion . MAYQUE expresion
    (32) expresion -> expresion . MENQUE expresion
    (33) expresion -> expresion . IGUALQUE expresion
    (34) expresion -> expresion . NIGUALQUE expresion
    (35) expresion -> expresion . MENORIGUAL expresion

    PUNTOCOMA       reduce using rule 18 (interface_params -> interface_params PUNTOCOMA ID DOSPUNTOS expresion .)
    MAS             shift and go to state 46
    MENOS           shift and go to state 47
    POR             shift and go to state 48
    DIVIDIDO        shift and go to state 49
    MAYQUE          shift and go to state 50
    MENQUE          shift and go to state 51
    IGUALQUE        shift and go to state 52
    NIGUALQUE       shift and go to state 53
    MENORIGUAL      shift and go to state 54


state 105

    (26) if_else_instr -> IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER ELSE LLAVIZQ . instrucciones LLAVDER PUNTOCOMA
    (2) instrucciones -> . instrucciones instruccion
    (3) instrucciones -> . instruccion
    (4) instruccion -> . imprimir_instr
    (5) instruccion -> . declaracion_instr
    (6) instruccion -> . asignacion_instr
    (7) instruccion -> . if_instr
    (8) instruccion -> . if_else_instr
    (9) instruccion -> . funcion_instr
    (10) instruccion -> . call_funcion_instr
    (11) instruccion -> . interface_instr
    (12) instruccion -> . return_instr
    (13) instruccion -> . break_instr
    (20) imprimir_instr -> . CONSOLE PUNTO LOG PARIZQ expresion PARDER PUNTOCOMA
    (21) declaracion_instr -> . LET ID IGUAL expresion PUNTOCOMA
    (22) asignacion_instr -> . ID IGUAL expresion PUNTOCOMA
    (23) if_instr -> . IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER PUNTOCOMA
    (26) if_else_instr -> . IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER ELSE LLAVIZQ instrucciones LLAVDER PUNTOCOMA
    (24) funcion_instr -> . FUNCTION ID PARIZQ ID COMA ID PARDER LLAVIZQ instrucciones LLAVDER PUNTOCOMA
    (25) call_funcion_instr -> . ID PARIZQ expresion COMA expresion PARDER PUNTOCOMA
    (17) interface_instr -> . INTERFACE ID LLAVIZQ interface_params PUNTOCOMA LLAVDER
    (15) return_instr -> . RETURN expresion PUNTOCOMA
    (16) return_instr -> . RETURN PUNTOCOMA
    (14) break_instr -> . BREAK PUNTOCOMA

    CONSOLE         shift and go to state 14
    LET             shift and go to state 15
    ID              shift and go to state 16
    IF              shift and go to state 17
    FUNCTION        shift and go to state 18
    INTERFACE       shift and go to state 19
    RETURN          shift and go to state 20
    BREAK           shift and go to state 21

    instrucciones                  shift and go to state 107
    instruccion                    shift and go to state 3
    imprimir_instr                 shift and go to state 4
    declaracion_instr              shift and go to state 5
    asignacion_instr               shift and go to state 6
    if_instr                       shift and go to state 7
    if_else_instr                  shift and go to state 8
    funcion_instr                  shift and go to state 9
    call_funcion_instr             shift and go to state 10
    interface_instr                shift and go to state 11
    return_instr                   shift and go to state 12
    break_instr                    shift and go to state 13

state 106

    (24) funcion_instr -> FUNCTION ID PARIZQ ID COMA ID PARDER LLAVIZQ instrucciones . LLAVDER PUNTOCOMA
    (2) instrucciones -> instrucciones . instruccion
    (4) instruccion -> . imprimir_instr
    (5) instruccion -> . declaracion_instr
    (6) instruccion -> . asignacion_instr
    (7) instruccion -> . if_instr
    (8) instruccion -> . if_else_instr
    (9) instruccion -> . funcion_instr
    (10) instruccion -> . call_funcion_instr
    (11) instruccion -> . interface_instr
    (12) instruccion -> . return_instr
    (13) instruccion -> . break_instr
    (20) imprimir_instr -> . CONSOLE PUNTO LOG PARIZQ expresion PARDER PUNTOCOMA
    (21) declaracion_instr -> . LET ID IGUAL expresion PUNTOCOMA
    (22) asignacion_instr -> . ID IGUAL expresion PUNTOCOMA
    (23) if_instr -> . IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER PUNTOCOMA
    (26) if_else_instr -> . IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER ELSE LLAVIZQ instrucciones LLAVDER PUNTOCOMA
    (24) funcion_instr -> . FUNCTION ID PARIZQ ID COMA ID PARDER LLAVIZQ instrucciones LLAVDER PUNTOCOMA
    (25) call_funcion_instr -> . ID PARIZQ expresion COMA expresion PARDER PUNTOCOMA
    (17) interface_instr -> . INTERFACE ID LLAVIZQ interface_params PUNTOCOMA LLAVDER
    (15) return_instr -> . RETURN expresion PUNTOCOMA
    (16) return_instr -> . RETURN PUNTOCOMA
    (14) break_instr -> . BREAK PUNTOCOMA

    LLAVDER         shift and go to state 108
    CONSOLE         shift and go to state 14
    LET             shift and go to state 15
    ID              shift and go to state 16
    IF              shift and go to state 17
    FUNCTION        shift and go to state 18
    INTERFACE       shift and go to state 19
    RETURN          shift and go to state 20
    BREAK           shift and go to state 21

    instruccion                    shift and go to state 22
    imprimir_instr                 shift and go to state 4
    declaracion_instr              shift and go to state 5
    asignacion_instr               shift and go to state 6
    if_instr                       shift and go to state 7
    if_else_instr                  shift and go to state 8
    funcion_instr                  shift and go to state 9
    call_funcion_instr             shift and go to state 10
    interface_instr                shift and go to state 11
    return_instr                   shift and go to state 12
    break_instr                    shift and go to state 13

state 107

    (26) if_else_instr -> IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER ELSE LLAVIZQ instrucciones . LLAVDER PUNTOCOMA
    (2) instrucciones -> instrucciones . instruccion
    (4) instruccion -> . imprimir_instr
    (5) instruccion -> . declaracion_instr
    (6) instruccion -> . asignacion_instr
    (7) instruccion -> . if_instr
    (8) instruccion -> . if_else_instr
    (9) instruccion -> . funcion_instr
    (10) instruccion -> . call_funcion_instr
    (11) instruccion -> . interface_instr
    (12) instruccion -> . return_instr
    (13) instruccion -> . break_instr
    (20) imprimir_instr -> . CONSOLE PUNTO LOG PARIZQ expresion PARDER PUNTOCOMA
    (21) declaracion_instr -> . LET ID IGUAL expresion PUNTOCOMA
    (22) asignacion_instr -> . ID IGUAL expresion PUNTOCOMA
    (23) if_instr -> . IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER PUNTOCOMA
    (26) if_else_instr -> . IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER ELSE LLAVIZQ instrucciones LLAVDER PUNTOCOMA
    (24) funcion_instr -> . FUNCTION ID PARIZQ ID COMA ID PARDER LLAVIZQ instrucciones LLAVDER PUNTOCOMA
    (25) call_funcion_instr -> . ID PARIZQ expresion COMA expresion PARDER PUNTOCOMA
    (17) interface_instr -> . INTERFACE ID LLAVIZQ interface_params PUNTOCOMA LLAVDER
    (15) return_instr -> . RETURN expresion PUNTOCOMA
    (16) return_instr -> . RETURN PUNTOCOMA
    (14) break_instr -> . BREAK PUNTOCOMA

    LLAVDER         shift and go to state 109
    CONSOLE         shift and go to state 14
    LET             shift and go to state 15
    ID              shift and go to state 16
    IF              shift and go to state 17
    FUNCTION        shift and go to state 18
    INTERFACE       shift and go to state 19
    RETURN          shift and go to state 20
    BREAK           shift and go to state 21

    instruccion                    shift and go to state 22
    imprimir_instr                 shift and go to state 4
    declaracion_instr              shift and go to state 5
    asignacion_instr               shift and go to state 6
    if_instr                       shift and go to state 7
    if_else_instr                  shift and go to state 8
    funcion_instr                  shift and go to state 9
    call_funcion_instr             shift and go to state 10
    interface_instr                shift and go to state 11
    return_instr                   shift and go to state 12
    break_instr                    shift and go to state 13

state 108

    (24) funcion_instr -> FUNCTION ID PARIZQ ID COMA ID PARDER LLAVIZQ instrucciones LLAVDER . PUNTOCOMA

    PUNTOCOMA       shift and go to state 110


state 109

    (26) if_else_instr -> IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER ELSE LLAVIZQ instrucciones LLAVDER . PUNTOCOMA

    PUNTOCOMA       shift and go to state 111


state 110

    (24) funcion_instr -> FUNCTION ID PARIZQ ID COMA ID PARDER LLAVIZQ instrucciones LLAVDER PUNTOCOMA .

    CONSOLE         reduce using rule 24 (funcion_instr -> FUNCTION ID PARIZQ ID COMA ID PARDER LLAVIZQ instrucciones LLAVDER PUNTOCOMA .)
    LET             reduce using rule 24 (funcion_instr -> FUNCTION ID PARIZQ ID COMA ID PARDER LLAVIZQ instrucciones LLAVDER PUNTOCOMA .)
    ID              reduce using rule 24 (funcion_instr -> FUNCTION ID PARIZQ ID COMA ID PARDER LLAVIZQ instrucciones LLAVDER PUNTOCOMA .)
    IF              reduce using rule 24 (funcion_instr -> FUNCTION ID PARIZQ ID COMA ID PARDER LLAVIZQ instrucciones LLAVDER PUNTOCOMA .)
    FUNCTION        reduce using rule 24 (funcion_instr -> FUNCTION ID PARIZQ ID COMA ID PARDER LLAVIZQ instrucciones LLAVDER PUNTOCOMA .)
    INTERFACE       reduce using rule 24 (funcion_instr -> FUNCTION ID PARIZQ ID COMA ID PARDER LLAVIZQ instrucciones LLAVDER PUNTOCOMA .)
    RETURN          reduce using rule 24 (funcion_instr -> FUNCTION ID PARIZQ ID COMA ID PARDER LLAVIZQ instrucciones LLAVDER PUNTOCOMA .)
    BREAK           reduce using rule 24 (funcion_instr -> FUNCTION ID PARIZQ ID COMA ID PARDER LLAVIZQ instrucciones LLAVDER PUNTOCOMA .)
    $end            reduce using rule 24 (funcion_instr -> FUNCTION ID PARIZQ ID COMA ID PARDER LLAVIZQ instrucciones LLAVDER PUNTOCOMA .)
    LLAVDER         reduce using rule 24 (funcion_instr -> FUNCTION ID PARIZQ ID COMA ID PARDER LLAVIZQ instrucciones LLAVDER PUNTOCOMA .)


state 111

    (26) if_else_instr -> IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER ELSE LLAVIZQ instrucciones LLAVDER PUNTOCOMA .

    CONSOLE         reduce using rule 26 (if_else_instr -> IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER ELSE LLAVIZQ instrucciones LLAVDER PUNTOCOMA .)
    LET             reduce using rule 26 (if_else_instr -> IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER ELSE LLAVIZQ instrucciones LLAVDER PUNTOCOMA .)
    ID              reduce using rule 26 (if_else_instr -> IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER ELSE LLAVIZQ instrucciones LLAVDER PUNTOCOMA .)
    IF              reduce using rule 26 (if_else_instr -> IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER ELSE LLAVIZQ instrucciones LLAVDER PUNTOCOMA .)
    FUNCTION        reduce using rule 26 (if_else_instr -> IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER ELSE LLAVIZQ instrucciones LLAVDER PUNTOCOMA .)
    INTERFACE       reduce using rule 26 (if_else_instr -> IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER ELSE LLAVIZQ instrucciones LLAVDER PUNTOCOMA .)
    RETURN          reduce using rule 26 (if_else_instr -> IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER ELSE LLAVIZQ instrucciones LLAVDER PUNTOCOMA .)
    BREAK           reduce using rule 26 (if_else_instr -> IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER ELSE LLAVIZQ instrucciones LLAVDER PUNTOCOMA .)
    $end            reduce using rule 26 (if_else_instr -> IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER ELSE LLAVIZQ instrucciones LLAVDER PUNTOCOMA .)
    LLAVDER         reduce using rule 26 (if_else_instr -> IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER ELSE LLAVIZQ instrucciones LLAVDER PUNTOCOMA .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for MAS in state 71 resolved as shift
WARNING: shift/reduce conflict for MENOS in state 71 resolved as shift
WARNING: shift/reduce conflict for POR in state 71 resolved as shift
WARNING: shift/reduce conflict for DIVIDIDO in state 71 resolved as shift
WARNING: shift/reduce conflict for MAYQUE in state 71 resolved as shift
WARNING: shift/reduce conflict for MENQUE in state 71 resolved as shift
WARNING: shift/reduce conflict for IGUALQUE in state 71 resolved as shift
WARNING: shift/reduce conflict for NIGUALQUE in state 71 resolved as shift
WARNING: shift/reduce conflict for MENORIGUAL in state 71 resolved as shift
WARNING: shift/reduce conflict for MAS in state 72 resolved as shift
WARNING: shift/reduce conflict for MENOS in state 72 resolved as shift
WARNING: shift/reduce conflict for POR in state 72 resolved as shift
WARNING: shift/reduce conflict for DIVIDIDO in state 72 resolved as shift
WARNING: shift/reduce conflict for MAYQUE in state 72 resolved as shift
WARNING: shift/reduce conflict for MENQUE in state 72 resolved as shift
WARNING: shift/reduce conflict for IGUALQUE in state 72 resolved as shift
WARNING: shift/reduce conflict for NIGUALQUE in state 72 resolved as shift
WARNING: shift/reduce conflict for MENORIGUAL in state 72 resolved as shift
WARNING: shift/reduce conflict for MAS in state 73 resolved as shift
WARNING: shift/reduce conflict for MENOS in state 73 resolved as shift
WARNING: shift/reduce conflict for POR in state 73 resolved as shift
WARNING: shift/reduce conflict for DIVIDIDO in state 73 resolved as shift
WARNING: shift/reduce conflict for MAYQUE in state 73 resolved as shift
WARNING: shift/reduce conflict for MENQUE in state 73 resolved as shift
WARNING: shift/reduce conflict for IGUALQUE in state 73 resolved as shift
WARNING: shift/reduce conflict for NIGUALQUE in state 73 resolved as shift
WARNING: shift/reduce conflict for MENORIGUAL in state 73 resolved as shift
WARNING: shift/reduce conflict for MAS in state 74 resolved as shift
WARNING: shift/reduce conflict for MENOS in state 74 resolved as shift
WARNING: shift/reduce conflict for POR in state 74 resolved as shift
WARNING: shift/reduce conflict for DIVIDIDO in state 74 resolved as shift
WARNING: shift/reduce conflict for MAYQUE in state 74 resolved as shift
WARNING: shift/reduce conflict for MENQUE in state 74 resolved as shift
WARNING: shift/reduce conflict for IGUALQUE in state 74 resolved as shift
WARNING: shift/reduce conflict for NIGUALQUE in state 74 resolved as shift
WARNING: shift/reduce conflict for MENORIGUAL in state 74 resolved as shift
WARNING: shift/reduce conflict for MAS in state 75 resolved as shift
WARNING: shift/reduce conflict for MENOS in state 75 resolved as shift
WARNING: shift/reduce conflict for POR in state 75 resolved as shift
WARNING: shift/reduce conflict for DIVIDIDO in state 75 resolved as shift
WARNING: shift/reduce conflict for MAYQUE in state 75 resolved as shift
WARNING: shift/reduce conflict for MENQUE in state 75 resolved as shift
WARNING: shift/reduce conflict for IGUALQUE in state 75 resolved as shift
WARNING: shift/reduce conflict for NIGUALQUE in state 75 resolved as shift
WARNING: shift/reduce conflict for MENORIGUAL in state 75 resolved as shift
