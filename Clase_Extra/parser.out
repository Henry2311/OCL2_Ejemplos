Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    COMMENTBLOCK
    DOSPUNTOS
    TIPONUMBER

Grammar

Rule 0     S' -> init
Rule 1     init -> instrucciones
Rule 2     instrucciones -> instrucciones instruccion
Rule 3     instrucciones -> instruccion
Rule 4     instruccion -> imprimir_instr
Rule 5     instruccion -> declaracion_instr
Rule 6     instruccion -> asignacion_instr
Rule 7     instruccion -> if_instr
Rule 8     instruccion -> if_else_instr
Rule 9     instruccion -> funcion_instr
Rule 10    instruccion -> call_funcion_instr
Rule 11    imprimir_instr -> CONSOLE PUNTO LOG PARIZQ expresion PARDER PUNTOCOMA
Rule 12    declaracion_instr -> LET ID IGUAL expresion PUNTOCOMA
Rule 13    asignacion_instr -> ID IGUAL expresion PUNTOCOMA
Rule 14    if_instr -> IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER PUNTOCOMA
Rule 15    funcion_instr -> FUNCTION ID PARIZQ ID COMA ID PARDER LLAVIZQ instrucciones LLAVDER PUNTOCOMA
Rule 16    call_funcion_instr -> ID PARIZQ expresion COMA expresion PARDER PUNTOCOMA
Rule 17    if_else_instr -> IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER ELSE LLAVIZQ instrucciones LLAVDER PUNTOCOMA
Rule 18    expresion -> expresion MAS expresion
Rule 19    expresion -> expresion MENOS expresion
Rule 20    expresion -> expresion POR expresion
Rule 21    expresion -> expresion DIVIDIDO expresion
Rule 22    expresion -> expresion MAYQUE expresion
Rule 23    expresion -> expresion MENQUE expresion
Rule 24    expresion -> expresion IGUALQUE expresion
Rule 25    expresion -> expresion NIGUALQUE expresion
Rule 26    expresion -> MENOS expresion
Rule 27    expresion -> PARIZQ expresion PARDER
Rule 28    expresion -> ENTERO
Rule 29    expresion -> CADENA
Rule 30    expresion -> ID

Terminals, with rules where they appear

CADENA               : 29
COMA                 : 15 16
COMMENTBLOCK         : 
CONSOLE              : 11
DIVIDIDO             : 21
DOSPUNTOS            : 
ELSE                 : 17
ENTERO               : 28
FUNCTION             : 15
ID                   : 12 13 15 15 15 16 30
IF                   : 14 17
IGUAL                : 12 13
IGUALQUE             : 24
LET                  : 12
LLAVDER              : 14 15 17 17
LLAVIZQ              : 14 15 17 17
LOG                  : 11
MAS                  : 18
MAYQUE               : 22
MENOS                : 19 26
MENQUE               : 23
NIGUALQUE            : 25
PARDER               : 11 14 15 16 17 27
PARIZQ               : 11 14 15 16 17 27
POR                  : 20
PUNTO                : 11
PUNTOCOMA            : 11 12 13 14 15 16 17
TIPONUMBER           : 
error                : 

Nonterminals, with rules where they appear

asignacion_instr     : 6
call_funcion_instr   : 10
declaracion_instr    : 5
expresion            : 11 12 13 14 16 16 17 18 18 19 19 20 20 21 21 22 22 23 23 24 24 25 25 26 27
funcion_instr        : 9
if_else_instr        : 8
if_instr             : 7
imprimir_instr       : 4
init                 : 0
instruccion          : 2 3
instrucciones        : 1 2 14 15 17 17

Parsing method: LALR

state 0

    (0) S' -> . init
    (1) init -> . instrucciones
    (2) instrucciones -> . instrucciones instruccion
    (3) instrucciones -> . instruccion
    (4) instruccion -> . imprimir_instr
    (5) instruccion -> . declaracion_instr
    (6) instruccion -> . asignacion_instr
    (7) instruccion -> . if_instr
    (8) instruccion -> . if_else_instr
    (9) instruccion -> . funcion_instr
    (10) instruccion -> . call_funcion_instr
    (11) imprimir_instr -> . CONSOLE PUNTO LOG PARIZQ expresion PARDER PUNTOCOMA
    (12) declaracion_instr -> . LET ID IGUAL expresion PUNTOCOMA
    (13) asignacion_instr -> . ID IGUAL expresion PUNTOCOMA
    (14) if_instr -> . IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER PUNTOCOMA
    (17) if_else_instr -> . IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER ELSE LLAVIZQ instrucciones LLAVDER PUNTOCOMA
    (15) funcion_instr -> . FUNCTION ID PARIZQ ID COMA ID PARDER LLAVIZQ instrucciones LLAVDER PUNTOCOMA
    (16) call_funcion_instr -> . ID PARIZQ expresion COMA expresion PARDER PUNTOCOMA

    CONSOLE         shift and go to state 11
    LET             shift and go to state 12
    ID              shift and go to state 13
    IF              shift and go to state 14
    FUNCTION        shift and go to state 15

    init                           shift and go to state 1
    instrucciones                  shift and go to state 2
    instruccion                    shift and go to state 3
    imprimir_instr                 shift and go to state 4
    declaracion_instr              shift and go to state 5
    asignacion_instr               shift and go to state 6
    if_instr                       shift and go to state 7
    if_else_instr                  shift and go to state 8
    funcion_instr                  shift and go to state 9
    call_funcion_instr             shift and go to state 10

state 1

    (0) S' -> init .



state 2

    (1) init -> instrucciones .
    (2) instrucciones -> instrucciones . instruccion
    (4) instruccion -> . imprimir_instr
    (5) instruccion -> . declaracion_instr
    (6) instruccion -> . asignacion_instr
    (7) instruccion -> . if_instr
    (8) instruccion -> . if_else_instr
    (9) instruccion -> . funcion_instr
    (10) instruccion -> . call_funcion_instr
    (11) imprimir_instr -> . CONSOLE PUNTO LOG PARIZQ expresion PARDER PUNTOCOMA
    (12) declaracion_instr -> . LET ID IGUAL expresion PUNTOCOMA
    (13) asignacion_instr -> . ID IGUAL expresion PUNTOCOMA
    (14) if_instr -> . IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER PUNTOCOMA
    (17) if_else_instr -> . IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER ELSE LLAVIZQ instrucciones LLAVDER PUNTOCOMA
    (15) funcion_instr -> . FUNCTION ID PARIZQ ID COMA ID PARDER LLAVIZQ instrucciones LLAVDER PUNTOCOMA
    (16) call_funcion_instr -> . ID PARIZQ expresion COMA expresion PARDER PUNTOCOMA

    $end            reduce using rule 1 (init -> instrucciones .)
    CONSOLE         shift and go to state 11
    LET             shift and go to state 12
    ID              shift and go to state 13
    IF              shift and go to state 14
    FUNCTION        shift and go to state 15

    instruccion                    shift and go to state 16
    imprimir_instr                 shift and go to state 4
    declaracion_instr              shift and go to state 5
    asignacion_instr               shift and go to state 6
    if_instr                       shift and go to state 7
    if_else_instr                  shift and go to state 8
    funcion_instr                  shift and go to state 9
    call_funcion_instr             shift and go to state 10

state 3

    (3) instrucciones -> instruccion .

    CONSOLE         reduce using rule 3 (instrucciones -> instruccion .)
    LET             reduce using rule 3 (instrucciones -> instruccion .)
    ID              reduce using rule 3 (instrucciones -> instruccion .)
    IF              reduce using rule 3 (instrucciones -> instruccion .)
    FUNCTION        reduce using rule 3 (instrucciones -> instruccion .)
    $end            reduce using rule 3 (instrucciones -> instruccion .)
    LLAVDER         reduce using rule 3 (instrucciones -> instruccion .)


state 4

    (4) instruccion -> imprimir_instr .

    CONSOLE         reduce using rule 4 (instruccion -> imprimir_instr .)
    LET             reduce using rule 4 (instruccion -> imprimir_instr .)
    ID              reduce using rule 4 (instruccion -> imprimir_instr .)
    IF              reduce using rule 4 (instruccion -> imprimir_instr .)
    FUNCTION        reduce using rule 4 (instruccion -> imprimir_instr .)
    $end            reduce using rule 4 (instruccion -> imprimir_instr .)
    LLAVDER         reduce using rule 4 (instruccion -> imprimir_instr .)


state 5

    (5) instruccion -> declaracion_instr .

    CONSOLE         reduce using rule 5 (instruccion -> declaracion_instr .)
    LET             reduce using rule 5 (instruccion -> declaracion_instr .)
    ID              reduce using rule 5 (instruccion -> declaracion_instr .)
    IF              reduce using rule 5 (instruccion -> declaracion_instr .)
    FUNCTION        reduce using rule 5 (instruccion -> declaracion_instr .)
    $end            reduce using rule 5 (instruccion -> declaracion_instr .)
    LLAVDER         reduce using rule 5 (instruccion -> declaracion_instr .)


state 6

    (6) instruccion -> asignacion_instr .

    CONSOLE         reduce using rule 6 (instruccion -> asignacion_instr .)
    LET             reduce using rule 6 (instruccion -> asignacion_instr .)
    ID              reduce using rule 6 (instruccion -> asignacion_instr .)
    IF              reduce using rule 6 (instruccion -> asignacion_instr .)
    FUNCTION        reduce using rule 6 (instruccion -> asignacion_instr .)
    $end            reduce using rule 6 (instruccion -> asignacion_instr .)
    LLAVDER         reduce using rule 6 (instruccion -> asignacion_instr .)


state 7

    (7) instruccion -> if_instr .

    CONSOLE         reduce using rule 7 (instruccion -> if_instr .)
    LET             reduce using rule 7 (instruccion -> if_instr .)
    ID              reduce using rule 7 (instruccion -> if_instr .)
    IF              reduce using rule 7 (instruccion -> if_instr .)
    FUNCTION        reduce using rule 7 (instruccion -> if_instr .)
    $end            reduce using rule 7 (instruccion -> if_instr .)
    LLAVDER         reduce using rule 7 (instruccion -> if_instr .)


state 8

    (8) instruccion -> if_else_instr .

    CONSOLE         reduce using rule 8 (instruccion -> if_else_instr .)
    LET             reduce using rule 8 (instruccion -> if_else_instr .)
    ID              reduce using rule 8 (instruccion -> if_else_instr .)
    IF              reduce using rule 8 (instruccion -> if_else_instr .)
    FUNCTION        reduce using rule 8 (instruccion -> if_else_instr .)
    $end            reduce using rule 8 (instruccion -> if_else_instr .)
    LLAVDER         reduce using rule 8 (instruccion -> if_else_instr .)


state 9

    (9) instruccion -> funcion_instr .

    CONSOLE         reduce using rule 9 (instruccion -> funcion_instr .)
    LET             reduce using rule 9 (instruccion -> funcion_instr .)
    ID              reduce using rule 9 (instruccion -> funcion_instr .)
    IF              reduce using rule 9 (instruccion -> funcion_instr .)
    FUNCTION        reduce using rule 9 (instruccion -> funcion_instr .)
    $end            reduce using rule 9 (instruccion -> funcion_instr .)
    LLAVDER         reduce using rule 9 (instruccion -> funcion_instr .)


state 10

    (10) instruccion -> call_funcion_instr .

    CONSOLE         reduce using rule 10 (instruccion -> call_funcion_instr .)
    LET             reduce using rule 10 (instruccion -> call_funcion_instr .)
    ID              reduce using rule 10 (instruccion -> call_funcion_instr .)
    IF              reduce using rule 10 (instruccion -> call_funcion_instr .)
    FUNCTION        reduce using rule 10 (instruccion -> call_funcion_instr .)
    $end            reduce using rule 10 (instruccion -> call_funcion_instr .)
    LLAVDER         reduce using rule 10 (instruccion -> call_funcion_instr .)


state 11

    (11) imprimir_instr -> CONSOLE . PUNTO LOG PARIZQ expresion PARDER PUNTOCOMA

    PUNTO           shift and go to state 17


state 12

    (12) declaracion_instr -> LET . ID IGUAL expresion PUNTOCOMA

    ID              shift and go to state 18


state 13

    (13) asignacion_instr -> ID . IGUAL expresion PUNTOCOMA
    (16) call_funcion_instr -> ID . PARIZQ expresion COMA expresion PARDER PUNTOCOMA

    IGUAL           shift and go to state 19
    PARIZQ          shift and go to state 20


state 14

    (14) if_instr -> IF . PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER PUNTOCOMA
    (17) if_else_instr -> IF . PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER ELSE LLAVIZQ instrucciones LLAVDER PUNTOCOMA

    PARIZQ          shift and go to state 21


state 15

    (15) funcion_instr -> FUNCTION . ID PARIZQ ID COMA ID PARDER LLAVIZQ instrucciones LLAVDER PUNTOCOMA

    ID              shift and go to state 22


state 16

    (2) instrucciones -> instrucciones instruccion .

    CONSOLE         reduce using rule 2 (instrucciones -> instrucciones instruccion .)
    LET             reduce using rule 2 (instrucciones -> instrucciones instruccion .)
    ID              reduce using rule 2 (instrucciones -> instrucciones instruccion .)
    IF              reduce using rule 2 (instrucciones -> instrucciones instruccion .)
    FUNCTION        reduce using rule 2 (instrucciones -> instrucciones instruccion .)
    $end            reduce using rule 2 (instrucciones -> instrucciones instruccion .)
    LLAVDER         reduce using rule 2 (instrucciones -> instrucciones instruccion .)


state 17

    (11) imprimir_instr -> CONSOLE PUNTO . LOG PARIZQ expresion PARDER PUNTOCOMA

    LOG             shift and go to state 23


state 18

    (12) declaracion_instr -> LET ID . IGUAL expresion PUNTOCOMA

    IGUAL           shift and go to state 24


state 19

    (13) asignacion_instr -> ID IGUAL . expresion PUNTOCOMA
    (18) expresion -> . expresion MAS expresion
    (19) expresion -> . expresion MENOS expresion
    (20) expresion -> . expresion POR expresion
    (21) expresion -> . expresion DIVIDIDO expresion
    (22) expresion -> . expresion MAYQUE expresion
    (23) expresion -> . expresion MENQUE expresion
    (24) expresion -> . expresion IGUALQUE expresion
    (25) expresion -> . expresion NIGUALQUE expresion
    (26) expresion -> . MENOS expresion
    (27) expresion -> . PARIZQ expresion PARDER
    (28) expresion -> . ENTERO
    (29) expresion -> . CADENA
    (30) expresion -> . ID

    MENOS           shift and go to state 27
    PARIZQ          shift and go to state 28
    ENTERO          shift and go to state 29
    CADENA          shift and go to state 30
    ID              shift and go to state 25

    expresion                      shift and go to state 26

state 20

    (16) call_funcion_instr -> ID PARIZQ . expresion COMA expresion PARDER PUNTOCOMA
    (18) expresion -> . expresion MAS expresion
    (19) expresion -> . expresion MENOS expresion
    (20) expresion -> . expresion POR expresion
    (21) expresion -> . expresion DIVIDIDO expresion
    (22) expresion -> . expresion MAYQUE expresion
    (23) expresion -> . expresion MENQUE expresion
    (24) expresion -> . expresion IGUALQUE expresion
    (25) expresion -> . expresion NIGUALQUE expresion
    (26) expresion -> . MENOS expresion
    (27) expresion -> . PARIZQ expresion PARDER
    (28) expresion -> . ENTERO
    (29) expresion -> . CADENA
    (30) expresion -> . ID

    MENOS           shift and go to state 27
    PARIZQ          shift and go to state 28
    ENTERO          shift and go to state 29
    CADENA          shift and go to state 30
    ID              shift and go to state 25

    expresion                      shift and go to state 31

state 21

    (14) if_instr -> IF PARIZQ . expresion PARDER LLAVIZQ instrucciones LLAVDER PUNTOCOMA
    (17) if_else_instr -> IF PARIZQ . expresion PARDER LLAVIZQ instrucciones LLAVDER ELSE LLAVIZQ instrucciones LLAVDER PUNTOCOMA
    (18) expresion -> . expresion MAS expresion
    (19) expresion -> . expresion MENOS expresion
    (20) expresion -> . expresion POR expresion
    (21) expresion -> . expresion DIVIDIDO expresion
    (22) expresion -> . expresion MAYQUE expresion
    (23) expresion -> . expresion MENQUE expresion
    (24) expresion -> . expresion IGUALQUE expresion
    (25) expresion -> . expresion NIGUALQUE expresion
    (26) expresion -> . MENOS expresion
    (27) expresion -> . PARIZQ expresion PARDER
    (28) expresion -> . ENTERO
    (29) expresion -> . CADENA
    (30) expresion -> . ID

    MENOS           shift and go to state 27
    PARIZQ          shift and go to state 28
    ENTERO          shift and go to state 29
    CADENA          shift and go to state 30
    ID              shift and go to state 25

    expresion                      shift and go to state 32

state 22

    (15) funcion_instr -> FUNCTION ID . PARIZQ ID COMA ID PARDER LLAVIZQ instrucciones LLAVDER PUNTOCOMA

    PARIZQ          shift and go to state 33


state 23

    (11) imprimir_instr -> CONSOLE PUNTO LOG . PARIZQ expresion PARDER PUNTOCOMA

    PARIZQ          shift and go to state 34


state 24

    (12) declaracion_instr -> LET ID IGUAL . expresion PUNTOCOMA
    (18) expresion -> . expresion MAS expresion
    (19) expresion -> . expresion MENOS expresion
    (20) expresion -> . expresion POR expresion
    (21) expresion -> . expresion DIVIDIDO expresion
    (22) expresion -> . expresion MAYQUE expresion
    (23) expresion -> . expresion MENQUE expresion
    (24) expresion -> . expresion IGUALQUE expresion
    (25) expresion -> . expresion NIGUALQUE expresion
    (26) expresion -> . MENOS expresion
    (27) expresion -> . PARIZQ expresion PARDER
    (28) expresion -> . ENTERO
    (29) expresion -> . CADENA
    (30) expresion -> . ID

    MENOS           shift and go to state 27
    PARIZQ          shift and go to state 28
    ENTERO          shift and go to state 29
    CADENA          shift and go to state 30
    ID              shift and go to state 25

    expresion                      shift and go to state 35

state 25

    (30) expresion -> ID .

    PUNTOCOMA       reduce using rule 30 (expresion -> ID .)
    MAS             reduce using rule 30 (expresion -> ID .)
    MENOS           reduce using rule 30 (expresion -> ID .)
    POR             reduce using rule 30 (expresion -> ID .)
    DIVIDIDO        reduce using rule 30 (expresion -> ID .)
    MAYQUE          reduce using rule 30 (expresion -> ID .)
    MENQUE          reduce using rule 30 (expresion -> ID .)
    IGUALQUE        reduce using rule 30 (expresion -> ID .)
    NIGUALQUE       reduce using rule 30 (expresion -> ID .)
    COMA            reduce using rule 30 (expresion -> ID .)
    PARDER          reduce using rule 30 (expresion -> ID .)


state 26

    (13) asignacion_instr -> ID IGUAL expresion . PUNTOCOMA
    (18) expresion -> expresion . MAS expresion
    (19) expresion -> expresion . MENOS expresion
    (20) expresion -> expresion . POR expresion
    (21) expresion -> expresion . DIVIDIDO expresion
    (22) expresion -> expresion . MAYQUE expresion
    (23) expresion -> expresion . MENQUE expresion
    (24) expresion -> expresion . IGUALQUE expresion
    (25) expresion -> expresion . NIGUALQUE expresion

    PUNTOCOMA       shift and go to state 36
    MAS             shift and go to state 37
    MENOS           shift and go to state 38
    POR             shift and go to state 39
    DIVIDIDO        shift and go to state 40
    MAYQUE          shift and go to state 41
    MENQUE          shift and go to state 42
    IGUALQUE        shift and go to state 43
    NIGUALQUE       shift and go to state 44


state 27

    (26) expresion -> MENOS . expresion
    (18) expresion -> . expresion MAS expresion
    (19) expresion -> . expresion MENOS expresion
    (20) expresion -> . expresion POR expresion
    (21) expresion -> . expresion DIVIDIDO expresion
    (22) expresion -> . expresion MAYQUE expresion
    (23) expresion -> . expresion MENQUE expresion
    (24) expresion -> . expresion IGUALQUE expresion
    (25) expresion -> . expresion NIGUALQUE expresion
    (26) expresion -> . MENOS expresion
    (27) expresion -> . PARIZQ expresion PARDER
    (28) expresion -> . ENTERO
    (29) expresion -> . CADENA
    (30) expresion -> . ID

    MENOS           shift and go to state 27
    PARIZQ          shift and go to state 28
    ENTERO          shift and go to state 29
    CADENA          shift and go to state 30
    ID              shift and go to state 25

    expresion                      shift and go to state 45

state 28

    (27) expresion -> PARIZQ . expresion PARDER
    (18) expresion -> . expresion MAS expresion
    (19) expresion -> . expresion MENOS expresion
    (20) expresion -> . expresion POR expresion
    (21) expresion -> . expresion DIVIDIDO expresion
    (22) expresion -> . expresion MAYQUE expresion
    (23) expresion -> . expresion MENQUE expresion
    (24) expresion -> . expresion IGUALQUE expresion
    (25) expresion -> . expresion NIGUALQUE expresion
    (26) expresion -> . MENOS expresion
    (27) expresion -> . PARIZQ expresion PARDER
    (28) expresion -> . ENTERO
    (29) expresion -> . CADENA
    (30) expresion -> . ID

    MENOS           shift and go to state 27
    PARIZQ          shift and go to state 28
    ENTERO          shift and go to state 29
    CADENA          shift and go to state 30
    ID              shift and go to state 25

    expresion                      shift and go to state 46

state 29

    (28) expresion -> ENTERO .

    PUNTOCOMA       reduce using rule 28 (expresion -> ENTERO .)
    MAS             reduce using rule 28 (expresion -> ENTERO .)
    MENOS           reduce using rule 28 (expresion -> ENTERO .)
    POR             reduce using rule 28 (expresion -> ENTERO .)
    DIVIDIDO        reduce using rule 28 (expresion -> ENTERO .)
    MAYQUE          reduce using rule 28 (expresion -> ENTERO .)
    MENQUE          reduce using rule 28 (expresion -> ENTERO .)
    IGUALQUE        reduce using rule 28 (expresion -> ENTERO .)
    NIGUALQUE       reduce using rule 28 (expresion -> ENTERO .)
    COMA            reduce using rule 28 (expresion -> ENTERO .)
    PARDER          reduce using rule 28 (expresion -> ENTERO .)


state 30

    (29) expresion -> CADENA .

    PUNTOCOMA       reduce using rule 29 (expresion -> CADENA .)
    MAS             reduce using rule 29 (expresion -> CADENA .)
    MENOS           reduce using rule 29 (expresion -> CADENA .)
    POR             reduce using rule 29 (expresion -> CADENA .)
    DIVIDIDO        reduce using rule 29 (expresion -> CADENA .)
    MAYQUE          reduce using rule 29 (expresion -> CADENA .)
    MENQUE          reduce using rule 29 (expresion -> CADENA .)
    IGUALQUE        reduce using rule 29 (expresion -> CADENA .)
    NIGUALQUE       reduce using rule 29 (expresion -> CADENA .)
    COMA            reduce using rule 29 (expresion -> CADENA .)
    PARDER          reduce using rule 29 (expresion -> CADENA .)


state 31

    (16) call_funcion_instr -> ID PARIZQ expresion . COMA expresion PARDER PUNTOCOMA
    (18) expresion -> expresion . MAS expresion
    (19) expresion -> expresion . MENOS expresion
    (20) expresion -> expresion . POR expresion
    (21) expresion -> expresion . DIVIDIDO expresion
    (22) expresion -> expresion . MAYQUE expresion
    (23) expresion -> expresion . MENQUE expresion
    (24) expresion -> expresion . IGUALQUE expresion
    (25) expresion -> expresion . NIGUALQUE expresion

    COMA            shift and go to state 47
    MAS             shift and go to state 37
    MENOS           shift and go to state 38
    POR             shift and go to state 39
    DIVIDIDO        shift and go to state 40
    MAYQUE          shift and go to state 41
    MENQUE          shift and go to state 42
    IGUALQUE        shift and go to state 43
    NIGUALQUE       shift and go to state 44


state 32

    (14) if_instr -> IF PARIZQ expresion . PARDER LLAVIZQ instrucciones LLAVDER PUNTOCOMA
    (17) if_else_instr -> IF PARIZQ expresion . PARDER LLAVIZQ instrucciones LLAVDER ELSE LLAVIZQ instrucciones LLAVDER PUNTOCOMA
    (18) expresion -> expresion . MAS expresion
    (19) expresion -> expresion . MENOS expresion
    (20) expresion -> expresion . POR expresion
    (21) expresion -> expresion . DIVIDIDO expresion
    (22) expresion -> expresion . MAYQUE expresion
    (23) expresion -> expresion . MENQUE expresion
    (24) expresion -> expresion . IGUALQUE expresion
    (25) expresion -> expresion . NIGUALQUE expresion

    PARDER          shift and go to state 48
    MAS             shift and go to state 37
    MENOS           shift and go to state 38
    POR             shift and go to state 39
    DIVIDIDO        shift and go to state 40
    MAYQUE          shift and go to state 41
    MENQUE          shift and go to state 42
    IGUALQUE        shift and go to state 43
    NIGUALQUE       shift and go to state 44


state 33

    (15) funcion_instr -> FUNCTION ID PARIZQ . ID COMA ID PARDER LLAVIZQ instrucciones LLAVDER PUNTOCOMA

    ID              shift and go to state 49


state 34

    (11) imprimir_instr -> CONSOLE PUNTO LOG PARIZQ . expresion PARDER PUNTOCOMA
    (18) expresion -> . expresion MAS expresion
    (19) expresion -> . expresion MENOS expresion
    (20) expresion -> . expresion POR expresion
    (21) expresion -> . expresion DIVIDIDO expresion
    (22) expresion -> . expresion MAYQUE expresion
    (23) expresion -> . expresion MENQUE expresion
    (24) expresion -> . expresion IGUALQUE expresion
    (25) expresion -> . expresion NIGUALQUE expresion
    (26) expresion -> . MENOS expresion
    (27) expresion -> . PARIZQ expresion PARDER
    (28) expresion -> . ENTERO
    (29) expresion -> . CADENA
    (30) expresion -> . ID

    MENOS           shift and go to state 27
    PARIZQ          shift and go to state 28
    ENTERO          shift and go to state 29
    CADENA          shift and go to state 30
    ID              shift and go to state 25

    expresion                      shift and go to state 50

state 35

    (12) declaracion_instr -> LET ID IGUAL expresion . PUNTOCOMA
    (18) expresion -> expresion . MAS expresion
    (19) expresion -> expresion . MENOS expresion
    (20) expresion -> expresion . POR expresion
    (21) expresion -> expresion . DIVIDIDO expresion
    (22) expresion -> expresion . MAYQUE expresion
    (23) expresion -> expresion . MENQUE expresion
    (24) expresion -> expresion . IGUALQUE expresion
    (25) expresion -> expresion . NIGUALQUE expresion

    PUNTOCOMA       shift and go to state 51
    MAS             shift and go to state 37
    MENOS           shift and go to state 38
    POR             shift and go to state 39
    DIVIDIDO        shift and go to state 40
    MAYQUE          shift and go to state 41
    MENQUE          shift and go to state 42
    IGUALQUE        shift and go to state 43
    NIGUALQUE       shift and go to state 44


state 36

    (13) asignacion_instr -> ID IGUAL expresion PUNTOCOMA .

    CONSOLE         reduce using rule 13 (asignacion_instr -> ID IGUAL expresion PUNTOCOMA .)
    LET             reduce using rule 13 (asignacion_instr -> ID IGUAL expresion PUNTOCOMA .)
    ID              reduce using rule 13 (asignacion_instr -> ID IGUAL expresion PUNTOCOMA .)
    IF              reduce using rule 13 (asignacion_instr -> ID IGUAL expresion PUNTOCOMA .)
    FUNCTION        reduce using rule 13 (asignacion_instr -> ID IGUAL expresion PUNTOCOMA .)
    $end            reduce using rule 13 (asignacion_instr -> ID IGUAL expresion PUNTOCOMA .)
    LLAVDER         reduce using rule 13 (asignacion_instr -> ID IGUAL expresion PUNTOCOMA .)


state 37

    (18) expresion -> expresion MAS . expresion
    (18) expresion -> . expresion MAS expresion
    (19) expresion -> . expresion MENOS expresion
    (20) expresion -> . expresion POR expresion
    (21) expresion -> . expresion DIVIDIDO expresion
    (22) expresion -> . expresion MAYQUE expresion
    (23) expresion -> . expresion MENQUE expresion
    (24) expresion -> . expresion IGUALQUE expresion
    (25) expresion -> . expresion NIGUALQUE expresion
    (26) expresion -> . MENOS expresion
    (27) expresion -> . PARIZQ expresion PARDER
    (28) expresion -> . ENTERO
    (29) expresion -> . CADENA
    (30) expresion -> . ID

    MENOS           shift and go to state 27
    PARIZQ          shift and go to state 28
    ENTERO          shift and go to state 29
    CADENA          shift and go to state 30
    ID              shift and go to state 25

    expresion                      shift and go to state 52

state 38

    (19) expresion -> expresion MENOS . expresion
    (18) expresion -> . expresion MAS expresion
    (19) expresion -> . expresion MENOS expresion
    (20) expresion -> . expresion POR expresion
    (21) expresion -> . expresion DIVIDIDO expresion
    (22) expresion -> . expresion MAYQUE expresion
    (23) expresion -> . expresion MENQUE expresion
    (24) expresion -> . expresion IGUALQUE expresion
    (25) expresion -> . expresion NIGUALQUE expresion
    (26) expresion -> . MENOS expresion
    (27) expresion -> . PARIZQ expresion PARDER
    (28) expresion -> . ENTERO
    (29) expresion -> . CADENA
    (30) expresion -> . ID

    MENOS           shift and go to state 27
    PARIZQ          shift and go to state 28
    ENTERO          shift and go to state 29
    CADENA          shift and go to state 30
    ID              shift and go to state 25

    expresion                      shift and go to state 53

state 39

    (20) expresion -> expresion POR . expresion
    (18) expresion -> . expresion MAS expresion
    (19) expresion -> . expresion MENOS expresion
    (20) expresion -> . expresion POR expresion
    (21) expresion -> . expresion DIVIDIDO expresion
    (22) expresion -> . expresion MAYQUE expresion
    (23) expresion -> . expresion MENQUE expresion
    (24) expresion -> . expresion IGUALQUE expresion
    (25) expresion -> . expresion NIGUALQUE expresion
    (26) expresion -> . MENOS expresion
    (27) expresion -> . PARIZQ expresion PARDER
    (28) expresion -> . ENTERO
    (29) expresion -> . CADENA
    (30) expresion -> . ID

    MENOS           shift and go to state 27
    PARIZQ          shift and go to state 28
    ENTERO          shift and go to state 29
    CADENA          shift and go to state 30
    ID              shift and go to state 25

    expresion                      shift and go to state 54

state 40

    (21) expresion -> expresion DIVIDIDO . expresion
    (18) expresion -> . expresion MAS expresion
    (19) expresion -> . expresion MENOS expresion
    (20) expresion -> . expresion POR expresion
    (21) expresion -> . expresion DIVIDIDO expresion
    (22) expresion -> . expresion MAYQUE expresion
    (23) expresion -> . expresion MENQUE expresion
    (24) expresion -> . expresion IGUALQUE expresion
    (25) expresion -> . expresion NIGUALQUE expresion
    (26) expresion -> . MENOS expresion
    (27) expresion -> . PARIZQ expresion PARDER
    (28) expresion -> . ENTERO
    (29) expresion -> . CADENA
    (30) expresion -> . ID

    MENOS           shift and go to state 27
    PARIZQ          shift and go to state 28
    ENTERO          shift and go to state 29
    CADENA          shift and go to state 30
    ID              shift and go to state 25

    expresion                      shift and go to state 55

state 41

    (22) expresion -> expresion MAYQUE . expresion
    (18) expresion -> . expresion MAS expresion
    (19) expresion -> . expresion MENOS expresion
    (20) expresion -> . expresion POR expresion
    (21) expresion -> . expresion DIVIDIDO expresion
    (22) expresion -> . expresion MAYQUE expresion
    (23) expresion -> . expresion MENQUE expresion
    (24) expresion -> . expresion IGUALQUE expresion
    (25) expresion -> . expresion NIGUALQUE expresion
    (26) expresion -> . MENOS expresion
    (27) expresion -> . PARIZQ expresion PARDER
    (28) expresion -> . ENTERO
    (29) expresion -> . CADENA
    (30) expresion -> . ID

    MENOS           shift and go to state 27
    PARIZQ          shift and go to state 28
    ENTERO          shift and go to state 29
    CADENA          shift and go to state 30
    ID              shift and go to state 25

    expresion                      shift and go to state 56

state 42

    (23) expresion -> expresion MENQUE . expresion
    (18) expresion -> . expresion MAS expresion
    (19) expresion -> . expresion MENOS expresion
    (20) expresion -> . expresion POR expresion
    (21) expresion -> . expresion DIVIDIDO expresion
    (22) expresion -> . expresion MAYQUE expresion
    (23) expresion -> . expresion MENQUE expresion
    (24) expresion -> . expresion IGUALQUE expresion
    (25) expresion -> . expresion NIGUALQUE expresion
    (26) expresion -> . MENOS expresion
    (27) expresion -> . PARIZQ expresion PARDER
    (28) expresion -> . ENTERO
    (29) expresion -> . CADENA
    (30) expresion -> . ID

    MENOS           shift and go to state 27
    PARIZQ          shift and go to state 28
    ENTERO          shift and go to state 29
    CADENA          shift and go to state 30
    ID              shift and go to state 25

    expresion                      shift and go to state 57

state 43

    (24) expresion -> expresion IGUALQUE . expresion
    (18) expresion -> . expresion MAS expresion
    (19) expresion -> . expresion MENOS expresion
    (20) expresion -> . expresion POR expresion
    (21) expresion -> . expresion DIVIDIDO expresion
    (22) expresion -> . expresion MAYQUE expresion
    (23) expresion -> . expresion MENQUE expresion
    (24) expresion -> . expresion IGUALQUE expresion
    (25) expresion -> . expresion NIGUALQUE expresion
    (26) expresion -> . MENOS expresion
    (27) expresion -> . PARIZQ expresion PARDER
    (28) expresion -> . ENTERO
    (29) expresion -> . CADENA
    (30) expresion -> . ID

    MENOS           shift and go to state 27
    PARIZQ          shift and go to state 28
    ENTERO          shift and go to state 29
    CADENA          shift and go to state 30
    ID              shift and go to state 25

    expresion                      shift and go to state 58

state 44

    (25) expresion -> expresion NIGUALQUE . expresion
    (18) expresion -> . expresion MAS expresion
    (19) expresion -> . expresion MENOS expresion
    (20) expresion -> . expresion POR expresion
    (21) expresion -> . expresion DIVIDIDO expresion
    (22) expresion -> . expresion MAYQUE expresion
    (23) expresion -> . expresion MENQUE expresion
    (24) expresion -> . expresion IGUALQUE expresion
    (25) expresion -> . expresion NIGUALQUE expresion
    (26) expresion -> . MENOS expresion
    (27) expresion -> . PARIZQ expresion PARDER
    (28) expresion -> . ENTERO
    (29) expresion -> . CADENA
    (30) expresion -> . ID

    MENOS           shift and go to state 27
    PARIZQ          shift and go to state 28
    ENTERO          shift and go to state 29
    CADENA          shift and go to state 30
    ID              shift and go to state 25

    expresion                      shift and go to state 59

state 45

    (26) expresion -> MENOS expresion .
    (18) expresion -> expresion . MAS expresion
    (19) expresion -> expresion . MENOS expresion
    (20) expresion -> expresion . POR expresion
    (21) expresion -> expresion . DIVIDIDO expresion
    (22) expresion -> expresion . MAYQUE expresion
    (23) expresion -> expresion . MENQUE expresion
    (24) expresion -> expresion . IGUALQUE expresion
    (25) expresion -> expresion . NIGUALQUE expresion

    PUNTOCOMA       reduce using rule 26 (expresion -> MENOS expresion .)
    MAS             reduce using rule 26 (expresion -> MENOS expresion .)
    MENOS           reduce using rule 26 (expresion -> MENOS expresion .)
    POR             reduce using rule 26 (expresion -> MENOS expresion .)
    DIVIDIDO        reduce using rule 26 (expresion -> MENOS expresion .)
    MAYQUE          reduce using rule 26 (expresion -> MENOS expresion .)
    MENQUE          reduce using rule 26 (expresion -> MENOS expresion .)
    IGUALQUE        reduce using rule 26 (expresion -> MENOS expresion .)
    NIGUALQUE       reduce using rule 26 (expresion -> MENOS expresion .)
    COMA            reduce using rule 26 (expresion -> MENOS expresion .)
    PARDER          reduce using rule 26 (expresion -> MENOS expresion .)

  ! MAS             [ shift and go to state 37 ]
  ! MENOS           [ shift and go to state 38 ]
  ! POR             [ shift and go to state 39 ]
  ! DIVIDIDO        [ shift and go to state 40 ]
  ! MAYQUE          [ shift and go to state 41 ]
  ! MENQUE          [ shift and go to state 42 ]
  ! IGUALQUE        [ shift and go to state 43 ]
  ! NIGUALQUE       [ shift and go to state 44 ]


state 46

    (27) expresion -> PARIZQ expresion . PARDER
    (18) expresion -> expresion . MAS expresion
    (19) expresion -> expresion . MENOS expresion
    (20) expresion -> expresion . POR expresion
    (21) expresion -> expresion . DIVIDIDO expresion
    (22) expresion -> expresion . MAYQUE expresion
    (23) expresion -> expresion . MENQUE expresion
    (24) expresion -> expresion . IGUALQUE expresion
    (25) expresion -> expresion . NIGUALQUE expresion

    PARDER          shift and go to state 60
    MAS             shift and go to state 37
    MENOS           shift and go to state 38
    POR             shift and go to state 39
    DIVIDIDO        shift and go to state 40
    MAYQUE          shift and go to state 41
    MENQUE          shift and go to state 42
    IGUALQUE        shift and go to state 43
    NIGUALQUE       shift and go to state 44


state 47

    (16) call_funcion_instr -> ID PARIZQ expresion COMA . expresion PARDER PUNTOCOMA
    (18) expresion -> . expresion MAS expresion
    (19) expresion -> . expresion MENOS expresion
    (20) expresion -> . expresion POR expresion
    (21) expresion -> . expresion DIVIDIDO expresion
    (22) expresion -> . expresion MAYQUE expresion
    (23) expresion -> . expresion MENQUE expresion
    (24) expresion -> . expresion IGUALQUE expresion
    (25) expresion -> . expresion NIGUALQUE expresion
    (26) expresion -> . MENOS expresion
    (27) expresion -> . PARIZQ expresion PARDER
    (28) expresion -> . ENTERO
    (29) expresion -> . CADENA
    (30) expresion -> . ID

    MENOS           shift and go to state 27
    PARIZQ          shift and go to state 28
    ENTERO          shift and go to state 29
    CADENA          shift and go to state 30
    ID              shift and go to state 25

    expresion                      shift and go to state 61

state 48

    (14) if_instr -> IF PARIZQ expresion PARDER . LLAVIZQ instrucciones LLAVDER PUNTOCOMA
    (17) if_else_instr -> IF PARIZQ expresion PARDER . LLAVIZQ instrucciones LLAVDER ELSE LLAVIZQ instrucciones LLAVDER PUNTOCOMA

    LLAVIZQ         shift and go to state 62


state 49

    (15) funcion_instr -> FUNCTION ID PARIZQ ID . COMA ID PARDER LLAVIZQ instrucciones LLAVDER PUNTOCOMA

    COMA            shift and go to state 63


state 50

    (11) imprimir_instr -> CONSOLE PUNTO LOG PARIZQ expresion . PARDER PUNTOCOMA
    (18) expresion -> expresion . MAS expresion
    (19) expresion -> expresion . MENOS expresion
    (20) expresion -> expresion . POR expresion
    (21) expresion -> expresion . DIVIDIDO expresion
    (22) expresion -> expresion . MAYQUE expresion
    (23) expresion -> expresion . MENQUE expresion
    (24) expresion -> expresion . IGUALQUE expresion
    (25) expresion -> expresion . NIGUALQUE expresion

    PARDER          shift and go to state 64
    MAS             shift and go to state 37
    MENOS           shift and go to state 38
    POR             shift and go to state 39
    DIVIDIDO        shift and go to state 40
    MAYQUE          shift and go to state 41
    MENQUE          shift and go to state 42
    IGUALQUE        shift and go to state 43
    NIGUALQUE       shift and go to state 44


state 51

    (12) declaracion_instr -> LET ID IGUAL expresion PUNTOCOMA .

    CONSOLE         reduce using rule 12 (declaracion_instr -> LET ID IGUAL expresion PUNTOCOMA .)
    LET             reduce using rule 12 (declaracion_instr -> LET ID IGUAL expresion PUNTOCOMA .)
    ID              reduce using rule 12 (declaracion_instr -> LET ID IGUAL expresion PUNTOCOMA .)
    IF              reduce using rule 12 (declaracion_instr -> LET ID IGUAL expresion PUNTOCOMA .)
    FUNCTION        reduce using rule 12 (declaracion_instr -> LET ID IGUAL expresion PUNTOCOMA .)
    $end            reduce using rule 12 (declaracion_instr -> LET ID IGUAL expresion PUNTOCOMA .)
    LLAVDER         reduce using rule 12 (declaracion_instr -> LET ID IGUAL expresion PUNTOCOMA .)


state 52

    (18) expresion -> expresion MAS expresion .
    (18) expresion -> expresion . MAS expresion
    (19) expresion -> expresion . MENOS expresion
    (20) expresion -> expresion . POR expresion
    (21) expresion -> expresion . DIVIDIDO expresion
    (22) expresion -> expresion . MAYQUE expresion
    (23) expresion -> expresion . MENQUE expresion
    (24) expresion -> expresion . IGUALQUE expresion
    (25) expresion -> expresion . NIGUALQUE expresion

    PUNTOCOMA       reduce using rule 18 (expresion -> expresion MAS expresion .)
    MAS             reduce using rule 18 (expresion -> expresion MAS expresion .)
    MENOS           reduce using rule 18 (expresion -> expresion MAS expresion .)
    MAYQUE          reduce using rule 18 (expresion -> expresion MAS expresion .)
    MENQUE          reduce using rule 18 (expresion -> expresion MAS expresion .)
    IGUALQUE        reduce using rule 18 (expresion -> expresion MAS expresion .)
    NIGUALQUE       reduce using rule 18 (expresion -> expresion MAS expresion .)
    COMA            reduce using rule 18 (expresion -> expresion MAS expresion .)
    PARDER          reduce using rule 18 (expresion -> expresion MAS expresion .)
    POR             shift and go to state 39
    DIVIDIDO        shift and go to state 40

  ! POR             [ reduce using rule 18 (expresion -> expresion MAS expresion .) ]
  ! DIVIDIDO        [ reduce using rule 18 (expresion -> expresion MAS expresion .) ]
  ! MAS             [ shift and go to state 37 ]
  ! MENOS           [ shift and go to state 38 ]
  ! MAYQUE          [ shift and go to state 41 ]
  ! MENQUE          [ shift and go to state 42 ]
  ! IGUALQUE        [ shift and go to state 43 ]
  ! NIGUALQUE       [ shift and go to state 44 ]


state 53

    (19) expresion -> expresion MENOS expresion .
    (18) expresion -> expresion . MAS expresion
    (19) expresion -> expresion . MENOS expresion
    (20) expresion -> expresion . POR expresion
    (21) expresion -> expresion . DIVIDIDO expresion
    (22) expresion -> expresion . MAYQUE expresion
    (23) expresion -> expresion . MENQUE expresion
    (24) expresion -> expresion . IGUALQUE expresion
    (25) expresion -> expresion . NIGUALQUE expresion

    PUNTOCOMA       reduce using rule 19 (expresion -> expresion MENOS expresion .)
    MAS             reduce using rule 19 (expresion -> expresion MENOS expresion .)
    MENOS           reduce using rule 19 (expresion -> expresion MENOS expresion .)
    MAYQUE          reduce using rule 19 (expresion -> expresion MENOS expresion .)
    MENQUE          reduce using rule 19 (expresion -> expresion MENOS expresion .)
    IGUALQUE        reduce using rule 19 (expresion -> expresion MENOS expresion .)
    NIGUALQUE       reduce using rule 19 (expresion -> expresion MENOS expresion .)
    COMA            reduce using rule 19 (expresion -> expresion MENOS expresion .)
    PARDER          reduce using rule 19 (expresion -> expresion MENOS expresion .)
    POR             shift and go to state 39
    DIVIDIDO        shift and go to state 40

  ! POR             [ reduce using rule 19 (expresion -> expresion MENOS expresion .) ]
  ! DIVIDIDO        [ reduce using rule 19 (expresion -> expresion MENOS expresion .) ]
  ! MAS             [ shift and go to state 37 ]
  ! MENOS           [ shift and go to state 38 ]
  ! MAYQUE          [ shift and go to state 41 ]
  ! MENQUE          [ shift and go to state 42 ]
  ! IGUALQUE        [ shift and go to state 43 ]
  ! NIGUALQUE       [ shift and go to state 44 ]


state 54

    (20) expresion -> expresion POR expresion .
    (18) expresion -> expresion . MAS expresion
    (19) expresion -> expresion . MENOS expresion
    (20) expresion -> expresion . POR expresion
    (21) expresion -> expresion . DIVIDIDO expresion
    (22) expresion -> expresion . MAYQUE expresion
    (23) expresion -> expresion . MENQUE expresion
    (24) expresion -> expresion . IGUALQUE expresion
    (25) expresion -> expresion . NIGUALQUE expresion

    PUNTOCOMA       reduce using rule 20 (expresion -> expresion POR expresion .)
    MAS             reduce using rule 20 (expresion -> expresion POR expresion .)
    MENOS           reduce using rule 20 (expresion -> expresion POR expresion .)
    POR             reduce using rule 20 (expresion -> expresion POR expresion .)
    DIVIDIDO        reduce using rule 20 (expresion -> expresion POR expresion .)
    MAYQUE          reduce using rule 20 (expresion -> expresion POR expresion .)
    MENQUE          reduce using rule 20 (expresion -> expresion POR expresion .)
    IGUALQUE        reduce using rule 20 (expresion -> expresion POR expresion .)
    NIGUALQUE       reduce using rule 20 (expresion -> expresion POR expresion .)
    COMA            reduce using rule 20 (expresion -> expresion POR expresion .)
    PARDER          reduce using rule 20 (expresion -> expresion POR expresion .)

  ! MAS             [ shift and go to state 37 ]
  ! MENOS           [ shift and go to state 38 ]
  ! POR             [ shift and go to state 39 ]
  ! DIVIDIDO        [ shift and go to state 40 ]
  ! MAYQUE          [ shift and go to state 41 ]
  ! MENQUE          [ shift and go to state 42 ]
  ! IGUALQUE        [ shift and go to state 43 ]
  ! NIGUALQUE       [ shift and go to state 44 ]


state 55

    (21) expresion -> expresion DIVIDIDO expresion .
    (18) expresion -> expresion . MAS expresion
    (19) expresion -> expresion . MENOS expresion
    (20) expresion -> expresion . POR expresion
    (21) expresion -> expresion . DIVIDIDO expresion
    (22) expresion -> expresion . MAYQUE expresion
    (23) expresion -> expresion . MENQUE expresion
    (24) expresion -> expresion . IGUALQUE expresion
    (25) expresion -> expresion . NIGUALQUE expresion

    PUNTOCOMA       reduce using rule 21 (expresion -> expresion DIVIDIDO expresion .)
    MAS             reduce using rule 21 (expresion -> expresion DIVIDIDO expresion .)
    MENOS           reduce using rule 21 (expresion -> expresion DIVIDIDO expresion .)
    POR             reduce using rule 21 (expresion -> expresion DIVIDIDO expresion .)
    DIVIDIDO        reduce using rule 21 (expresion -> expresion DIVIDIDO expresion .)
    MAYQUE          reduce using rule 21 (expresion -> expresion DIVIDIDO expresion .)
    MENQUE          reduce using rule 21 (expresion -> expresion DIVIDIDO expresion .)
    IGUALQUE        reduce using rule 21 (expresion -> expresion DIVIDIDO expresion .)
    NIGUALQUE       reduce using rule 21 (expresion -> expresion DIVIDIDO expresion .)
    COMA            reduce using rule 21 (expresion -> expresion DIVIDIDO expresion .)
    PARDER          reduce using rule 21 (expresion -> expresion DIVIDIDO expresion .)

  ! MAS             [ shift and go to state 37 ]
  ! MENOS           [ shift and go to state 38 ]
  ! POR             [ shift and go to state 39 ]
  ! DIVIDIDO        [ shift and go to state 40 ]
  ! MAYQUE          [ shift and go to state 41 ]
  ! MENQUE          [ shift and go to state 42 ]
  ! IGUALQUE        [ shift and go to state 43 ]
  ! NIGUALQUE       [ shift and go to state 44 ]


state 56

    (22) expresion -> expresion MAYQUE expresion .
    (18) expresion -> expresion . MAS expresion
    (19) expresion -> expresion . MENOS expresion
    (20) expresion -> expresion . POR expresion
    (21) expresion -> expresion . DIVIDIDO expresion
    (22) expresion -> expresion . MAYQUE expresion
    (23) expresion -> expresion . MENQUE expresion
    (24) expresion -> expresion . IGUALQUE expresion
    (25) expresion -> expresion . NIGUALQUE expresion

  ! shift/reduce conflict for MAS resolved as shift
  ! shift/reduce conflict for MENOS resolved as shift
  ! shift/reduce conflict for POR resolved as shift
  ! shift/reduce conflict for DIVIDIDO resolved as shift
  ! shift/reduce conflict for MAYQUE resolved as shift
  ! shift/reduce conflict for MENQUE resolved as shift
  ! shift/reduce conflict for IGUALQUE resolved as shift
  ! shift/reduce conflict for NIGUALQUE resolved as shift
    PUNTOCOMA       reduce using rule 22 (expresion -> expresion MAYQUE expresion .)
    COMA            reduce using rule 22 (expresion -> expresion MAYQUE expresion .)
    PARDER          reduce using rule 22 (expresion -> expresion MAYQUE expresion .)
    MAS             shift and go to state 37
    MENOS           shift and go to state 38
    POR             shift and go to state 39
    DIVIDIDO        shift and go to state 40
    MAYQUE          shift and go to state 41
    MENQUE          shift and go to state 42
    IGUALQUE        shift and go to state 43
    NIGUALQUE       shift and go to state 44

  ! MAS             [ reduce using rule 22 (expresion -> expresion MAYQUE expresion .) ]
  ! MENOS           [ reduce using rule 22 (expresion -> expresion MAYQUE expresion .) ]
  ! POR             [ reduce using rule 22 (expresion -> expresion MAYQUE expresion .) ]
  ! DIVIDIDO        [ reduce using rule 22 (expresion -> expresion MAYQUE expresion .) ]
  ! MAYQUE          [ reduce using rule 22 (expresion -> expresion MAYQUE expresion .) ]
  ! MENQUE          [ reduce using rule 22 (expresion -> expresion MAYQUE expresion .) ]
  ! IGUALQUE        [ reduce using rule 22 (expresion -> expresion MAYQUE expresion .) ]
  ! NIGUALQUE       [ reduce using rule 22 (expresion -> expresion MAYQUE expresion .) ]


state 57

    (23) expresion -> expresion MENQUE expresion .
    (18) expresion -> expresion . MAS expresion
    (19) expresion -> expresion . MENOS expresion
    (20) expresion -> expresion . POR expresion
    (21) expresion -> expresion . DIVIDIDO expresion
    (22) expresion -> expresion . MAYQUE expresion
    (23) expresion -> expresion . MENQUE expresion
    (24) expresion -> expresion . IGUALQUE expresion
    (25) expresion -> expresion . NIGUALQUE expresion

  ! shift/reduce conflict for MAS resolved as shift
  ! shift/reduce conflict for MENOS resolved as shift
  ! shift/reduce conflict for POR resolved as shift
  ! shift/reduce conflict for DIVIDIDO resolved as shift
  ! shift/reduce conflict for MAYQUE resolved as shift
  ! shift/reduce conflict for MENQUE resolved as shift
  ! shift/reduce conflict for IGUALQUE resolved as shift
  ! shift/reduce conflict for NIGUALQUE resolved as shift
    PUNTOCOMA       reduce using rule 23 (expresion -> expresion MENQUE expresion .)
    COMA            reduce using rule 23 (expresion -> expresion MENQUE expresion .)
    PARDER          reduce using rule 23 (expresion -> expresion MENQUE expresion .)
    MAS             shift and go to state 37
    MENOS           shift and go to state 38
    POR             shift and go to state 39
    DIVIDIDO        shift and go to state 40
    MAYQUE          shift and go to state 41
    MENQUE          shift and go to state 42
    IGUALQUE        shift and go to state 43
    NIGUALQUE       shift and go to state 44

  ! MAS             [ reduce using rule 23 (expresion -> expresion MENQUE expresion .) ]
  ! MENOS           [ reduce using rule 23 (expresion -> expresion MENQUE expresion .) ]
  ! POR             [ reduce using rule 23 (expresion -> expresion MENQUE expresion .) ]
  ! DIVIDIDO        [ reduce using rule 23 (expresion -> expresion MENQUE expresion .) ]
  ! MAYQUE          [ reduce using rule 23 (expresion -> expresion MENQUE expresion .) ]
  ! MENQUE          [ reduce using rule 23 (expresion -> expresion MENQUE expresion .) ]
  ! IGUALQUE        [ reduce using rule 23 (expresion -> expresion MENQUE expresion .) ]
  ! NIGUALQUE       [ reduce using rule 23 (expresion -> expresion MENQUE expresion .) ]


state 58

    (24) expresion -> expresion IGUALQUE expresion .
    (18) expresion -> expresion . MAS expresion
    (19) expresion -> expresion . MENOS expresion
    (20) expresion -> expresion . POR expresion
    (21) expresion -> expresion . DIVIDIDO expresion
    (22) expresion -> expresion . MAYQUE expresion
    (23) expresion -> expresion . MENQUE expresion
    (24) expresion -> expresion . IGUALQUE expresion
    (25) expresion -> expresion . NIGUALQUE expresion

  ! shift/reduce conflict for MAS resolved as shift
  ! shift/reduce conflict for MENOS resolved as shift
  ! shift/reduce conflict for POR resolved as shift
  ! shift/reduce conflict for DIVIDIDO resolved as shift
  ! shift/reduce conflict for MAYQUE resolved as shift
  ! shift/reduce conflict for MENQUE resolved as shift
  ! shift/reduce conflict for IGUALQUE resolved as shift
  ! shift/reduce conflict for NIGUALQUE resolved as shift
    PUNTOCOMA       reduce using rule 24 (expresion -> expresion IGUALQUE expresion .)
    COMA            reduce using rule 24 (expresion -> expresion IGUALQUE expresion .)
    PARDER          reduce using rule 24 (expresion -> expresion IGUALQUE expresion .)
    MAS             shift and go to state 37
    MENOS           shift and go to state 38
    POR             shift and go to state 39
    DIVIDIDO        shift and go to state 40
    MAYQUE          shift and go to state 41
    MENQUE          shift and go to state 42
    IGUALQUE        shift and go to state 43
    NIGUALQUE       shift and go to state 44

  ! MAS             [ reduce using rule 24 (expresion -> expresion IGUALQUE expresion .) ]
  ! MENOS           [ reduce using rule 24 (expresion -> expresion IGUALQUE expresion .) ]
  ! POR             [ reduce using rule 24 (expresion -> expresion IGUALQUE expresion .) ]
  ! DIVIDIDO        [ reduce using rule 24 (expresion -> expresion IGUALQUE expresion .) ]
  ! MAYQUE          [ reduce using rule 24 (expresion -> expresion IGUALQUE expresion .) ]
  ! MENQUE          [ reduce using rule 24 (expresion -> expresion IGUALQUE expresion .) ]
  ! IGUALQUE        [ reduce using rule 24 (expresion -> expresion IGUALQUE expresion .) ]
  ! NIGUALQUE       [ reduce using rule 24 (expresion -> expresion IGUALQUE expresion .) ]


state 59

    (25) expresion -> expresion NIGUALQUE expresion .
    (18) expresion -> expresion . MAS expresion
    (19) expresion -> expresion . MENOS expresion
    (20) expresion -> expresion . POR expresion
    (21) expresion -> expresion . DIVIDIDO expresion
    (22) expresion -> expresion . MAYQUE expresion
    (23) expresion -> expresion . MENQUE expresion
    (24) expresion -> expresion . IGUALQUE expresion
    (25) expresion -> expresion . NIGUALQUE expresion

  ! shift/reduce conflict for MAS resolved as shift
  ! shift/reduce conflict for MENOS resolved as shift
  ! shift/reduce conflict for POR resolved as shift
  ! shift/reduce conflict for DIVIDIDO resolved as shift
  ! shift/reduce conflict for MAYQUE resolved as shift
  ! shift/reduce conflict for MENQUE resolved as shift
  ! shift/reduce conflict for IGUALQUE resolved as shift
  ! shift/reduce conflict for NIGUALQUE resolved as shift
    PUNTOCOMA       reduce using rule 25 (expresion -> expresion NIGUALQUE expresion .)
    COMA            reduce using rule 25 (expresion -> expresion NIGUALQUE expresion .)
    PARDER          reduce using rule 25 (expresion -> expresion NIGUALQUE expresion .)
    MAS             shift and go to state 37
    MENOS           shift and go to state 38
    POR             shift and go to state 39
    DIVIDIDO        shift and go to state 40
    MAYQUE          shift and go to state 41
    MENQUE          shift and go to state 42
    IGUALQUE        shift and go to state 43
    NIGUALQUE       shift and go to state 44

  ! MAS             [ reduce using rule 25 (expresion -> expresion NIGUALQUE expresion .) ]
  ! MENOS           [ reduce using rule 25 (expresion -> expresion NIGUALQUE expresion .) ]
  ! POR             [ reduce using rule 25 (expresion -> expresion NIGUALQUE expresion .) ]
  ! DIVIDIDO        [ reduce using rule 25 (expresion -> expresion NIGUALQUE expresion .) ]
  ! MAYQUE          [ reduce using rule 25 (expresion -> expresion NIGUALQUE expresion .) ]
  ! MENQUE          [ reduce using rule 25 (expresion -> expresion NIGUALQUE expresion .) ]
  ! IGUALQUE        [ reduce using rule 25 (expresion -> expresion NIGUALQUE expresion .) ]
  ! NIGUALQUE       [ reduce using rule 25 (expresion -> expresion NIGUALQUE expresion .) ]


state 60

    (27) expresion -> PARIZQ expresion PARDER .

    PUNTOCOMA       reduce using rule 27 (expresion -> PARIZQ expresion PARDER .)
    MAS             reduce using rule 27 (expresion -> PARIZQ expresion PARDER .)
    MENOS           reduce using rule 27 (expresion -> PARIZQ expresion PARDER .)
    POR             reduce using rule 27 (expresion -> PARIZQ expresion PARDER .)
    DIVIDIDO        reduce using rule 27 (expresion -> PARIZQ expresion PARDER .)
    MAYQUE          reduce using rule 27 (expresion -> PARIZQ expresion PARDER .)
    MENQUE          reduce using rule 27 (expresion -> PARIZQ expresion PARDER .)
    IGUALQUE        reduce using rule 27 (expresion -> PARIZQ expresion PARDER .)
    NIGUALQUE       reduce using rule 27 (expresion -> PARIZQ expresion PARDER .)
    COMA            reduce using rule 27 (expresion -> PARIZQ expresion PARDER .)
    PARDER          reduce using rule 27 (expresion -> PARIZQ expresion PARDER .)


state 61

    (16) call_funcion_instr -> ID PARIZQ expresion COMA expresion . PARDER PUNTOCOMA
    (18) expresion -> expresion . MAS expresion
    (19) expresion -> expresion . MENOS expresion
    (20) expresion -> expresion . POR expresion
    (21) expresion -> expresion . DIVIDIDO expresion
    (22) expresion -> expresion . MAYQUE expresion
    (23) expresion -> expresion . MENQUE expresion
    (24) expresion -> expresion . IGUALQUE expresion
    (25) expresion -> expresion . NIGUALQUE expresion

    PARDER          shift and go to state 65
    MAS             shift and go to state 37
    MENOS           shift and go to state 38
    POR             shift and go to state 39
    DIVIDIDO        shift and go to state 40
    MAYQUE          shift and go to state 41
    MENQUE          shift and go to state 42
    IGUALQUE        shift and go to state 43
    NIGUALQUE       shift and go to state 44


state 62

    (14) if_instr -> IF PARIZQ expresion PARDER LLAVIZQ . instrucciones LLAVDER PUNTOCOMA
    (17) if_else_instr -> IF PARIZQ expresion PARDER LLAVIZQ . instrucciones LLAVDER ELSE LLAVIZQ instrucciones LLAVDER PUNTOCOMA
    (2) instrucciones -> . instrucciones instruccion
    (3) instrucciones -> . instruccion
    (4) instruccion -> . imprimir_instr
    (5) instruccion -> . declaracion_instr
    (6) instruccion -> . asignacion_instr
    (7) instruccion -> . if_instr
    (8) instruccion -> . if_else_instr
    (9) instruccion -> . funcion_instr
    (10) instruccion -> . call_funcion_instr
    (11) imprimir_instr -> . CONSOLE PUNTO LOG PARIZQ expresion PARDER PUNTOCOMA
    (12) declaracion_instr -> . LET ID IGUAL expresion PUNTOCOMA
    (13) asignacion_instr -> . ID IGUAL expresion PUNTOCOMA
    (14) if_instr -> . IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER PUNTOCOMA
    (17) if_else_instr -> . IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER ELSE LLAVIZQ instrucciones LLAVDER PUNTOCOMA
    (15) funcion_instr -> . FUNCTION ID PARIZQ ID COMA ID PARDER LLAVIZQ instrucciones LLAVDER PUNTOCOMA
    (16) call_funcion_instr -> . ID PARIZQ expresion COMA expresion PARDER PUNTOCOMA

    CONSOLE         shift and go to state 11
    LET             shift and go to state 12
    ID              shift and go to state 13
    IF              shift and go to state 14
    FUNCTION        shift and go to state 15

    instrucciones                  shift and go to state 66
    instruccion                    shift and go to state 3
    imprimir_instr                 shift and go to state 4
    declaracion_instr              shift and go to state 5
    asignacion_instr               shift and go to state 6
    if_instr                       shift and go to state 7
    if_else_instr                  shift and go to state 8
    funcion_instr                  shift and go to state 9
    call_funcion_instr             shift and go to state 10

state 63

    (15) funcion_instr -> FUNCTION ID PARIZQ ID COMA . ID PARDER LLAVIZQ instrucciones LLAVDER PUNTOCOMA

    ID              shift and go to state 67


state 64

    (11) imprimir_instr -> CONSOLE PUNTO LOG PARIZQ expresion PARDER . PUNTOCOMA

    PUNTOCOMA       shift and go to state 68


state 65

    (16) call_funcion_instr -> ID PARIZQ expresion COMA expresion PARDER . PUNTOCOMA

    PUNTOCOMA       shift and go to state 69


state 66

    (14) if_instr -> IF PARIZQ expresion PARDER LLAVIZQ instrucciones . LLAVDER PUNTOCOMA
    (17) if_else_instr -> IF PARIZQ expresion PARDER LLAVIZQ instrucciones . LLAVDER ELSE LLAVIZQ instrucciones LLAVDER PUNTOCOMA
    (2) instrucciones -> instrucciones . instruccion
    (4) instruccion -> . imprimir_instr
    (5) instruccion -> . declaracion_instr
    (6) instruccion -> . asignacion_instr
    (7) instruccion -> . if_instr
    (8) instruccion -> . if_else_instr
    (9) instruccion -> . funcion_instr
    (10) instruccion -> . call_funcion_instr
    (11) imprimir_instr -> . CONSOLE PUNTO LOG PARIZQ expresion PARDER PUNTOCOMA
    (12) declaracion_instr -> . LET ID IGUAL expresion PUNTOCOMA
    (13) asignacion_instr -> . ID IGUAL expresion PUNTOCOMA
    (14) if_instr -> . IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER PUNTOCOMA
    (17) if_else_instr -> . IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER ELSE LLAVIZQ instrucciones LLAVDER PUNTOCOMA
    (15) funcion_instr -> . FUNCTION ID PARIZQ ID COMA ID PARDER LLAVIZQ instrucciones LLAVDER PUNTOCOMA
    (16) call_funcion_instr -> . ID PARIZQ expresion COMA expresion PARDER PUNTOCOMA

    LLAVDER         shift and go to state 70
    CONSOLE         shift and go to state 11
    LET             shift and go to state 12
    ID              shift and go to state 13
    IF              shift and go to state 14
    FUNCTION        shift and go to state 15

    instruccion                    shift and go to state 16
    imprimir_instr                 shift and go to state 4
    declaracion_instr              shift and go to state 5
    asignacion_instr               shift and go to state 6
    if_instr                       shift and go to state 7
    if_else_instr                  shift and go to state 8
    funcion_instr                  shift and go to state 9
    call_funcion_instr             shift and go to state 10

state 67

    (15) funcion_instr -> FUNCTION ID PARIZQ ID COMA ID . PARDER LLAVIZQ instrucciones LLAVDER PUNTOCOMA

    PARDER          shift and go to state 71


state 68

    (11) imprimir_instr -> CONSOLE PUNTO LOG PARIZQ expresion PARDER PUNTOCOMA .

    CONSOLE         reduce using rule 11 (imprimir_instr -> CONSOLE PUNTO LOG PARIZQ expresion PARDER PUNTOCOMA .)
    LET             reduce using rule 11 (imprimir_instr -> CONSOLE PUNTO LOG PARIZQ expresion PARDER PUNTOCOMA .)
    ID              reduce using rule 11 (imprimir_instr -> CONSOLE PUNTO LOG PARIZQ expresion PARDER PUNTOCOMA .)
    IF              reduce using rule 11 (imprimir_instr -> CONSOLE PUNTO LOG PARIZQ expresion PARDER PUNTOCOMA .)
    FUNCTION        reduce using rule 11 (imprimir_instr -> CONSOLE PUNTO LOG PARIZQ expresion PARDER PUNTOCOMA .)
    $end            reduce using rule 11 (imprimir_instr -> CONSOLE PUNTO LOG PARIZQ expresion PARDER PUNTOCOMA .)
    LLAVDER         reduce using rule 11 (imprimir_instr -> CONSOLE PUNTO LOG PARIZQ expresion PARDER PUNTOCOMA .)


state 69

    (16) call_funcion_instr -> ID PARIZQ expresion COMA expresion PARDER PUNTOCOMA .

    CONSOLE         reduce using rule 16 (call_funcion_instr -> ID PARIZQ expresion COMA expresion PARDER PUNTOCOMA .)
    LET             reduce using rule 16 (call_funcion_instr -> ID PARIZQ expresion COMA expresion PARDER PUNTOCOMA .)
    ID              reduce using rule 16 (call_funcion_instr -> ID PARIZQ expresion COMA expresion PARDER PUNTOCOMA .)
    IF              reduce using rule 16 (call_funcion_instr -> ID PARIZQ expresion COMA expresion PARDER PUNTOCOMA .)
    FUNCTION        reduce using rule 16 (call_funcion_instr -> ID PARIZQ expresion COMA expresion PARDER PUNTOCOMA .)
    $end            reduce using rule 16 (call_funcion_instr -> ID PARIZQ expresion COMA expresion PARDER PUNTOCOMA .)
    LLAVDER         reduce using rule 16 (call_funcion_instr -> ID PARIZQ expresion COMA expresion PARDER PUNTOCOMA .)


state 70

    (14) if_instr -> IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER . PUNTOCOMA
    (17) if_else_instr -> IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER . ELSE LLAVIZQ instrucciones LLAVDER PUNTOCOMA

    PUNTOCOMA       shift and go to state 72
    ELSE            shift and go to state 73


state 71

    (15) funcion_instr -> FUNCTION ID PARIZQ ID COMA ID PARDER . LLAVIZQ instrucciones LLAVDER PUNTOCOMA

    LLAVIZQ         shift and go to state 74


state 72

    (14) if_instr -> IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER PUNTOCOMA .

    CONSOLE         reduce using rule 14 (if_instr -> IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER PUNTOCOMA .)
    LET             reduce using rule 14 (if_instr -> IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER PUNTOCOMA .)
    ID              reduce using rule 14 (if_instr -> IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER PUNTOCOMA .)
    IF              reduce using rule 14 (if_instr -> IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER PUNTOCOMA .)
    FUNCTION        reduce using rule 14 (if_instr -> IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER PUNTOCOMA .)
    $end            reduce using rule 14 (if_instr -> IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER PUNTOCOMA .)
    LLAVDER         reduce using rule 14 (if_instr -> IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER PUNTOCOMA .)


state 73

    (17) if_else_instr -> IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER ELSE . LLAVIZQ instrucciones LLAVDER PUNTOCOMA

    LLAVIZQ         shift and go to state 75


state 74

    (15) funcion_instr -> FUNCTION ID PARIZQ ID COMA ID PARDER LLAVIZQ . instrucciones LLAVDER PUNTOCOMA
    (2) instrucciones -> . instrucciones instruccion
    (3) instrucciones -> . instruccion
    (4) instruccion -> . imprimir_instr
    (5) instruccion -> . declaracion_instr
    (6) instruccion -> . asignacion_instr
    (7) instruccion -> . if_instr
    (8) instruccion -> . if_else_instr
    (9) instruccion -> . funcion_instr
    (10) instruccion -> . call_funcion_instr
    (11) imprimir_instr -> . CONSOLE PUNTO LOG PARIZQ expresion PARDER PUNTOCOMA
    (12) declaracion_instr -> . LET ID IGUAL expresion PUNTOCOMA
    (13) asignacion_instr -> . ID IGUAL expresion PUNTOCOMA
    (14) if_instr -> . IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER PUNTOCOMA
    (17) if_else_instr -> . IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER ELSE LLAVIZQ instrucciones LLAVDER PUNTOCOMA
    (15) funcion_instr -> . FUNCTION ID PARIZQ ID COMA ID PARDER LLAVIZQ instrucciones LLAVDER PUNTOCOMA
    (16) call_funcion_instr -> . ID PARIZQ expresion COMA expresion PARDER PUNTOCOMA

    CONSOLE         shift and go to state 11
    LET             shift and go to state 12
    ID              shift and go to state 13
    IF              shift and go to state 14
    FUNCTION        shift and go to state 15

    instrucciones                  shift and go to state 76
    instruccion                    shift and go to state 3
    imprimir_instr                 shift and go to state 4
    declaracion_instr              shift and go to state 5
    asignacion_instr               shift and go to state 6
    if_instr                       shift and go to state 7
    if_else_instr                  shift and go to state 8
    funcion_instr                  shift and go to state 9
    call_funcion_instr             shift and go to state 10

state 75

    (17) if_else_instr -> IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER ELSE LLAVIZQ . instrucciones LLAVDER PUNTOCOMA
    (2) instrucciones -> . instrucciones instruccion
    (3) instrucciones -> . instruccion
    (4) instruccion -> . imprimir_instr
    (5) instruccion -> . declaracion_instr
    (6) instruccion -> . asignacion_instr
    (7) instruccion -> . if_instr
    (8) instruccion -> . if_else_instr
    (9) instruccion -> . funcion_instr
    (10) instruccion -> . call_funcion_instr
    (11) imprimir_instr -> . CONSOLE PUNTO LOG PARIZQ expresion PARDER PUNTOCOMA
    (12) declaracion_instr -> . LET ID IGUAL expresion PUNTOCOMA
    (13) asignacion_instr -> . ID IGUAL expresion PUNTOCOMA
    (14) if_instr -> . IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER PUNTOCOMA
    (17) if_else_instr -> . IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER ELSE LLAVIZQ instrucciones LLAVDER PUNTOCOMA
    (15) funcion_instr -> . FUNCTION ID PARIZQ ID COMA ID PARDER LLAVIZQ instrucciones LLAVDER PUNTOCOMA
    (16) call_funcion_instr -> . ID PARIZQ expresion COMA expresion PARDER PUNTOCOMA

    CONSOLE         shift and go to state 11
    LET             shift and go to state 12
    ID              shift and go to state 13
    IF              shift and go to state 14
    FUNCTION        shift and go to state 15

    instrucciones                  shift and go to state 77
    instruccion                    shift and go to state 3
    imprimir_instr                 shift and go to state 4
    declaracion_instr              shift and go to state 5
    asignacion_instr               shift and go to state 6
    if_instr                       shift and go to state 7
    if_else_instr                  shift and go to state 8
    funcion_instr                  shift and go to state 9
    call_funcion_instr             shift and go to state 10

state 76

    (15) funcion_instr -> FUNCTION ID PARIZQ ID COMA ID PARDER LLAVIZQ instrucciones . LLAVDER PUNTOCOMA
    (2) instrucciones -> instrucciones . instruccion
    (4) instruccion -> . imprimir_instr
    (5) instruccion -> . declaracion_instr
    (6) instruccion -> . asignacion_instr
    (7) instruccion -> . if_instr
    (8) instruccion -> . if_else_instr
    (9) instruccion -> . funcion_instr
    (10) instruccion -> . call_funcion_instr
    (11) imprimir_instr -> . CONSOLE PUNTO LOG PARIZQ expresion PARDER PUNTOCOMA
    (12) declaracion_instr -> . LET ID IGUAL expresion PUNTOCOMA
    (13) asignacion_instr -> . ID IGUAL expresion PUNTOCOMA
    (14) if_instr -> . IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER PUNTOCOMA
    (17) if_else_instr -> . IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER ELSE LLAVIZQ instrucciones LLAVDER PUNTOCOMA
    (15) funcion_instr -> . FUNCTION ID PARIZQ ID COMA ID PARDER LLAVIZQ instrucciones LLAVDER PUNTOCOMA
    (16) call_funcion_instr -> . ID PARIZQ expresion COMA expresion PARDER PUNTOCOMA

    LLAVDER         shift and go to state 78
    CONSOLE         shift and go to state 11
    LET             shift and go to state 12
    ID              shift and go to state 13
    IF              shift and go to state 14
    FUNCTION        shift and go to state 15

    instruccion                    shift and go to state 16
    imprimir_instr                 shift and go to state 4
    declaracion_instr              shift and go to state 5
    asignacion_instr               shift and go to state 6
    if_instr                       shift and go to state 7
    if_else_instr                  shift and go to state 8
    funcion_instr                  shift and go to state 9
    call_funcion_instr             shift and go to state 10

state 77

    (17) if_else_instr -> IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER ELSE LLAVIZQ instrucciones . LLAVDER PUNTOCOMA
    (2) instrucciones -> instrucciones . instruccion
    (4) instruccion -> . imprimir_instr
    (5) instruccion -> . declaracion_instr
    (6) instruccion -> . asignacion_instr
    (7) instruccion -> . if_instr
    (8) instruccion -> . if_else_instr
    (9) instruccion -> . funcion_instr
    (10) instruccion -> . call_funcion_instr
    (11) imprimir_instr -> . CONSOLE PUNTO LOG PARIZQ expresion PARDER PUNTOCOMA
    (12) declaracion_instr -> . LET ID IGUAL expresion PUNTOCOMA
    (13) asignacion_instr -> . ID IGUAL expresion PUNTOCOMA
    (14) if_instr -> . IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER PUNTOCOMA
    (17) if_else_instr -> . IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER ELSE LLAVIZQ instrucciones LLAVDER PUNTOCOMA
    (15) funcion_instr -> . FUNCTION ID PARIZQ ID COMA ID PARDER LLAVIZQ instrucciones LLAVDER PUNTOCOMA
    (16) call_funcion_instr -> . ID PARIZQ expresion COMA expresion PARDER PUNTOCOMA

    LLAVDER         shift and go to state 79
    CONSOLE         shift and go to state 11
    LET             shift and go to state 12
    ID              shift and go to state 13
    IF              shift and go to state 14
    FUNCTION        shift and go to state 15

    instruccion                    shift and go to state 16
    imprimir_instr                 shift and go to state 4
    declaracion_instr              shift and go to state 5
    asignacion_instr               shift and go to state 6
    if_instr                       shift and go to state 7
    if_else_instr                  shift and go to state 8
    funcion_instr                  shift and go to state 9
    call_funcion_instr             shift and go to state 10

state 78

    (15) funcion_instr -> FUNCTION ID PARIZQ ID COMA ID PARDER LLAVIZQ instrucciones LLAVDER . PUNTOCOMA

    PUNTOCOMA       shift and go to state 80


state 79

    (17) if_else_instr -> IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER ELSE LLAVIZQ instrucciones LLAVDER . PUNTOCOMA

    PUNTOCOMA       shift and go to state 81


state 80

    (15) funcion_instr -> FUNCTION ID PARIZQ ID COMA ID PARDER LLAVIZQ instrucciones LLAVDER PUNTOCOMA .

    CONSOLE         reduce using rule 15 (funcion_instr -> FUNCTION ID PARIZQ ID COMA ID PARDER LLAVIZQ instrucciones LLAVDER PUNTOCOMA .)
    LET             reduce using rule 15 (funcion_instr -> FUNCTION ID PARIZQ ID COMA ID PARDER LLAVIZQ instrucciones LLAVDER PUNTOCOMA .)
    ID              reduce using rule 15 (funcion_instr -> FUNCTION ID PARIZQ ID COMA ID PARDER LLAVIZQ instrucciones LLAVDER PUNTOCOMA .)
    IF              reduce using rule 15 (funcion_instr -> FUNCTION ID PARIZQ ID COMA ID PARDER LLAVIZQ instrucciones LLAVDER PUNTOCOMA .)
    FUNCTION        reduce using rule 15 (funcion_instr -> FUNCTION ID PARIZQ ID COMA ID PARDER LLAVIZQ instrucciones LLAVDER PUNTOCOMA .)
    $end            reduce using rule 15 (funcion_instr -> FUNCTION ID PARIZQ ID COMA ID PARDER LLAVIZQ instrucciones LLAVDER PUNTOCOMA .)
    LLAVDER         reduce using rule 15 (funcion_instr -> FUNCTION ID PARIZQ ID COMA ID PARDER LLAVIZQ instrucciones LLAVDER PUNTOCOMA .)


state 81

    (17) if_else_instr -> IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER ELSE LLAVIZQ instrucciones LLAVDER PUNTOCOMA .

    CONSOLE         reduce using rule 17 (if_else_instr -> IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER ELSE LLAVIZQ instrucciones LLAVDER PUNTOCOMA .)
    LET             reduce using rule 17 (if_else_instr -> IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER ELSE LLAVIZQ instrucciones LLAVDER PUNTOCOMA .)
    ID              reduce using rule 17 (if_else_instr -> IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER ELSE LLAVIZQ instrucciones LLAVDER PUNTOCOMA .)
    IF              reduce using rule 17 (if_else_instr -> IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER ELSE LLAVIZQ instrucciones LLAVDER PUNTOCOMA .)
    FUNCTION        reduce using rule 17 (if_else_instr -> IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER ELSE LLAVIZQ instrucciones LLAVDER PUNTOCOMA .)
    $end            reduce using rule 17 (if_else_instr -> IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER ELSE LLAVIZQ instrucciones LLAVDER PUNTOCOMA .)
    LLAVDER         reduce using rule 17 (if_else_instr -> IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER ELSE LLAVIZQ instrucciones LLAVDER PUNTOCOMA .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for MAS in state 56 resolved as shift
WARNING: shift/reduce conflict for MENOS in state 56 resolved as shift
WARNING: shift/reduce conflict for POR in state 56 resolved as shift
WARNING: shift/reduce conflict for DIVIDIDO in state 56 resolved as shift
WARNING: shift/reduce conflict for MAYQUE in state 56 resolved as shift
WARNING: shift/reduce conflict for MENQUE in state 56 resolved as shift
WARNING: shift/reduce conflict for IGUALQUE in state 56 resolved as shift
WARNING: shift/reduce conflict for NIGUALQUE in state 56 resolved as shift
WARNING: shift/reduce conflict for MAS in state 57 resolved as shift
WARNING: shift/reduce conflict for MENOS in state 57 resolved as shift
WARNING: shift/reduce conflict for POR in state 57 resolved as shift
WARNING: shift/reduce conflict for DIVIDIDO in state 57 resolved as shift
WARNING: shift/reduce conflict for MAYQUE in state 57 resolved as shift
WARNING: shift/reduce conflict for MENQUE in state 57 resolved as shift
WARNING: shift/reduce conflict for IGUALQUE in state 57 resolved as shift
WARNING: shift/reduce conflict for NIGUALQUE in state 57 resolved as shift
WARNING: shift/reduce conflict for MAS in state 58 resolved as shift
WARNING: shift/reduce conflict for MENOS in state 58 resolved as shift
WARNING: shift/reduce conflict for POR in state 58 resolved as shift
WARNING: shift/reduce conflict for DIVIDIDO in state 58 resolved as shift
WARNING: shift/reduce conflict for MAYQUE in state 58 resolved as shift
WARNING: shift/reduce conflict for MENQUE in state 58 resolved as shift
WARNING: shift/reduce conflict for IGUALQUE in state 58 resolved as shift
WARNING: shift/reduce conflict for NIGUALQUE in state 58 resolved as shift
WARNING: shift/reduce conflict for MAS in state 59 resolved as shift
WARNING: shift/reduce conflict for MENOS in state 59 resolved as shift
WARNING: shift/reduce conflict for POR in state 59 resolved as shift
WARNING: shift/reduce conflict for DIVIDIDO in state 59 resolved as shift
WARNING: shift/reduce conflict for MAYQUE in state 59 resolved as shift
WARNING: shift/reduce conflict for MENQUE in state 59 resolved as shift
WARNING: shift/reduce conflict for IGUALQUE in state 59 resolved as shift
WARNING: shift/reduce conflict for NIGUALQUE in state 59 resolved as shift
